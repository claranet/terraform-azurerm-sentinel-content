{
    "kind": "Scheduled",
    "properties": {
        "description": "This query detects events where an actor is stopping or starting HealthService to disable telemetry collection/detection from the agent.\n The query requires a SACL to audit for access request to the service.",
        "displayName": "Starting or Stopping HealthService to Avoid Detection",
        "enabled": true,
        "query": "SecurityEvent\n| where EventID == 4656\n| extend EventData = parse_xml(EventData).EventData.Data\n| mv-expand bagexpansion=array EventData\n| evaluate bag_unpack(EventData)\n| extend Key = tostring(column_ifexists('@Name', \"\")), Value = column_ifexists('#text', \"\")\n| evaluate pivot(Key, any(Value), TimeGenerated, TargetAccount, Computer, EventSourceName, Channel, Task, Level, EventID, Activity, TargetLogonId, SourceComputerId, EventOriginId, Type, _ResourceId, TenantId, SourceSystem, ManagementGroupName, IpAddress, Account)\n| extend ObjectServer = column_ifexists('ObjectServer', \"\"), ObjectType = column_ifexists('ObjectType', \"\"), ObjectName = column_ifexists('ObjectName', \"\")\n| where isnotempty(ObjectServer) and isnotempty(ObjectType) and isnotempty(ObjectName)\n| where ObjectServer =~ \"SC Manager\" and ObjectType =~ \"SERVICE OBJECT\" and ObjectName =~ \"HealthService\"\n// Comment out the join below if the SACL only audits users that are part of the Network logon users, i.e. with user/group target pointing to \"NU.\"\n| join kind=leftouter (\n  SecurityEvent\n  | where EventID == 4624\n) on TargetLogonId\n| project TimeGenerated, Computer, Account, TargetAccount, IpAddress,TargetLogonId, ObjectServer, ObjectType, ObjectName\n| extend HostName = tostring(split(Computer, \".\")[0]), DomainIndex = toint(indexof(Computer, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(Computer, DomainIndex + 1), Computer)\n| extend AccountName = tostring(split(TargetAccount, @'\\')[1]), AccountNTDomain = tostring(split(TargetAccount, @'\\')[0])\n| extend timestamp = TimeGenerated\n",
        "queryFrequency": "P1D",
        "queryPeriod": "P1D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
            "DefenseEvasion"
        ],
        "techniques": [
            "T1562"
        ],
        "entityMappings": [
            {
                "fieldMappings": [
                    {
                        "identifier": "FullName",
                        "columnName": "TargetAccount"
                    },
                    {
                        "identifier": "Name",
                        "columnName": "AccountName"
                    },
                    {
                        "identifier": "NTDomain",
                        "columnName": "AccountNTDomain"
                    }
                ],
                "entityType": "Account"
            },
            {
                "fieldMappings": [
                    {
                        "identifier": "FullName",
                        "columnName": "Computer"
                    },
                    {
                        "identifier": "HostName",
                        "columnName": "HostName"
                    },
                    {
                        "identifier": "DnsDomain",
                        "columnName": "HostNameDomain"
                    }
                ],
                "entityType": "Host"
            },
            {
                "fieldMappings": [
                    {
                        "identifier": "Address",
                        "columnName": "IpAddress"
                    }
                ],
                "entityType": "IP"
            }
        ],
        "alertRuleTemplateName": "2bc7b4ae-eeaa-4538-ba15-ef298ec1ffae",
        "templateVersion": "1.0.2"
    }
}
