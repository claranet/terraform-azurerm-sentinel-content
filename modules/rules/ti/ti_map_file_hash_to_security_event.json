{
    "kind": "Scheduled",
    "properties": {
        "description": "Identifies a match in Security Event data from any File Hash IOC from TI",
        "displayName": "TI map File Hash to Security Event",
        "enabled": true,
        "query": "let dt_lookBack = 1h;\nlet ioc_lookBack = 14d;\nThreatIntelligenceIndicator\n| where isnotempty(FileHashValue)\n| where TimeGenerated >= ago(ioc_lookBack)\n| extend FileHashValue = toupper(FileHashValue)\n| summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n| where Active == true and ExpirationDateTime > now()\n// using innerunique to keep perf fast and result set low, we only need one match to indicate potential malicious activity that needs to be investigated\n| join kind=innerunique ( union isfuzzy=true\n  (SecurityEvent | where TimeGenerated >= ago(dt_lookBack)\n      | where EventID in (\"8003\",\"8002\",\"8005\")\n      | where isnotempty(FileHash)\n      | extend SecurityEvent_TimeGenerated = TimeGenerated, Event = EventID, FileHash = toupper(FileHash)\n  ),\n  (WindowsEvent | where TimeGenerated >= ago(dt_lookBack)\n      | where EventID in (\"8003\",\"8002\",\"8005\")\n      | where isnotempty(EventData.FileHash)\n      | extend SecurityEvent_TimeGenerated = TimeGenerated, Event = EventID, FileHash = toupper(EventData.FileHash)\n  )\n)\non $left.FileHashValue == $right.FileHash\n| where SecurityEvent_TimeGenerated < ExpirationDateTime\n| summarize SecurityEvent_TimeGenerated = arg_max(SecurityEvent_TimeGenerated, *) by IndicatorId, FileHash\n| project SecurityEvent_TimeGenerated, Description, ActivityGroupNames, IndicatorId, ThreatType, Url, ExpirationDateTime, ConfidenceScore,\nProcess, FileHash, Computer, Account, Event, FileHashValue, FileHashType\n| extend NTDomain = tostring(split(Account, '\\\\', 0)[0]), Name = tostring(split(Account, '\\\\', 1)[0])\n| extend HostName = tostring(split(Computer, '.', 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(Computer, '.'), 1, -1), '.')) \n| extend timestamp = SecurityEvent_TimeGenerated\n",
        "queryFrequency": "PT1H",
        "queryPeriod": "P14D",
        "severity": "Medium",
        "suppressionDuration": "PT1H",
        "suppressionEnabled": false,
        "triggerOperator": "GreaterThan",
        "triggerThreshold": 0,
        "tactics": [
            "Impact"
        ],
        "entityMappings": [
            {
                "fieldMappings": [
                    {
                        "columnName": "Name",
                        "identifier": "Name"
                    },
                    {
                        "columnName": "NTDomain",
                        "identifier": "NTDomain"
                    }
                ],
                "entityType": "Account"
            },
            {
                "fieldMappings": [
                    {
                        "columnName": "HostName",
                        "identifier": "HostName"
                    },
                    {
                        "columnName": "DnsDomain",
                        "identifier": "DnsDomain"
                    }
                ],
                "entityType": "Host"
            },
            {
                "fieldMappings": [
                    {
                        "columnName": "Url",
                        "identifier": "Url"
                    }
                ],
                "entityType": "URL"
            },
            {
                "fieldMappings": [
                    {
                        "columnName": "FileHashValue",
                        "identifier": "Value"
                    },
                    {
                        "columnName": "FileHashType",
                        "identifier": "Algorithm"
                    }
                ],
                "entityType": "FileHash"
            }
        ],
        "alertRuleTemplateName": "a7427ed7-04b4-4e3b-b323-08b981b9b4bf",
        "templateVersion": "1.4.4"
    }
}
