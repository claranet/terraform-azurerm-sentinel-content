{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String",
            "minLength": 1,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
            }
        },
        "workspace-location": {
            "type": "String",
            "defaultValue": "",
            "metadata": {
                "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
            }
        },
        "workspace": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
            }
        }
    },
    "resources": [
        {
            "name": "pid-f4e33ccb-a961-4bde-8f74-f1ba3bc32580-partnercenter",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring('AzureActiveDirectory')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Microsoft Entra ID data connector with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','AzureActiveDirectory')]",
                            "apiVersion": "2021-03-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "StaticUI",
                            "properties": {
                                "connectorUiConfig": {
                                    "id": "AzureActiveDirectory",
                                    "title": "Microsoft Entra ID",
                                    "publisher": "Microsoft",
                                    "descriptionMarkdown": "Gain insights into Microsoft Entra ID by connecting Audit and Sign-in logs to Microsoft Sentinel to gather insights around Microsoft Entra ID scenarios. You can learn about app usage, conditional access policies, legacy auth relate details using our Sign-in logs. You can get information on your Self Service Password Reset (SSPR) usage, Microsoft Entra ID Management activities like user, group, role, app management using our Audit logs table. For more information, see the [Microsoft Sentinel documentation](https://go.microsoft.com/fwlink/?linkid=2219715&wt.mc_id=sentinel_dataconnectordocs_content_cnl_csasci).",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "SigninLogs",
                                            "baseQuery": "SigninLogs"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "AuditLogs",
                                            "baseQuery": "AuditLogs"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "AADNonInteractiveUserSignInLogs",
                                            "baseQuery": "AADNonInteractiveUserSignInLogs"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "AADServicePrincipalSignInLogs",
                                            "baseQuery": "AADServicePrincipalSignInLogs"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "AADManagedIdentitySignInLogs",
                                            "baseQuery": "AADManagedIdentitySignInLogs"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "AADProvisioningLogs",
                                            "baseQuery": "AADProvisioningLogs"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "ADFSSignInLogs",
                                            "baseQuery": "ADFSSignInLogs"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "AADUserRiskEvents",
                                            "baseQuery": "AADUserRiskEvents"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "AADRiskyUsers",
                                            "baseQuery": "AADRiskyUsers"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "NetworkAccessTraffic",
                                            "baseQuery": "NetworkAccessTraffic"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "AADRiskyServicePrincipals",
                                            "baseQuery": "AADRiskyServicePrincipals"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "AADServicePrincipalRiskEvents",
                                            "baseQuery": "AADServicePrincipalRiskEvents"
                                        }
                                    ],
                                    "connectivityCriterias": [
                                        {
                                            "type": "IsConnectedQuery",
                                            "value": [
                                                "SigninLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "AuditLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "AADNonInteractiveUserSignInLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "AADServicePrincipalSignInLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "AADManagedIdentitySignInLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "AADProvisioningLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "ADFSSignInLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "AADUserRiskEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "AADRiskyUsers\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "NetworkAccessTraffic\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "AADRiskyServicePrincipals\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                                "AADServicePrincipalRiskEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                                            ]
                                        }
                                    ],
                                    "dataTypes": [
                                        {
                                            "name": "SigninLogs",
                                            "lastDataReceivedQuery": "SigninLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "AuditLogs",
                                            "lastDataReceivedQuery": "AuditLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "AADNonInteractiveUserSignInLogs",
                                            "lastDataReceivedQuery": "AADNonInteractiveUserSignInLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "AADServicePrincipalSignInLogs",
                                            "lastDataReceivedQuery": "AADServicePrincipalSignInLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "AADManagedIdentitySignInLogs",
                                            "lastDataReceivedQuery": "AADManagedIdentitySignInLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "AADProvisioningLogs",
                                            "lastDataReceivedQuery": "AADProvisioningLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "ADFSSignInLogs",
                                            "lastDataReceivedQuery": "ADFSSignInLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "AADUserRiskEvents",
                                            "lastDataReceivedQuery": "AADUserRiskEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "AADRiskyUsers",
                                            "lastDataReceivedQuery": "AADRiskyUsers\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "NetworkAccessTraffic",
                                            "lastDataReceivedQuery": "NetworkAccessTraffic\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "AADRiskyServicePrincipals",
                                            "lastDataReceivedQuery": "AADRiskyServicePrincipals\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "AADServicePrincipalRiskEvents",
                                            "lastDataReceivedQuery": "AADServicePrincipalRiskEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2023-04-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AzureActiveDirectory'),'/'))))]",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AzureActiveDirectory')]",
                                "contentId": "AzureActiveDirectory",
                                "kind": "DataConnector",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "AzureActiveDirectory",
                "contentKind": "DataConnector",
                "displayName": "Microsoft Entra ID",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-dc-drcdnc4ex4peg",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-dc-drcdnc4ex4peg",
                "version": "1.0.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AzureActiveDirectory'),'/'))))]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AzureActiveDirectory')]"
            ],
            "location": "[parameters('workspace-location')]",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', 'AzureActiveDirectory')]",
                "contentId": "AzureActiveDirectory",
                "kind": "DataConnector",
                "version": "1.0.0",
                "source": {
                    "kind": "Solution",
                    "name": "Microsoft Entra ID",
                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                },
                "author": {
                    "name": "Microsoft",
                    "email": "support@microsoft.com"
                },
                "support": {
                    "tier": "Microsoft",
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "link": "https://support.microsoft.com/"
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/','AzureActiveDirectory')]",
            "apiVersion": "2021-03-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
            "location": "[parameters('workspace-location')]",
            "kind": "StaticUI",
            "properties": {
                "connectorUiConfig": {
                    "title": "Microsoft Entra ID",
                    "publisher": "Microsoft",
                    "descriptionMarkdown": "Gain insights into Microsoft Entra ID by connecting Audit and Sign-in logs to Microsoft Sentinel to gather insights around Microsoft Entra ID scenarios. You can learn about app usage, conditional access policies, legacy auth relate details using our Sign-in logs. You can get information on your Self Service Password Reset (SSPR) usage, Microsoft Entra ID Management activities like user, group, role, app management using our Audit logs table. For more information, see the [Microsoft Sentinel documentation](https://go.microsoft.com/fwlink/?linkid=2219715&wt.mc_id=sentinel_dataconnectordocs_content_cnl_csasci).",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "SigninLogs",
                            "baseQuery": "SigninLogs"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "AuditLogs",
                            "baseQuery": "AuditLogs"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "AADNonInteractiveUserSignInLogs",
                            "baseQuery": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "AADServicePrincipalSignInLogs",
                            "baseQuery": "AADServicePrincipalSignInLogs"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "AADManagedIdentitySignInLogs",
                            "baseQuery": "AADManagedIdentitySignInLogs"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "AADProvisioningLogs",
                            "baseQuery": "AADProvisioningLogs"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "ADFSSignInLogs",
                            "baseQuery": "ADFSSignInLogs"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "AADUserRiskEvents",
                            "baseQuery": "AADUserRiskEvents"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "AADRiskyUsers",
                            "baseQuery": "AADRiskyUsers"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "NetworkAccessTraffic",
                            "baseQuery": "NetworkAccessTraffic"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "AADRiskyServicePrincipals",
                            "baseQuery": "AADRiskyServicePrincipals"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "AADServicePrincipalRiskEvents",
                            "baseQuery": "AADServicePrincipalRiskEvents"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "SigninLogs",
                            "lastDataReceivedQuery": "SigninLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "AuditLogs",
                            "lastDataReceivedQuery": "AuditLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "AADNonInteractiveUserSignInLogs",
                            "lastDataReceivedQuery": "AADNonInteractiveUserSignInLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "AADServicePrincipalSignInLogs",
                            "lastDataReceivedQuery": "AADServicePrincipalSignInLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "AADManagedIdentitySignInLogs",
                            "lastDataReceivedQuery": "AADManagedIdentitySignInLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "AADProvisioningLogs",
                            "lastDataReceivedQuery": "AADProvisioningLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "ADFSSignInLogs",
                            "lastDataReceivedQuery": "ADFSSignInLogs\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "AADUserRiskEvents",
                            "lastDataReceivedQuery": "AADUserRiskEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "AADRiskyUsers",
                            "lastDataReceivedQuery": "AADRiskyUsers\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "NetworkAccessTraffic",
                            "lastDataReceivedQuery": "NetworkAccessTraffic\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "AADRiskyServicePrincipals",
                            "lastDataReceivedQuery": "AADRiskyServicePrincipals\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "AADServicePrincipalRiskEvents",
                            "lastDataReceivedQuery": "AADServicePrincipalRiskEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriterias": [
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "SigninLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "AuditLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "AADNonInteractiveUserSignInLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "AADServicePrincipalSignInLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "AADManagedIdentitySignInLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "AADProvisioningLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "ADFSSignInLogs\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "AADUserRiskEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "AADRiskyUsers\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "NetworkAccessTraffic\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "AADRiskyServicePrincipals\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                                "AADServicePrincipalRiskEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                            ]
                        }
                    ],
                    "id": "AzureActiveDirectory"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring('AzureActiveDirectoryAuditLogsWorkbook')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "AzureActiveDirectoryAuditLogs Workbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.2.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Insights/workbooks",
                            "name": "AzureActiveDirectoryAuditLogsWorkbook",
                            "location": "[parameters('workspace-location')]",
                            "kind": "shared",
                            "apiVersion": "2021-08-01",
                            "metadata": {
                                "description": "Gain insights into Microsoft Entra ID by connecting Microsoft Sentinel and using the audit logs to gather insights around Microsoft Entra ID scenarios. \nYou can learn about user operations, including password and group management, device activities, and top active users and apps."
                            },
                            "properties": {
                                "displayName": "Microsoft Entra ID Audit logs",
                                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Microsoft Entra ID audit logs\"},\"name\":\"text - 1\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"bc372bf5-2dcd-4efa-aa85-94b6e6fafe14\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":7776000000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true}},{\"id\":\"e032b9f7-5449-4180-9c20-75760afa96f6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"User\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"AuditLogs\\r\\n| where SourceSystem == \\\"Azure AD\\\"\\r\\n| extend initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \\\"\\\", tostring(InitiatedBy.user.userPrincipalName), \\\"unknown\\\")\\r\\n//| where initiator!= \\\"\\\"\\r\\n| summarize Count = count() by initiator\\r\\n| order by Count desc, initiator asc\\r\\n| project Value = initiator, Label = strcat(initiator, ' - ', Count), Selected = false\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"All\"},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"0a59a0b3-6d93-4fee-bdbe-147383c510c6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Category\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"AuditLogs\\r\\n| extend initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \\\"\\\", tostring(InitiatedBy.user.userPrincipalName), \\\"unknown\\\")\\r\\n| where \\\"{User:lable}\\\" == \\\"All\\\" or initiator in ({User})\\r\\n| summarize Count = count() by Category\\r\\n| order by Count desc, Category asc\\r\\n| project Value = Category, Label = strcat(Category, ' - ', Count)\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"All\"},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"4d2b245b-5e59-4eb6-9f51-ba926581ab47\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Result\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"AuditLogs\\r\\n| extend initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \\\"\\\", tostring(InitiatedBy.user.userPrincipalName), \\\"unknown\\\")\\r\\n| where \\\"{User:lable}\\\" == \\\"All\\\" or initiator in ({User})\\r\\n| summarize Count = count() by Result\\r\\n| order by Count desc, Result asc\\r\\n| project Value = Result, Label = strcat(Result, ' - ', Count, ' sign-ins')\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"All\"},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = AuditLogs\\r\\n| where \\\"{Category:lable}\\\" == \\\"All\\\" or Category in ({Category})\\r\\n| where \\\"{Result:lable}\\\" == \\\"All\\\" or Result in ({Result})\\r\\n| extend initiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\\r\\n| where initiatingUserPrincipalName != \\\"\\\" \\r\\n| where \\\"{User:lable}\\\" == \\\"All\\\" or initiatingUserPrincipalName in ({User});\\r\\ndata\\r\\n| summarize Count = count() by Category\\r\\n| join kind = fullouter (datatable(Category:string)['Medium', 'high', 'low']) on Category\\r\\n| project Category = iff(Category == '', Category1, Category), Count = iff(Category == '', 0, Count)\\r\\n| join kind = inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by Category)\\r\\n    on Category\\r\\n| project-away Category1, TimeGenerated\\r\\n| extend Category = Category\\r\\n| union (\\r\\n    data \\r\\n    | summarize Count = count() \\r\\n    | extend jkey = 1\\r\\n    | join kind=inner (data\\r\\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\\r\\n        | extend jkey = 1) on jkey\\r\\n    | extend Category = 'All', Categorys = '*'    \\r\\n)\\r\\n| order by Count desc\\r\\n| take 10\",\"size\":4,\"title\":\"Categories volume\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"Category\",\"exportParameterName\":\"CategoryFIlter\",\"exportDefaultValue\":\"All\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Category\",\"formatter\":1,\"formatOptions\":{\"showIcon\":true}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\",\"showIcon\":true},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":21,\"formatOptions\":{\"palette\":\"purple\",\"showIcon\":true}},\"showBorder\":false}},\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = AuditLogs\\r\\n| where \\\"{Result:lable}\\\" == \\\"All\\\" or Result in ({Result})\\r\\n| extend initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \\\"\\\", tostring(InitiatedBy.user.userPrincipalName), \\\"unknown\\\")\\r\\n| where \\\"{User:lable}\\\" == \\\"All\\\" or initiator in ({User})\\r\\n| where \\\"{Category:lable}\\\" == \\\"All\\\" or Category in ({Category})\\r\\n| where Category == '{CategoryFIlter}' or '{CategoryFIlter}' == \\\"All\\\";\\r\\nlet appData = data\\r\\n| summarize TotalCount = count() by OperationName, Category\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by OperationName\\r\\n    | project-away TimeGenerated) on OperationName\\r\\n| order by TotalCount desc, OperationName asc\\r\\n| project OperationName, TotalCount, Trend, Category\\r\\n| serialize Id = row_number();\\r\\ndata\\r\\n| summarize TotalCount = count() by initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \\\"\\\", tostring(InitiatedBy.user.userPrincipalName), \\\"unknown\\\"), Category, OperationName\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by OperationName, initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \\\"\\\", tostring(InitiatedBy.user.userPrincipalName), \\\"unknown\\\")\\r\\n    | project-away TimeGenerated) on OperationName, initiator\\r\\n| order by TotalCount desc, OperationName asc\\r\\n| project OperationName, initiator, TotalCount, Category, Trend\\r\\n| serialize Id = row_number(1000000)\\r\\n| join kind=inner (appData) on OperationName\\r\\n| project Id, Name = initiator, Type = 'initiator', ['Operations Count'] = TotalCount, Trend, Category, ParentId = Id1\\r\\n| union (appData \\r\\n    | project Id, Name = OperationName, Type = 'Operation', ['Operations Count'] = TotalCount, Category, Trend)\\r\\n| order by ['Operations Count'] desc, Name asc\",\"size\":0,\"showAnalytics\":true,\"title\":\"User activities\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"exportParameterName\":\"UserInfo\",\"exportDefaultValue\":\"{ \\\"Name\\\":\\\"\\\", \\\"Type\\\":\\\"*\\\"}\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Id\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Type\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Operations Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"min\":0,\"palette\":\"turquoise\",\"showIcon\":true},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"ParentId\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}}],\"rowLimit\":1000,\"filter\":true,\"hierarchySettings\":{\"idColumn\":\"Id\",\"parentColumn\":\"ParentId\",\"treeType\":0,\"expanderColumn\":\"Name\"}}},\"customWidth\":\"70\",\"showPin\":true,\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let details = dynamic({UserInfo});\\r\\nAuditLogs\\r\\n| where \\\"{Category:lable}\\\" == \\\"All\\\" or Category in ({Category})\\r\\n| where \\\"{Result:lable}\\\" == \\\"All\\\" or Result in ({Result})\\r\\n| extend initiatingUserPrincipalName = iif (tostring(InitiatedBy.user.userPrincipalName) != \\\"\\\", tostring(InitiatedBy.user.userPrincipalName), \\\"unknown\\\")\\r\\n//| where initiatingUserPrincipalName != \\\"\\\" \\r\\n| where \\\"{User:lable}\\\" == \\\"All\\\" or initiatingUserPrincipalName in ({User})\\r\\n| where details.Type == '*' or (details.Type == 'initiator' and initiatingUserPrincipalName == details.Name) or (details.Type == 'Operation' and OperationName == details.Name)\\r\\n| summarize Activities = count() by initiatingUserPrincipalName\\r\\n| sort by Activities desc nulls last \",\"size\":0,\"title\":\"Top active users\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\"},\"customWidth\":\"30\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let details = dynamic({UserInfo});\\r\\nlet data = AuditLogs\\r\\n| extend initiator = iif (tostring(InitiatedBy.user.userPrincipalName) != \\\"\\\", tostring(InitiatedBy.user.userPrincipalName), \\\"unknown\\\")\\r\\n| where details.Type == '*' or (details.Type == 'initiator' and initiator == details.Name) or (details.Type == 'Operation' and OperationName == details.Name)\\r\\n| where \\\"{Category:lable}\\\" == \\\"All\\\" or Category in ({Category})\\r\\n| where \\\"{Result:lable}\\\" == \\\"All\\\" or Result in ({Result})\\r\\n| where \\\"{User:lable}\\\" == \\\"All\\\" or initiator in ({User});\\r\\nlet appData = data\\r\\n| summarize TotalCount = count() by Result\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Result\\r\\n    | project-away TimeGenerated) on Result\\r\\n| order by TotalCount desc, Result asc\\r\\n| project Result, TotalCount, Trend\\r\\n| serialize Id = row_number();\\r\\ndata\\r\\n| summarize TotalCount = count() by OperationName, Result\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Result, OperationName\\r\\n    | project-away TimeGenerated) on Result, OperationName\\r\\n| order by TotalCount desc, Result asc\\r\\n| project Result, OperationName, TotalCount, Trend\\r\\n| serialize Id = row_number(1000000)\\r\\n| join kind=inner (appData) on Result\\r\\n| project Id, Name = OperationName, Type = 'Operation', ['Results Count'] = TotalCount, Trend, ParentId = Id1\\r\\n| union (appData \\r\\n    | project Id, Name = Result, Type = 'Result', ['Results Count'] = TotalCount, Trend)\\r\\n| order by ['Results Count'] desc, Name asc\",\"size\":0,\"title\":\"Result status\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"exportParameterName\":\"ResultInfo\",\"exportDefaultValue\":\"{ \\\"Name\\\":\\\"\\\", \\\"Type\\\":\\\"*\\\"}\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Id\",\"formatter\":5},{\"columnMatch\":\"Type\",\"formatter\":5},{\"columnMatch\":\"Results Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"grayBlue\"}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"greenDark\"}},{\"columnMatch\":\"ParentId\",\"formatter\":5}],\"hierarchySettings\":{\"idColumn\":\"Id\",\"parentColumn\":\"ParentId\",\"treeType\":0,\"expanderColumn\":\"Name\"}}},\"customWidth\":\"70\",\"name\":\"query - 5\"}],\"fallbackResourceIds\":[\"\"],\"fromTemplateId\":\"sentinel-AzureActiveDirectoryAuditLogs\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                                "version": "1.0",
                                "sourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
                                "category": "sentinel"
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(resourceId('Microsoft.Insights/workbooks', 'AzureActiveDirectoryAuditLogsWorkbook'),'/'))))]",
                            "properties": {
                                "description": "@{workbookKey=AzureActiveDirectoryAuditLogsWorkbook; logoFileName=azureactivedirectory_logo.svg; description=Gain insights into Microsoft Entra ID by connecting Microsoft Sentinel and using the audit logs to gather insights around Microsoft Entra ID scenarios. \nYou can learn about user operations, including password and group management, device activities, and top active users and apps.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.2.0; title=Microsoft Entra ID Audit logs; templateRelativePath=AzureActiveDirectoryAuditLogs.json; subtitle=; provider=Microsoft}.description",
                                "parentId": "[resourceId('Microsoft.Insights/workbooks', 'AzureActiveDirectoryAuditLogsWorkbook')]",
                                "contentId": "AzureActiveDirectoryAuditLogsWorkbook",
                                "kind": "Workbook",
                                "version": "1.2.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                },
                                "dependencies": {
                                    "operator": "AND",
                                    "criteria": [
                                        {
                                            "contentId": "AuditLogs",
                                            "kind": "DataType"
                                        },
                                        {
                                            "contentId": "AzureActiveDirectory",
                                            "kind": "DataConnector"
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "AzureActiveDirectoryAuditLogsWorkbook",
                "contentKind": "Workbook",
                "displayName": "Microsoft Entra ID Audit logs",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-wb-6zxg23u7koyju",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-wb-6zxg23u7koyju",
                "version": "1.2.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring('AzureActiveDirectorySigninLogsWorkbook')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "AzureActiveDirectorySignins Workbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "2.4.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Insights/workbooks",
                            "name": "AzureActiveDirectorySigninLogsWorkbook",
                            "location": "[parameters('workspace-location')]",
                            "kind": "shared",
                            "apiVersion": "2021-08-01",
                            "metadata": {
                                "description": "Gain insights into Microsoft Entra ID by connecting Microsoft Sentinel and using the sign-in logs to gather insights around Microsoft Entra ID scenarios. \nYou can learn about sign-in operations, such as user sign-ins and locations, email addresses, and  IP addresses of your users, as well as failed activities and the errors that triggered the failures."
                            },
                            "properties": {
                                "displayName": "Microsoft Entra ID Sign-in logs",
                                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Sign-in Analysis\"},\"name\":\"text - 0\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"13f56671-7604-4427-a4d8-663f3da0cbc5\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":1209600000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000,\"createdTime\":\"2018-11-13T19:33:10.162Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":900000,\"createdTime\":\"2018-11-13T19:33:10.164Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":1800000,\"createdTime\":\"2018-11-13T19:33:10.164Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":3600000,\"createdTime\":\"2018-11-13T19:33:10.164Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":14400000,\"createdTime\":\"2018-11-13T19:33:10.164Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":43200000,\"createdTime\":\"2018-11-13T19:33:10.164Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":86400000,\"createdTime\":\"2018-11-13T19:33:10.165Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":172800000,\"createdTime\":\"2018-11-13T19:33:10.166Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":259200000,\"createdTime\":\"2018-11-13T19:33:10.166Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":604800000,\"createdTime\":\"2018-11-13T19:33:10.166Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":1209600000,\"createdTime\":\"2018-11-13T19:33:10.166Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false},{\"durationMs\":2592000000,\"createdTime\":\"2018-11-13T19:33:10.167Z\",\"isInitialTime\":false,\"grain\":1,\"useDashboardTimeRange\":false}],\"allowCustom\":true}},{\"id\":\"3b5cc420-8ad8-4523-ba28-a54910756794\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Apps\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SigninLogs\\r\\n| summarize Count = count() by AppDisplayName\\r\\n| order by Count desc, AppDisplayName asc\\r\\n| project Value = AppDisplayName, Label = strcat(AppDisplayName, ' - ', Count, ' sign-ins'), Selected = false\\r\\n\",\"value\":[\"value::all\"],\"typeSettings\":{\"limitSelectTo\":10,\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\"},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"0611ecce-d6a0-4a6f-a1bc-6be314ae36a7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"UserNamePrefix\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SigninLogs\\r\\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n| summarize Count = count() by UserDisplayName\\r\\n| order by Count desc, UserDisplayName asc\\r\\n| project Value = UserDisplayName, Label = strcat(UserDisplayName, ' - ', Count, ' sign-ins'), Selected = false\\r\\n| extend prefix = substring(Value, 0, 1)\\r\\n| distinct prefix\\r\\n| sort by prefix asc\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"*\",\"showDefault\":false},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"f7f7970b-58c1-474f-9043-62243d2d4edd\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Users\",\"label\":\"UserName\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"SigninLogs\\r\\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n| summarize Count = count() by UserDisplayName\\r\\n| order by Count desc, UserDisplayName asc\\r\\n| project Value = UserDisplayName, Label = strcat(UserDisplayName, ' - ', Count, ' sign-ins'), Selected = false\\r\\n| where (substring(Value, 0, 1) in ({UserNamePrefix})) or ('*' in ({UserNamePrefix}))\\r\\n| sort by Value asc\\r\\n\",\"value\":[\"value::all\"],\"typeSettings\":{\"limitSelectTo\":10000000,\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"\",\"showDefault\":false},\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"85568f4e-9ad4-46c5-91d4-0ee1b2c8f3aa\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Category\",\"type\":2,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"value\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"\"},\"jsonData\":\"[\\\"SignInLogs\\\", \\\"NonInteractiveUserSignInLogs\\\"]\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = \\r\\nunion SigninLogs,AADNonInteractiveUserSignInLogs\\r\\n| where Category in ({Category})\\r\\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users});\\r\\ndata\\r\\n| summarize count() by UserPrincipalName, bin (TimeGenerated,5m)\\r\\n\",\"size\":0,\"title\":\"Sign-in Trend over Time\",\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\",\"timeBrushParameterName\":\"TimeBrush\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\"},\"name\":\"query - 19\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let nonInteractive = AADNonInteractiveUserSignInLogs\\r\\n| extend LocationDetails = parse_json(LocationDetails)\\r\\n| extend Status = parse_json(Status);\\r\\nlet data = \\r\\nunion SigninLogs,nonInteractive\\r\\n| where Category in ({Category})\\r\\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n|extend errorCode = Status.errorCode\\r\\n|extend SigninStatus = case(errorCode == 0, \\\"Success\\\", errorCode == 50058, \\\"Pending user action\\\",errorCode == 50140, \\\"Pending user action\\\", errorCode == 51006, \\\"Pending user action\\\", errorCode == 50059, \\\"Pending user action\\\",errorCode == 65001, \\\"Pending user action\\\", errorCode == 52004, \\\"Pending user action\\\", errorCode == 50055, \\\"Pending user action\\\", errorCode == 50144, \\\"Pending user action\\\", errorCode == 50072, \\\"Pending user action\\\", errorCode == 50074, \\\"Pending user action\\\", errorCode == 16000, \\\"Pending user action\\\", errorCode == 16001, \\\"Pending user action\\\", errorCode == 16003, \\\"Pending user action\\\", errorCode == 50127, \\\"Pending user action\\\", errorCode == 50125, \\\"Pending user action\\\", errorCode == 50129, \\\"Pending user action\\\", errorCode == 50143, \\\"Pending user action\\\", errorCode == 81010, \\\"Pending user action\\\", errorCode == 81014, \\\"Pending user action\\\", errorCode == 81012 ,\\\"Pending user action\\\", \\\"Failure\\\");\\r\\ndata\\r\\n| summarize Count = count() by SigninStatus\\r\\n| join kind = fullouter (datatable(SigninStatus:string)['Success', 'Pending action (Interrupts)', 'Failure']) on SigninStatus\\r\\n| project SigninStatus = iff(SigninStatus == '', SigninStatus1, SigninStatus), Count = iff(SigninStatus == '', 0, Count)\\r\\n| join kind = inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus)\\r\\n    on SigninStatus\\r\\n| project-away SigninStatus1, TimeGenerated\\r\\n| extend Status = SigninStatus\\r\\n| union (\\r\\n    data \\r\\n    | summarize Count = count()\\r\\n    | extend jkey = 1\\r\\n    | join kind=inner (data\\r\\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\\r\\n        | extend jkey = 1) on jkey\\r\\n    | extend SigninStatus = 'All Sign-ins', Status = '*'    \\r\\n)\\r\\n| order by Count desc\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":3,\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeBrush\",\"exportFieldName\":\"Status\",\"exportParameterName\":\"SigninStatus\",\"exportDefaultValue\":\"*\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"SigninStatus\",\"formatter\":1,\"formatOptions\":{\"showIcon\":true}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\",\"showIcon\":true},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true}},\"showBorder\":false}},\"name\":\"query - 5\"},{\"type\":1,\"content\":{\"json\":\"<br />\\r\\n\ud83d\udca1 _Click on a tile or a row in the grid to drill-in further_\"},\"name\":\"text - 6 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let nonInteractive = AADNonInteractiveUserSignInLogs\\r\\n| extend LocationDetails = parse_json(LocationDetails)\\r\\n| extend Status = parse_json(Status);\\r\\nlet data = \\r\\nunion SigninLogs,nonInteractive\\r\\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\\r\\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n| extend Country = iff(LocationDetails.countryOrRegion == '', 'Unknown country', tostring(LocationDetails.countryOrRegion))\\r\\n| extend City = iff(LocationDetails.city == '', 'Unknown city', tostring(LocationDetails.city))\\r\\n| extend errorCode = Status.errorCode\\r\\n| extend SigninStatus = case(errorCode == 0, \\\"Success\\\", errorCode == 50058, \\\"Pending user action\\\",errorCode == 50140, \\\"Pending user action\\\", errorCode == 51006, \\\"Pending user action\\\", errorCode == 50059, \\\"Pending user action\\\",errorCode == 65001, \\\"Pending user action\\\", errorCode == 52004, \\\"Pending user action\\\", errorCode == 50055, \\\"Pending user action\\\", errorCode == 50144, \\\"Pending user action\\\", errorCode == 50072, \\\"Pending user action\\\", errorCode == 50074, \\\"Pending user action\\\", errorCode == 16000, \\\"Pending user action\\\", errorCode == 16001, \\\"Pending user action\\\", errorCode == 16003, \\\"Pending user action\\\", errorCode == 50127, \\\"Pending user action\\\", errorCode == 50125, \\\"Pending user action\\\", errorCode == 50129, \\\"Pending user action\\\", errorCode == 50143, \\\"Pending user action\\\", errorCode == 81010, \\\"Pending user action\\\", errorCode == 81014, \\\"Pending user action\\\", errorCode == 81012 ,\\\"Pending user action\\\", \\\"Failure\\\")\\r\\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins';\\r\\nlet countryData = data\\r\\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \\\"Success\\\"), FailureCount = countif(SigninStatus == \\\"Failure\\\"), InterruptCount = countif(SigninStatus == \\\"Pending user action\\\") by Country,Category\\r\\n| join kind=inner\\r\\n(\\r\\n    data\\r\\n| make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by  Country\\r\\n| project-away TimeGenerated\\r\\n)\\r\\non Country\\r\\n| project Country, TotalCount, SuccessCount,FailureCount,InterruptCount,Trend,Category\\r\\n| order by TotalCount desc, Country asc;\\r\\ndata\\r\\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \\\"Success\\\"), FailureCount = countif(SigninStatus == \\\"Failure\\\"), InterruptCount = countif(SigninStatus == \\\"Pending user action\\\") by Country, City,Category\\r\\n| join kind=inner\\r\\n(\\r\\n    data    \\r\\n| make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Country, City\\r\\n| project-away TimeGenerated\\r\\n)\\r\\non Country, City\\r\\n| order by TotalCount desc, Country asc\\r\\n| project Country, City,TotalCount, SuccessCount,FailureCount,InterruptCount, Trend,Category\\r\\n| join kind=inner\\r\\n(\\r\\n    countryData\\r\\n)\\r\\non Country\\r\\n| summarize arg_max(TotalCount, SuccessCount, FailureCount, InterruptCount) by Country, City, Category, tostring(Trend)\\r\\n| project Id = strcat(City, '-', Category), Name = City, Type = 'City', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = strcat(Country, '-', Category),Category\\r\\n| union (countryData\\r\\n| summarize arg_max(TotalCount, SuccessCount, FailureCount, InterruptCount) by Country, Category, tostring(Trend)\\r\\n| project Id = strcat(Country, '-', Category), Name = Country, Type = 'Country', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = 'root',Category)\\r\\n| where Category in ({Category})\\r\\n| order by ['Sign-in Count'] desc, Name asc\\r\\n\",\"size\":1,\"showAnalytics\":true,\"title\":\"Sign-ins by Location\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeBrush\",\"showRefreshButton\":true,\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"Name\",\"parameterName\":\"LocationDetail\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Id\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Type\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Sign-in Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true}},{\"columnMatch\":\"Failure Count|Interrupt Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"orange\",\"showIcon\":true},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Success Rate\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"percent\"}}},{\"columnMatch\":\"ParentId\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}}],\"filter\":true,\"hierarchySettings\":{\"idColumn\":\"Id\",\"parentColumn\":\"ParentId\",\"treeType\":0,\"expanderColumn\":\"Name\",\"expandTopLevel\":false}}},\"customWidth\":\"67\",\"showPin\":true,\"name\":\"query - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let selectedCountry = dynamic([{LocationDetail}]);\\r\\nlet nonInteractive = AADNonInteractiveUserSignInLogs\\r\\n| extend LocationDetails = parse_json(LocationDetails),Status = parse_json(Status),ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies),DeviceDetail =parse_json(DeviceDetail);\\r\\nlet details = dynamic({ \\\"Name\\\":\\\"\\\", \\\"Type\\\":\\\"*\\\"});\\r\\nlet data = union SigninLogs,nonInteractive\\r\\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\\r\\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n| extend Country = tostring(LocationDetails.countryOrRegion)\\r\\n| extend City = tostring(LocationDetails.city) \\r\\n| where array_length(selectedCountry) == 0 or \\\"*\\\" in (selectedCountry) or Country in (selectedCountry) or City in (selectedCountry) \\r\\n| extend errorCode = Status.errorCode\\r\\n| extend SigninStatus = case(errorCode == 0, \\\"Success\\\", errorCode == 50058, \\\"Pending user action\\\",errorCode == 50140, \\\"Pending user action\\\", errorCode == 51006, \\\"Pending user action\\\", errorCode == 50059, \\\"Pending user action\\\",errorCode == 65001, \\\"Pending user action\\\", errorCode == 52004, \\\"Pending user action\\\", errorCode == 50055, \\\"Pending user action\\\", errorCode == 50144, \\\"Pending user action\\\", errorCode == 50072, \\\"Pending user action\\\", errorCode == 50074, \\\"Pending user action\\\", errorCode == 16000, \\\"Pending user action\\\", errorCode == 16001, \\\"Pending user action\\\", errorCode == 16003, \\\"Pending user action\\\", errorCode == 50127, \\\"Pending user action\\\", errorCode == 50125, \\\"Pending user action\\\", errorCode == 50129, \\\"Pending user action\\\", errorCode == 50143, \\\"Pending user action\\\", errorCode == 81010, \\\"Pending user action\\\", errorCode == 81014, \\\"Pending user action\\\", errorCode == 81012 ,\\\"Pending user action\\\", \\\"Failure\\\")\\r\\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\\r\\n| where details.Type == '*' or (details.Type == 'Country' and Country == details.Name) or (details.Type == 'City' and City == details.Name);\\r\\ndata\\r\\n| top 200 by TimeGenerated desc\\r\\n| extend TimeFromNow = now() - TimeGenerated\\r\\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\\r\\n| project User = UserDisplayName, ['Sign-in Status'] = strcat(iff(SigninStatus == 'Success', '\u2714\ufe0f', '\u274c'), ' ', SigninStatus), ['Sign-in Time'] = TimeAgo, App = AppDisplayName, ['Error code'] = errorCode, ['Result type'] = ResultType, ['Result signature'] = ResultSignature, ['Result description'] = ResultDescription, ['Conditional access policies'] = ConditionalAccessPolicies, ['Conditional access status'] = ConditionalAccessStatus, ['Operating system'] = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser, ['Country or region'] = LocationDetails.countryOrRegion, ['State'] = LocationDetails.state, ['City'] = LocationDetails.city, ['Time generated'] = TimeGenerated, Status, ['User principal name'] = UserPrincipalName, Category\\r\\n| where Category in ({Category})\\r\\n\\r\\n\\r\\n\",\"size\":1,\"showAnalytics\":true,\"title\":\"Location Sign-in details\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeBrush\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Sign-in Status\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"CellDetails\",\"showIcon\":true}},{\"columnMatch\":\"App\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Error code\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Result type\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Result signature\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Result description\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Conditional access policies\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Conditional access status\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Operating system\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Browser\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Time generated\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Status\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"User principal name\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}}],\"filter\":true}},\"customWidth\":\"33\",\"name\":\"query - 8\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let nonInteractive = AADNonInteractiveUserSignInLogs | extend LocationDetails = parse_json(LocationDetails), Status = parse_json(Status), DeviceDetail = parse_json(DeviceDetail);\\r\\nlet data = \\r\\nunion SigninLogs,nonInteractive\\r\\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n    | extend errorCode = Status.errorCode\\r\\n    | extend SigninStatus = case(errorCode == 0, \\\"Success\\\", errorCode == 50058, \\\"Pending user action\\\", errorCode == 50140, \\\"Pending user action\\\", errorCode == 51006, \\\"Pending user action\\\", errorCode == 50059, \\\"Pending user action\\\", errorCode == 65001, \\\"Pending user action\\\", errorCode == 52004, \\\"Pending user action\\\", errorCode == 50055, \\\"Pending user action\\\", errorCode == 50144, \\\"Pending user action\\\", errorCode == 50072, \\\"Pending user action\\\", errorCode == 50074, \\\"Pending user action\\\", errorCode == 16000, \\\"Pending user action\\\", errorCode == 16001, \\\"Pending user action\\\", errorCode == 16003, \\\"Pending user action\\\", errorCode == 50127, \\\"Pending user action\\\", errorCode == 50125, \\\"Pending user action\\\", errorCode == 50129, \\\"Pending user action\\\", errorCode == 50143, \\\"Pending user action\\\", errorCode == 81010, \\\"Pending user action\\\", errorCode == 81014, \\\"Pending user action\\\", errorCode == 81012, \\\"Pending user action\\\", \\\"Failure\\\")\\r\\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins';\\r\\nlet appData = data\\r\\n    | summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \\\"Success\\\"), FailureCount = countif(SigninStatus == \\\"Failure\\\"), InterruptCount = countif(SigninStatus == \\\"Pending user action\\\") by Os = tostring(DeviceDetail.operatingSystem) ,Category\\r\\n    | where Os != ''\\r\\n    | join kind=inner (data\\r\\n        | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by Os = tostring(DeviceDetail.operatingSystem)\\r\\n        | project-away TimeGenerated)\\r\\n        on Os\\r\\n    | order by TotalCount desc, Os asc\\r\\n    | project Os, TotalCount, SuccessCount, FailureCount, InterruptCount, Trend,Category\\r\\n    | serialize Id = row_number();\\r\\ndata\\r\\n| summarize TotalCount = count(), SuccessCount = countif(SigninStatus == \\\"Success\\\"), FailureCount = countif(SigninStatus == \\\"Failure\\\"), InterruptCount = countif(SigninStatus == \\\"Pending user action\\\") by Os = tostring(DeviceDetail.operatingSystem), Browser = tostring(DeviceDetail.browser),Category\\r\\n| join kind=inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain})by Os = tostring(DeviceDetail.operatingSystem), Browser = tostring(DeviceDetail.browser)\\r\\n    | project-away TimeGenerated)\\r\\n    on Os, Browser\\r\\n| order by TotalCount desc, Os asc\\r\\n| project Os, Browser, TotalCount, SuccessCount, FailureCount, InterruptCount, Trend,Category\\r\\n| serialize Id = row_number(1000000)\\r\\n| join kind=inner (appData) on Os\\r\\n| project Id, Name = Browser, Type = 'Browser', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = Id1,Category\\r\\n| union (appData \\r\\n    | project Id, Name = Os, Type = 'Operating System', ['Sign-in Count'] = TotalCount, Trend, ['Failure Count'] = FailureCount, ['Interrupt Count'] = InterruptCount, ['Success Rate'] = 1.0 * SuccessCount / TotalCount, ParentId = -1,Category)\\r\\n| where Category in ({Category})\\r\\n| order by ['Sign-in Count'] desc, Name asc\\r\\n\",\"size\":1,\"showAnalytics\":true,\"title\":\"Sign-ins by Device\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeBrush\",\"exportedParameters\":[{\"parameterName\":\"DeviceDetail\",\"defaultValue\":\"{ \\\"Name\\\":\\\"\\\", \\\"Type\\\":\\\"*\\\"}\"},{\"fieldName\":\"Category\",\"parameterName\":\"exportCategory\",\"parameterType\":1,\"defaultValue\":\"*\"},{\"fieldName\":\"Name\",\"parameterName\":\"exportName\",\"parameterType\":1,\"defaultValue\":\"*\"}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Id\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Type\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Sign-in Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Failure Count|Interrupt Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"orange\",\"showIcon\":true},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Success Rate\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"percent\"}}},{\"columnMatch\":\"ParentId\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}}],\"filter\":true,\"hierarchySettings\":{\"idColumn\":\"Id\",\"parentColumn\":\"ParentId\",\"treeType\":0,\"expanderColumn\":\"Name\",\"expandTopLevel\":false}}},\"customWidth\":\"67\",\"showPin\":true,\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let nonInteractive = AADNonInteractiveUserSignInLogs\\r\\n| extend LocationDetails = parse_json(LocationDetails),Status = parse_json(Status),ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies),DeviceDetail =parse_json(DeviceDetail);\\r\\nlet details = dynamic({ \\\"Name\\\":\\\"\\\", \\\"Type\\\":\\\"*\\\"});\\r\\nlet data = union SigninLogs,nonInteractive\\r\\n| extend AppDisplayName = iff(AppDisplayName == '', 'Unknown', AppDisplayName)\\r\\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n| extend Country = tostring(LocationDetails.countryOrRegion)\\r\\n| extend City = tostring(LocationDetails.city)\\r\\n| extend errorCode = Status.errorCode\\r\\n| extend SigninStatus = case(errorCode == 0, \\\"Success\\\", errorCode == 50058, \\\"Pending user action\\\",errorCode == 50140, \\\"Pending user action\\\", errorCode == 51006, \\\"Pending user action\\\", errorCode == 50059, \\\"Pending user action\\\",errorCode == 65001, \\\"Pending user action\\\", errorCode == 52004, \\\"Pending user action\\\", errorCode == 50055, \\\"Pending user action\\\", errorCode == 50144, \\\"Pending user action\\\", errorCode == 50072, \\\"Pending user action\\\", errorCode == 50074, \\\"Pending user action\\\", errorCode == 16000, \\\"Pending user action\\\", errorCode == 16001, \\\"Pending user action\\\", errorCode == 16003, \\\"Pending user action\\\", errorCode == 50127, \\\"Pending user action\\\", errorCode == 50125, \\\"Pending user action\\\", errorCode == 50129, \\\"Pending user action\\\", errorCode == 50143, \\\"Pending user action\\\", errorCode == 81010, \\\"Pending user action\\\", errorCode == 81014, \\\"Pending user action\\\", errorCode == 81012 ,\\\"Pending user action\\\", \\\"Failure\\\")\\r\\n| where SigninStatus == '{SigninStatus}' or '{SigninStatus}' == '*' or '{SigninStatus}' == 'All Sign-ins'\\r\\n| where details.Type == '*' or (details.Type == 'Country' and Country == details.Name) or (details.Type == 'City' and City == details.Name);\\r\\ndata\\r\\n| top 200 by TimeGenerated desc\\r\\n| extend TimeFromNow = now() - TimeGenerated\\r\\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\\r\\n| project User = UserDisplayName, ['Sign-in Status'] = strcat(iff(SigninStatus == 'Success', '\u2714\ufe0f', '\u274c'), ' ', SigninStatus), ['Sign-in Time'] = TimeAgo, App = AppDisplayName, ['Error code'] = errorCode, ['Result type'] = ResultType, ['Result signature'] = ResultSignature, ['Result description'] = ResultDescription, ['Conditional access policies'] = ConditionalAccessPolicies, ['Conditional access status'] = ConditionalAccessStatus, ['Operating system'] = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser, ['Country or region'] = LocationDetails.countryOrRegion, ['State'] = LocationDetails.state, ['City'] = LocationDetails.city, ['Time generated'] = TimeGenerated, Status, ['User principal name'] = UserPrincipalName, Category, Name = tostring(DeviceDetail.operatingSystem)\\r\\n| where Category in ('{exportCategory}') or \\\"*\\\" in ('{exportCategory}')\\r\\n| where Name in ('{exportName}') or \\\"*\\\" in ('{exportName}')\",\"size\":1,\"showAnalytics\":true,\"title\":\"Device Sign-in details\",\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Sign-in Status\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"CellDetails\"}},{\"columnMatch\":\"App\",\"formatter\":5},{\"columnMatch\":\"Error code\",\"formatter\":5},{\"columnMatch\":\"Result type\",\"formatter\":5},{\"columnMatch\":\"Result signature\",\"formatter\":5},{\"columnMatch\":\"Result description\",\"formatter\":5},{\"columnMatch\":\"Conditional access policies\",\"formatter\":5},{\"columnMatch\":\"Conditional access status\",\"formatter\":5},{\"columnMatch\":\"Operating system\",\"formatter\":5},{\"columnMatch\":\"Browser\",\"formatter\":5},{\"columnMatch\":\"Country or region\",\"formatter\":5},{\"columnMatch\":\"State\",\"formatter\":5},{\"columnMatch\":\"City\",\"formatter\":5},{\"columnMatch\":\"Time generated\",\"formatter\":5},{\"columnMatch\":\"Status\",\"formatter\":5},{\"columnMatch\":\"User principal name\",\"formatter\":5},{\"columnMatch\":\"Category\",\"formatter\":5},{\"columnMatch\":\"Name\",\"formatter\":5}],\"filter\":true}},\"customWidth\":\"33\",\"name\":\"query - 8 - Copy\"},{\"type\":1,\"content\":{\"json\":\"## Sign-ins using Conditional Access\"},\"name\":\"text - 12\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let nonInteractive = AADNonInteractiveUserSignInLogs\\r\\n| extend LocationDetails = parse_json(LocationDetails)\\r\\n| extend Status = parse_json(Status)\\r\\n| extend ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies);\\r\\nlet data = \\r\\nunion SigninLogs,nonInteractive\\r\\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n|extend CAStatus = case(ConditionalAccessStatus ==\\\"success\\\",\\\"Successful\\\",\\r\\n                    ConditionalAccessStatus == \\\"failure\\\", \\\"Failed\\\",                                     \\r\\n                    ConditionalAccessStatus == \\\"notApplied\\\", \\\"Not applied\\\",                                     \\r\\n                    isempty(ConditionalAccessStatus), \\\"Not applied\\\", \\r\\n                    \\\"Disabled\\\")\\r\\n|mvexpand ConditionalAccessPolicies\\r\\n|extend CAGrantControlName = tostring(ConditionalAccessPolicies.enforcedGrantControls[0])\\r\\n|extend CAGrantControl = case(CAGrantControlName contains \\\"MFA\\\", \\\"Require MFA\\\", \\r\\n                            CAGrantControlName contains \\\"Terms of Use\\\", \\\"Require Terms of Use\\\", \\r\\n                            CAGrantControlName contains \\\"Privacy\\\", \\\"Require Privacy Statement\\\", \\r\\n                            CAGrantControlName contains \\\"Device\\\", \\\"Require Device Compliant\\\", \\r\\n                            CAGrantControlName contains \\\"Azure AD Joined\\\", \\\"Require Hybird Azure AD Joined Device\\\", \\r\\n                            CAGrantControlName contains \\\"Apps\\\", \\\"Require Approved Apps\\\",\\r\\n                            \\\"Other\\\");\\r\\ndata\\r\\n| where Category in ({Category})\\r\\n| summarize Count = dcount(Id) by CAStatus\\r\\n| join kind = inner (data\\r\\n                    | make-series Trend = dcount(Id) default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by CAStatus\\r\\n                    ) on CAStatus\\r\\n| project-away CAStatus1, TimeGenerated\\r\\n| order by Count desc\",\"size\":4,\"title\":\"Conditional access status\",\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeBrush\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"CAStatus\",\"formatter\":1},\"subtitleContent\":{\"columnMatch\":\"Category\"},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"showBorder\":false}},\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let nonInteractive = AADNonInteractiveUserSignInLogs\\r\\n| extend LocationDetails = parse_json(LocationDetails)\\r\\n| extend Status = parse_json(Status)\\r\\n| extend ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies);\\r\\nlet data = \\r\\nunion SigninLogs,nonInteractive|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n|extend errorCode = toint(Status.errorCode)\\r\\n|extend Reason = tostring(Status.failureReason)\\r\\n|extend CAStatus = case(ConditionalAccessStatus ==0,\\\"\u2714\ufe0f Success\\\",                                     \\r\\n                        ConditionalAccessStatus == 1, \\\"\u274c Failure\\\",                                     \\r\\n                        ConditionalAccessStatus == 2, \\\"\u26a0\ufe0f Not Applied\\\",                                     \\r\\n                        ConditionalAccessStatus == \\\"\\\", \\\"\u26a0\ufe0f Not Applied\\\", \\r\\n                        \\\"\ud83d\udeab Disabled\\\")\\r\\n|mvexpand ConditionalAccessPolicies\\r\\n|extend CAGrantControlName = tostring(ConditionalAccessPolicies.enforcedGrantControls[0])\\r\\n|extend CAGrantControl = case(CAGrantControlName contains \\\"MFA\\\", \\\"Require MFA\\\", \\r\\n                            CAGrantControlName contains \\\"Terms of Use\\\", \\\"Require Terms of Use\\\", \\r\\n                            CAGrantControlName contains \\\"Privacy\\\", \\\"Require Privacy Statement\\\", \\r\\n                            CAGrantControlName contains \\\"Device\\\", \\\"Require Device Compliant\\\", \\r\\n                            CAGrantControlName contains \\\"Azure AD Joined\\\", \\\"Require Hybird Azure AD Joined Device\\\", \\r\\n                            CAGrantControlName contains \\\"Apps\\\", \\\"Require Approved Apps\\\",\\\"Other\\\");\\r\\ndata\\r\\n| summarize Count = dcount(Id) by CAStatus, CAGrantControl\\r\\n| project Id = strcat(CAStatus, '/', CAGrantControl), Name = CAGrantControl, Parent = CAStatus, Count, Type = 'CAGrantControl'\\r\\n| join kind = inner (data\\r\\n                    | make-series Trend = dcount(Id) default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by CAStatus, CAGrantControl\\r\\n                    | project Id = strcat(CAStatus, '/', CAGrantControl), Trend\\r\\n                    ) on Id\\r\\n| project-away Id1\\r\\n| union (data\\r\\n    | where Category in ({Category})\\r\\n    | summarize Count = dcount(Id) by CAStatus\\r\\n    | project Id = CAStatus, Name = CAStatus, Parent = '', Count, Type = 'CAStatus'\\r\\n    | join kind = inner (data\\r\\n                        | make-series Trend = dcount(Id) default = 0 on TimeGenerated in range({TimeRange:start}, {TimeRange:end}, {TimeRange:grain}) by CAStatus\\r\\n                        | project Id = CAStatus, Trend\\r\\n                        ) on Id\\r\\n    | project-away Id1)\\r\\n| order by Count desc\",\"size\":0,\"title\":\"Conditional access status\",\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeBrush\",\"exportParameterName\":\"Detail\",\"exportDefaultValue\":\"{ \\\"Name\\\":\\\"\\\", \\\"Type\\\":\\\"*\\\", \\\"Parent\\\":\\\"*\\\"}\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Id\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Parent\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true},\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Type\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true}}],\"hierarchySettings\":{\"idColumn\":\"Id\",\"parentColumn\":\"Parent\",\"treeType\":0,\"expanderColumn\":\"Name\",\"expandTopLevel\":true}}},\"customWidth\":\"50\",\"name\":\"query - 10\",\"styleSettings\":{\"margin\":\"50\"}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let details = dynamic({Detail});\\r\\nlet nonInteractive = AADNonInteractiveUserSignInLogs\\r\\n| extend LocationDetails = parse_json(LocationDetails)\\r\\n| extend Status = parse_json(Status)\\r\\n| extend ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies);\\r\\nlet data = \\r\\nunion SigninLogs,nonInteractive\\r\\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n|extend errorCode = toint(Status.errorCode)\\r\\n|extend Reason = tostring(Status.failureReason)\\r\\n|extend CAStatus = case(ConditionalAccessStatus ==\\\"success\\\",\\\"\u2714\ufe0f Success\\\",                                     \\r\\n                        ConditionalAccessStatus == \\\"failure\\\", \\\"\u274c Failure\\\",                                     \\r\\n                        ConditionalAccessStatus == \\\"notApplied\\\", \\\"\u26a0\ufe0f Not Applied\\\",                                     \\r\\n                        ConditionalAccessStatus == \\\"\\\", \\\"\u26a0\ufe0f Not Applied\\\", \\r\\n                        \\\"\ud83d\udeab Disabled\\\")\\r\\n|mvexpand ConditionalAccessPolicies\\r\\n|extend CAGrantControlName = tostring(ConditionalAccessPolicies.enforcedGrantControls[0])\\r\\n|extend CAGrantControl = case(CAGrantControlName contains \\\"MFA\\\", \\\"Require MFA\\\", \\r\\n                            CAGrantControlName contains \\\"Terms of Use\\\", \\\"Require Terms of Use\\\", \\r\\n                            CAGrantControlName contains \\\"Privacy\\\", \\\"Require Privacy Statement\\\", \\r\\n                            CAGrantControlName contains \\\"Device\\\", \\\"Require Device Compliant\\\", \\r\\n                            CAGrantControlName contains \\\"Azure AD Joined\\\", \\\"Require Hybird Azure AD Joined Device\\\", \\r\\n                            CAGrantControlName contains \\\"Apps\\\", \\\"Require Approved Apps\\\",\\r\\n                            \\\"Other\\\")\\r\\n|extend CAGrantControlRank = case(CAGrantControlName contains \\\"MFA\\\", 1, \\r\\n                            CAGrantControlName contains \\\"Terms of Use\\\", 2, \\r\\n                            CAGrantControlName contains \\\"Privacy\\\", 3, \\r\\n                            CAGrantControlName contains \\\"Device\\\", 4, \\r\\n                            CAGrantControlName contains \\\"Azure AD Joined\\\", 5, \\r\\n                            CAGrantControlName contains \\\"Apps\\\", 6,\\r\\n                            7)\\r\\n| where details.Type == '*' or (details.Type == 'CAStatus' and CAStatus == details.Name) or (details.Type == 'CAGrantControl' and CAGrantControl == details.Name and CAStatus == details.Parent);\\r\\ndata\\r\\n| order by CAGrantControlRank desc\\r\\n| summarize CAGrantControls = make_set(CAGrantControl) by AppDisplayName, CAStatus, TimeGenerated, UserDisplayName, Category\\r\\n| extend CAGrantControlText = replace(@\\\",\\\", \\\", \\\", replace(@'\\\"', @'', replace(@\\\"\\\\]\\\", @\\\"\\\", replace(@\\\"\\\\[\\\", @\\\"\\\", tostring(CAGrantControls)))))\\r\\n| extend CAGrantControlSummary = case(array_length(CAGrantControls) > 1, strcat(CAGrantControls[0], ' + ', array_length(CAGrantControls) - 1, ' more'), array_length(CAGrantControls) == 1, tostring(CAGrantControls[0]), 'None')\\r\\n| top 200 by TimeGenerated desc\\r\\n| extend TimeFromNow = now() - TimeGenerated\\r\\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\\r\\n| project Application = AppDisplayName, ['CA Status'] = CAStatus, ['CA Grant Controls'] = CAGrantControlSummary, ['All CA Grant Controls'] = CAGrantControlText, ['Sign-in Time'] = TimeAgo, ['User'] = UserDisplayName, Category\\r\\n| where Category in ({Category})\",\"size\":0,\"showAnalytics\":true,\"title\":\"Recent sign-ins\",\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"CA Grant Controls\",\"formatter\":1,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"All CA Grant Controls\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"User\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}}]}},\"customWidth\":\"50\",\"showPin\":true,\"name\":\"query - 7 - Copy\"},{\"type\":1,\"content\":{\"json\":\"## Troubleshooting Sign-ins\"},\"name\":\"text - 13\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let nonInteractive = AADNonInteractiveUserSignInLogs\\r\\n| extend LocationDetails = parse_json(LocationDetails)\\r\\n| extend Status = parse_json(Status);\\r\\nlet data = \\r\\nunion SigninLogs,nonInteractive|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n|extend errorCode = Status.errorCode\\r\\n|extend SigninStatus = case(errorCode == 0, \\\"Success\\\", errorCode == 50058, \\\"Pending action (Interrupts)\\\",errorCode == 50140, \\\"Pending action (Interrupts)\\\", errorCode == 51006, \\\"Pending action (Interrupts)\\\", errorCode == 50059, \\\"Pending action (Interrupts)\\\",errorCode == 65001, \\\"Pending action (Interrupts)\\\", errorCode == 52004, \\\"Pending action (Interrupts)\\\", errorCode == 50055, \\\"Pending action (Interrupts)\\\", errorCode == 50144, \\\"Pending action (Interrupts)\\\", errorCode == 50072, \\\"Pending action (Interrupts)\\\", errorCode == 50074, \\\"Pending action (Interrupts)\\\", errorCode == 16000, \\\"Pending action (Interrupts)\\\", errorCode == 16001, \\\"Pending action (Interrupts)\\\", errorCode == 16003, \\\"Pending action (Interrupts)\\\", errorCode == 50127, \\\"Pending action (Interrupts)\\\", errorCode == 50125, \\\"Pending action (Interrupts)\\\", errorCode == 50129, \\\"Pending action (Interrupts)\\\", errorCode == 50143, \\\"Pending action (Interrupts)\\\", errorCode == 81010, \\\"Pending action (Interrupts)\\\", errorCode == 81014, \\\"Pending action (Interrupts)\\\", errorCode == 81012 ,\\\"Pending action (Interrupts)\\\", \\\"Failure\\\");\\r\\ndata\\r\\n| summarize Count = count() by SigninStatus, Category\\r\\n| join kind = fullouter (datatable(SigninStatus:string)['Success', 'Pending action (Interrupts)', 'Failure']) on SigninStatus\\r\\n| project SigninStatus = iff(SigninStatus == '', SigninStatus1, SigninStatus), Count = iff(SigninStatus == '', 0, Count), Category\\r\\n| join kind = inner (data\\r\\n    | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by SigninStatus)\\r\\n    on SigninStatus\\r\\n| project-away SigninStatus1, TimeGenerated\\r\\n| extend Status = SigninStatus\\r\\n| union (\\r\\n    data \\r\\n    | summarize Count = count() \\r\\n    | extend jkey = 1\\r\\n    | join kind=inner (data\\r\\n        | make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain}\\r\\n        | extend jkey = 1) on jkey\\r\\n    | extend SigninStatus = 'All Sign-ins', Status = '*'    \\r\\n)\\r\\n| where Category in ({Category})\\r\\n| order by Count desc\\r\\n\\r\\n\\r\\n\\r\\n\",\"size\":3,\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"SigninStatus\",\"formatter\":1,\"formatOptions\":{\"showIcon\":true}},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\",\"showIcon\":true},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"secondaryContent\":{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"min\":0,\"palette\":\"blue\",\"showIcon\":true}},\"showBorder\":false}},\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let nonInteractive = AADNonInteractiveUserSignInLogs\\r\\n| extend LocationDetails = parse_json(LocationDetails)\\r\\n| extend Status = parse_json(Status);\\r\\nlet data = \\r\\nunion SigninLogs,nonInteractive|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n| extend ErrorCode = tostring(Status.errorCode) \\r\\n| extend FailureReason = tostring(Status.failureReason) \\r\\n| where ErrorCode !in (\\\"0\\\",\\\"50058\\\",\\\"50148\\\",\\\"50140\\\", \\\"51006\\\", \\\"50059\\\", \\\"65001\\\", \\\"52004\\\", \\\"50055\\\", \\\"50144\\\",\\\"50072\\\", \\\"50074\\\", \\\"16000\\\",\\\"16001\\\", \\\"16003\\\", \\\"50127\\\", \\\"50125\\\", \\\"50129\\\",\\\"50143\\\", \\\"81010\\\", \\\"81014\\\", \\\"81012\\\") \\r\\n|summarize errCount = count() by ErrorCode, tostring(FailureReason), Category| sort by errCount, Category\\r\\n|project ['\u274c Error Code'] = ErrorCode, ['Reason']= FailureReason, ['Error Count'] = toint(errCount), Category\\r\\n|where Category in ({Category});\\r\\ndata\",\"size\":1,\"showAnalytics\":true,\"title\":\"Summary of top errors\",\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeBrush\",\"exportFieldName\":\"\u274c Error Code\",\"exportParameterName\":\"ErrorCode\",\"exportDefaultValue\":\"*\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Error Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"orange\",\"showIcon\":true}}],\"filter\":true}},\"customWidth\":\"67\",\"showPin\":true,\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let nonInteractive = AADNonInteractiveUserSignInLogs\\r\\n| extend LocationDetails = parse_json(LocationDetails)\\r\\n| extend Status = parse_json(Status)\\r\\n| extend DeviceDetail = parse_json(DeviceDetail)\\r\\n| extend ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies);\\r\\nlet data=\\r\\nunion SigninLogs,nonInteractive\\r\\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n| extend ErrorCode = tostring(Status.errorCode) \\r\\n| extend FailureReason = tostring(Status.failureReason) \\r\\n| where ErrorCode !in (\\\"0\\\",\\\"50058\\\",\\\"50148\\\",\\\"50140\\\", \\\"51006\\\", \\\"50059\\\", \\\"65001\\\", \\\"52004\\\", \\\"50055\\\", \\\"50144\\\",\\\"50072\\\", \\\"50074\\\", \\\"16000\\\",\\\"16001\\\", \\\"16003\\\", \\\"50127\\\", \\\"50125\\\", \\\"50129\\\",\\\"50143\\\", \\\"81010\\\", \\\"81014\\\", \\\"81012\\\") \\r\\n| where '{ErrorCode}' == '*' or '{ErrorCode}' == ErrorCode\\r\\n| top 200 by TimeGenerated desc\\r\\n| extend TimeFromNow = now() - TimeGenerated\\r\\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\\r\\n| project User = UserDisplayName, IPAddress, ['\u274c Error Code'] = ErrorCode, ['Sign-in Time'] = TimeAgo, App = AppDisplayName, ['Error code'] = ErrorCode, ['Result type'] = ResultType, ['Result signature'] = ResultSignature, ['Result description'] = ResultDescription, ['Conditional access policies'] = ConditionalAccessPolicies, ['Conditional access status'] = ConditionalAccessStatus, ['Operating system'] = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser, ['Country or region'] = LocationDetails.countryOrRegion, ['State'] = LocationDetails.state, ['City'] = LocationDetails.city, ['Time generated'] = TimeGenerated, Status, ['User principal name'] = UserPrincipalName, Category\\r\\n| where Category in ({Category});\\r\\ndata\\r\\n\\r\\n\\r\\n\",\"size\":1,\"showAnalytics\":true,\"title\":\"Sign-ins with errors\",\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeBrush\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"\u274c Error Code\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"showIcon\":true}},{\"columnMatch\":\"App\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Error code\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Result type\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Result signature\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Result description\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Conditional access policies\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Conditional access status\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Operating system\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Browser\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Country or region\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"State\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"City\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Time generated\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Status\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"User principal name\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}}],\"filter\":true}},\"customWidth\":\"33\",\"name\":\"query - 5 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let nonInteractive = AADNonInteractiveUserSignInLogs\\r\\n| extend LocationDetails = parse_json(LocationDetails)\\r\\n| extend Status = parse_json(Status);\\r\\nlet data = \\r\\nunion SigninLogs,nonInteractive|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n| extend ErrorCode = tostring(Status.errorCode) \\r\\n| extend FailureReason = Status.failureReason \\r\\n| where ErrorCode in (\\\"50058\\\",\\\"50140\\\", \\\"51006\\\", \\\"50059\\\", \\\"65001\\\", \\\"52004\\\", \\\"50055\\\", \\\"50144\\\",\\\"50072\\\", \\\"50074\\\", \\\"16000\\\",\\\"16001\\\", \\\"16003\\\", \\\"50127\\\", \\\"50125\\\", \\\"50129\\\",\\\"50143\\\", \\\"81010\\\", \\\"81014\\\", \\\"81012\\\") \\r\\n|summarize errCount = count() by ErrorCode, tostring(FailureReason), Category\\r\\n| sort by errCount\\r\\n|project ['\u274c Error Code'] = ErrorCode, ['Reason'] = FailureReason, ['Interrupt Count'] = toint(errCount), Category\\r\\n| where Category in ({Category});\\r\\ndata\",\"size\":1,\"showAnalytics\":true,\"title\":\"Summary of sign-ins waiting on user action\",\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeBrush\",\"exportFieldName\":\"\u274c Error Code\",\"exportParameterName\":\"InterruptErrorCode\",\"exportDefaultValue\":\"*\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Interrupt Count\",\"formatter\":8,\"formatOptions\":{\"min\":0,\"palette\":\"orange\"}}],\"filter\":true}},\"customWidth\":\"67\",\"showPin\":true,\"name\":\"query - 7\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let nonInteractive = AADNonInteractiveUserSignInLogs\\r\\n| extend LocationDetails = parse_json(LocationDetails)\\r\\n| extend ConditionalAccessPolicies = parse_json(ConditionalAccessPolicies)\\r\\n| extend DeviceDetail = parse_json(DeviceDetail)\\r\\n| extend Status = parse_json(Status);\\r\\nlet data = \\r\\nunion SigninLogs,nonInteractive \\r\\n|where AppDisplayName in ({Apps}) or '*' in ({Apps})\\r\\n|where UserDisplayName in ({Users}) \\r\\n| extend ErrorCode = tostring(Status.errorCode) \\r\\n| extend FailureReason = Status.failureReason \\r\\n| where ErrorCode in (\\\"50058\\\",\\\"50140\\\", \\\"51006\\\", \\\"50059\\\", \\\"65001\\\", \\\"52004\\\", \\\"50055\\\", \\\"50144\\\",\\\"50072\\\", \\\"50074\\\", \\\"16000\\\",\\\"16001\\\", \\\"16003\\\", \\\"50127\\\", \\\"50125\\\", \\\"50129\\\",\\\"50143\\\", \\\"81010\\\", \\\"81014\\\", \\\"81012\\\") \\r\\n| where '{InterruptErrorCode}' == '*' or '{InterruptErrorCode}' == ErrorCode\\r\\n| top 200 by TimeGenerated desc\\r\\n| extend TimeFromNow = now() - TimeGenerated\\r\\n| extend TimeAgo = strcat(case(TimeFromNow < 2m, strcat(toint(TimeFromNow / 1m), ' seconds'), TimeFromNow < 2h, strcat(toint(TimeFromNow / 1m), ' minutes'), TimeFromNow < 2d, strcat(toint(TimeFromNow / 1h), ' hours'), strcat(toint(TimeFromNow / 1d), ' days')), ' ago')\\r\\n| project User = UserDisplayName, IPAddress, ['\u274c Error Code'] = ErrorCode, ['Sign-in Time'] = TimeAgo, App = AppDisplayName, ['Error code'] = ErrorCode, ['Result type'] = ResultType, ['Result signature'] = ResultSignature, ['Result description'] = ResultDescription, ['Conditional access policies'] = ConditionalAccessPolicies, ['Conditional access status'] = ConditionalAccessStatus, ['Operating system'] = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser, ['Country or region'] = LocationDetails.countryOrRegion, ['State'] = LocationDetails.state, ['City'] = LocationDetails.city, ['Time generated'] = TimeGenerated, Status, ['User principal name'] = UserPrincipalName, Category\\r\\n| where Category in ({Category});\\r\\ndata\\r\\n\\r\\n\",\"size\":1,\"showAnalytics\":true,\"title\":\"Sign-ins waiting on user action\",\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeBrush\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"\u274c Error Code\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"GenericDetails\",\"showIcon\":true}},{\"columnMatch\":\"App\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Error code\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Result type\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Result signature\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Result description\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Conditional access policies\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Conditional access status\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Operating system\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Browser\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Country or region\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"State\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"City\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Time generated\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"Status\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}},{\"columnMatch\":\"User principal name\",\"formatter\":5,\"formatOptions\":{\"showIcon\":true}}],\"filter\":true}},\"customWidth\":\"33\",\"showPin\":true,\"name\":\"query - 7 - Copy\"}],\"fromTemplateId\":\"sentinel-AzureActiveDirectorySigninLogs\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                                "version": "1.0",
                                "sourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
                                "category": "sentinel"
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(resourceId('Microsoft.Insights/workbooks', 'AzureActiveDirectorySigninLogsWorkbook'),'/'))))]",
                            "properties": {
                                "description": "@{workbookKey=AzureActiveDirectorySigninLogsWorkbook; logoFileName=azureactivedirectory_logo.svg; description=Gain insights into Microsoft Entra ID by connecting Microsoft Sentinel and using the sign-in logs to gather insights around Microsoft Entra ID scenarios. \nYou can learn about sign-in operations, such as user sign-ins and locations, email addresses, and  IP addresses of your users, as well as failed activities and the errors that triggered the failures.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=2.4.0; title=Microsoft Entra ID Sign-in logs; templateRelativePath=AzureActiveDirectorySignins.json; subtitle=; provider=Microsoft}.description",
                                "parentId": "[resourceId('Microsoft.Insights/workbooks', 'AzureActiveDirectorySigninLogsWorkbook')]",
                                "contentId": "AzureActiveDirectorySigninLogsWorkbook",
                                "kind": "Workbook",
                                "version": "2.4.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                },
                                "dependencies": {
                                    "operator": "AND",
                                    "criteria": [
                                        {
                                            "contentId": "SigninLogs",
                                            "kind": "DataType"
                                        },
                                        {
                                            "contentId": "AzureActiveDirectory",
                                            "kind": "DataConnector"
                                        }
                                    ]
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "AzureActiveDirectorySigninLogsWorkbook",
                "contentKind": "Workbook",
                "displayName": "Microsoft Entra ID Sign-in logs",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-wb-q4rjjvq7j7ywq",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-wb-q4rjjvq7j7ywq",
                "version": "2.4.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('bb616d82-108f-47d3-9dec-9652ea0d3bf6')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "AccountCreatedandDeletedinShortTimeframe_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "bb616d82-108f-47d3-9dec-9652ea0d3bf6",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Search for user principal name (UPN) events. Look for accounts created and then deleted in under 24 hours. Attackers may create an account for their use, and then remove the account when no longer needed.\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-user-accounts#short-lived-account",
                                "displayName": "Account Created and Deleted in Short Timeframe",
                                "enabled": false,
                                "query": "let queryfrequency = 1h;\nlet queryperiod = 1d;\nAuditLogs\n| where TimeGenerated > ago(queryfrequency)\n| where OperationName =~ \"Delete user\"\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type == \"User\"\n      | extend TargetUserPrincipalName = extract(@'([a-f0-9]{32})?(.*)', 2, tostring(TargetResource.userPrincipalName))\n  )\n| extend DeletedByApp = tostring(InitiatedBy.app.displayName),\nDeletedByAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId),\nDeletedByUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName),\nDeletedByAadUserId = tostring(InitiatedBy.user.id),\nDeletedByIPAddress = tostring(InitiatedBy.user.ipAddress)\n| project Deletion_TimeGenerated = TimeGenerated, TargetUserPrincipalName, DeletedByApp, DeletedByAppServicePrincipalId, DeletedByUserPrincipalName, DeletedByAadUserId, DeletedByIPAddress, \nDeletion_AdditionalDetails = AdditionalDetails, Deletion_InitiatedBy = InitiatedBy, Deletion_TargetResources = TargetResources\n| join kind=inner (\n    AuditLogs\n    | where TimeGenerated > ago(queryperiod)\n    | where OperationName =~ \"Add user\"      \n    | mv-apply TargetResource = TargetResources on \n      (\n          where TargetResource.type == \"User\"\n          | extend TargetUserPrincipalName = trim(@'\"',tostring(TargetResource.userPrincipalName))\n      )\n    | project-rename Creation_TimeGenerated = TimeGenerated\n) on TargetUserPrincipalName\n| extend TimeDelta = Deletion_TimeGenerated - Creation_TimeGenerated\n| where  TimeDelta between (time(0s) .. queryperiod)\n| extend CreatedByApp = tostring(InitiatedBy.app.displayName),\nCreatedByAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId),\nCreatedByUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName),\nCreatedByAadUserId = tostring(InitiatedBy.user.id),\nCreatedByIPAddress = tostring(InitiatedBy.user.ipAddress)\n| project Creation_TimeGenerated, Deletion_TimeGenerated, TimeDelta, TargetUserPrincipalName, DeletedByApp, DeletedByAppServicePrincipalId, DeletedByUserPrincipalName, DeletedByAadUserId, DeletedByIPAddress, \nCreatedByApp, CreatedByAppServicePrincipalId, CreatedByUserPrincipalName, CreatedByAadUserId, CreatedByIPAddress, Creation_AdditionalDetails = AdditionalDetails, Creation_InitiatedBy = InitiatedBy, Creation_TargetResources = TargetResources, Deletion_AdditionalDetails, Deletion_InitiatedBy, Deletion_TargetResources\n| extend TargetName = tostring(split(TargetUserPrincipalName,'@',0)[0]), TargetUPNSuffix = tostring(split(TargetUserPrincipalName,'@',1)[0])\n| extend CreatedByName = tostring(split(CreatedByUserPrincipalName,'@',0)[0]), CreatedByUPNSuffix = tostring(split(CreatedByUserPrincipalName,'@',1)[0])\n| extend DeletedByName = tostring(split(DeletedByUserPrincipalName,'@',0)[0]), DeletedByUPNSuffix = tostring(split(DeletedByUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "subTechniques": [
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "TargetUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "CreatedByUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "CreatedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "CreatedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "CreatedByAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "DeletedByUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "DeletedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "DeletedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "DeletedByAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "CreatedByIPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "DeletedByIPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'bb616d82-108f-47d3-9dec-9652ea0d3bf6'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 1",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'bb616d82-108f-47d3-9dec-9652ea0d3bf6')]",
                                "contentId": "bb616d82-108f-47d3-9dec-9652ea0d3bf6",
                                "kind": "AnalyticsRule",
                                "version": "1.1.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "bb616d82-108f-47d3-9dec-9652ea0d3bf6",
                "contentKind": "AnalyticsRule",
                "displayName": "Account Created and Deleted in Short Timeframe",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-p5pbzgmlkfrou",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-p5pbzgmlkfrou",
                "version": "1.1.0",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('6d63efa6-7c25-4bd4-a486-aa6bf50fde8a')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "AccountCreatedDeletedByNonApprovedUser_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "6d63efa6-7c25-4bd4-a486-aa6bf50fde8a",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies accounts that were created or deleted by a defined list of non-approved user principal names. Add to this list before running the query for accurate results.\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-user-accounts",
                                "displayName": "Account created or deleted by non-approved user",
                                "enabled": false,
                                "query": "// Add non-approved user principal names or apps to the list below to search for their account creation/deletion activity\n// ex: dynamic([\"UPN1\", \"upn123\"])\nlet nonapproved_users = dynamic([]);\nlet nonapproved_apps = dynamic([]);\nAuditLogs\n| where OperationName =~ \"Add user\" or OperationName =~ \"Delete user\"\n| where Result =~ \"success\"\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| where InitiatingUserPrincipalName has_any (nonapproved_users) or InitiatingAppName has_any (nonapproved_apps)\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "subTechniques": [
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6d63efa6-7c25-4bd4-a486-aa6bf50fde8a'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 2",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6d63efa6-7c25-4bd4-a486-aa6bf50fde8a')]",
                                "contentId": "6d63efa6-7c25-4bd4-a486-aa6bf50fde8a",
                                "kind": "AnalyticsRule",
                                "version": "1.1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "6d63efa6-7c25-4bd4-a486-aa6bf50fde8a",
                "contentKind": "AnalyticsRule",
                "displayName": "Account created or deleted by non-approved user",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-nrvgjxwoknicq",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-nrvgjxwoknicq",
                "version": "1.1.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('95dc4ae3-e0f2-48bd-b996-cdd22b90f9af')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "ADFSDomainTrustMods_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.2",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "95dc4ae3-e0f2-48bd-b996-cdd22b90f9af",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when a user or application modifies the federation settings on the domain or Update domain authentication from Managed to Federated.\nFor example, this alert will trigger when a new Active Directory Federated Service (ADFS) TrustedRealm object, such as a signing certificate, is added to the domain.\nModification to domain federation settings should be rare. Confirm the added or modified target domain/URL is legitimate administrator behavior.\nTo understand why an authorized user may update settings for a federated domain in Office 365, Azure, or Intune, see: https://docs.microsoft.com/office365/troubleshoot/active-directory/update-federated-domain-office-365.\nFor details on security realms that accept security tokens, see the ADFS Proxy Protocol (MS-ADFSPP) specification: https://docs.microsoft.com/openspecs/windows_protocols/ms-adfspp/e7b9ea73-1980-4318-96a6-da559486664b.\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.",
                                "displayName": "Modified domain federation trust settings",
                                "enabled": false,
                                "query": "(union isfuzzy=true\n(\nAuditLogs\n| where OperationName =~ \"Set federation settings on domain\"\n//| where Result =~ \"success\"   // commenting out, as it may be interesting to capture failed attempts\n| mv-expand TargetResources\n| extend modifiedProperties = parse_json(TargetResources).modifiedProperties\n| mv-expand modifiedProperties\n| extend targetDisplayName = tostring(parse_json(modifiedProperties).displayName)\n),\n(\nAuditLogs\n| where OperationName =~ \"Set domain authentication\"\n//| where Result =~ \"success\"   // commenting out, as it may be interesting to capture failed attempts\n| mv-expand TargetResources\n| extend modifiedProperties = parse_json(TargetResources).modifiedProperties\n| mv-expand modifiedProperties\n| mv-apply Property = modifiedProperties on\n  (\n      where Property.displayName =~ \"LiveType\"\n      | extend targetDisplayName = tostring(Property.displayName),\n               NewDomainValue = tostring(Property.newValue)\n  )\n| where NewDomainValue has \"Federated\"\n)\n)\n| mv-apply AdditionalDetail = AdditionalDetails on\n  (\n      where AdditionalDetail.key =~ \"User-Agent\"\n      | extend UserAgent = tostring(AdditionalDetail.value)\n  )\n| extend InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n| project-reorder TimeGenerated, OperationName, InitiatingUserOrApp, AADOperationType, targetDisplayName, Result, InitiatingIpAddress, UserAgent, CorrelationId, TenantId, AADTenantId\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess",
                                    "Persistence",
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1555",
                                    "T1098"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '95dc4ae3-e0f2-48bd-b996-cdd22b90f9af'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 3",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '95dc4ae3-e0f2-48bd-b996-cdd22b90f9af')]",
                                "contentId": "95dc4ae3-e0f2-48bd-b996-cdd22b90f9af",
                                "kind": "AnalyticsRule",
                                "version": "1.1.2",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "95dc4ae3-e0f2-48bd-b996-cdd22b90f9af",
                "contentKind": "AnalyticsRule",
                "displayName": "Modified domain federation trust settings",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-4mgz27rvtltt2",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-4mgz27rvtltt2",
                "version": "1.1.2",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('5533fe80-905e-49d5-889a-df27d2c3976d')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "ADFSSignInLogsPasswordSpray_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "5533fe80-905e-49d5-889a-df27d2c3976d",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies evidence of password spray activity against Connect Health for AD FS sign-in events by looking for failures from multiple accounts from the same IP address within a time window.\nReference: https://adfshelp.microsoft.com/References/ConnectHealthErrorCodeReference",
                                "displayName": "Password spray attack against ADFSSignInLogs",
                                "enabled": false,
                                "query": "let queryfrequency = 30m;\nlet accountthreshold = 10;\nlet successCodes = dynamic([0, 50144]);\nADFSSignInLogs\n| extend IngestionTime = ingestion_time()\n| where IngestionTime > ago(queryfrequency)\n| where not(todynamic(AuthenticationDetails)[0].authenticationMethod == \"Integrated Windows Authentication\")\n| summarize\n    DistinctFailureCount = dcountif(UserPrincipalName, ResultType !in (successCodes)),\n    DistinctSuccessCount = dcountif(UserPrincipalName, ResultType in (successCodes)),\n    SuccessAccounts = make_set_if(UserPrincipalName, ResultType in (successCodes), 250),\n    arg_min(TimeGenerated, *)\n    by IPAddress\n| where DistinctFailureCount > DistinctSuccessCount and DistinctFailureCount >= accountthreshold\n//| extend SuccessAccounts = iff(array_length(SuccessAccounts) != 0, SuccessAccounts, dynamic([\"null\"]))\n//| mv-expand SuccessAccounts\n| project TimeGenerated, Category, OperationName, IPAddress, DistinctFailureCount, DistinctSuccessCount, SuccessAccounts, AuthenticationRequirement, ConditionalAccessStatus, IsInteractive, UserAgent, NetworkLocationDetails, DeviceDetail, TokenIssuerType, TokenIssuerName, ResourceIdentity\n",
                                "queryFrequency": "PT30M",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "ADFSSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1110"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5533fe80-905e-49d5-889a-df27d2c3976d'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 4",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5533fe80-905e-49d5-889a-df27d2c3976d')]",
                                "contentId": "5533fe80-905e-49d5-889a-df27d2c3976d",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "5533fe80-905e-49d5-889a-df27d2c3976d",
                "contentKind": "AnalyticsRule",
                "displayName": "Password spray attack against ADFSSignInLogs",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-s4guyhrzwab6y",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-s4guyhrzwab6y",
                "version": "1.0.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "ADFSSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('f80d951a-eddc-4171-b9d0-d616bb83efdc')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "AdminPromoAfterRoleMgmtAppPermissionGrant_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "f80d951a-eddc-4171-b9d0-d616bb83efdc",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This rule looks for a service principal being granted the Microsoft Graph RoleManagement.ReadWrite.Directory (application) permission before being used to add an Microsoft Entra ID object or user account to an Admin directory role (i.e. Global Administrators).\nThis is a known attack path that is usually abused when a service principal already has the AppRoleAssignment.ReadWrite.All permission granted. This permission allows an app to manage permission grants for application permissions to any API.\nA service principal can promote itself or other service principals to admin roles (i.e. Global Administrators). This would be considered a privilege escalation technique.\nRef : https://docs.microsoft.com/graph/permissions-reference#role-management-permissions, https://docs.microsoft.com/graph/api/directoryrole-post-members?view=graph-rest-1.0&tabs=http",
                                "displayName": "Admin promotion after Role Management Application Permission Grant",
                                "enabled": false,
                                "query": "let query_frequency = 1h;\nlet query_period = 2h;\nAuditLogs\n| where TimeGenerated > ago(query_period)\n| where Category =~ \"ApplicationManagement\" and LoggedByService =~ \"Core Directory\"\n| where OperationName =~ \"Add app role assignment to service principal\"\n| mv-expand TargetResource = TargetResources\n| mv-expand modifiedProperty = TargetResource[\"modifiedProperties\"]\n| where tostring(modifiedProperty[\"displayName\"]) == \"AppRole.Value\"\n| extend PermissionGrant = tostring(modifiedProperty[\"newValue\"])\n| where PermissionGrant has \"RoleManagement.ReadWrite.Directory\"\n| mv-apply modifiedProperty = TargetResource[\"modifiedProperties\"] on (\n    summarize modifiedProperties = make_bag(\n        bag_pack(tostring(modifiedProperty[\"displayName\"]),\n            bag_pack(\"oldValue\", trim(@'[\\\"\\s]+', tostring(modifiedProperty[\"oldValue\"])),\n                \"newValue\", trim(@'[\\\"\\s]+', tostring(modifiedProperty[\"newValue\"])))), 100)\n)\n| project\n    PermissionGrant_TimeGenerated = TimeGenerated,\n    PermissionGrant_OperationName = OperationName,\n    PermissionGrant_Result = Result,\n    PermissionGrant,\n    AppDisplayName = tostring(modifiedProperties[\"ServicePrincipal.DisplayName\"][\"newValue\"]),\n    AppServicePrincipalId = tostring(modifiedProperties[\"ServicePrincipal.ObjectID\"][\"newValue\"]),\n    PermissionGrant_InitiatedBy = InitiatedBy,\n    PermissionGrant_TargetResources = TargetResources,\n    PermissionGrant_AdditionalDetails = AdditionalDetails,\n    PermissionGrant_CorrelationId = CorrelationId\n| join kind=inner (\n    AuditLogs\n    | where TimeGenerated > ago(query_frequency)\n    | where Category =~ \"RoleManagement\" and LoggedByService =~ \"Core Directory\" and AADOperationType =~ \"Assign\"\n    | where isnotempty(InitiatedBy[\"app\"])\n    | mv-expand TargetResource = TargetResources\n    | mv-expand modifiedProperty = TargetResource[\"modifiedProperties\"]\n    | where tostring(modifiedProperty[\"displayName\"]) in (\"Role.DisplayName\", \"RoleDefinition.DisplayName\")\n    | extend RoleAssignment = tostring(modifiedProperty[\"newValue\"])\n    | where RoleAssignment contains \"Admin\"\n    | project\n        RoleAssignment_TimeGenerated = TimeGenerated,\n        RoleAssignment_OperationName = OperationName,\n        RoleAssignment_Result = Result,\n        RoleAssignment,\n        TargetType = tostring(TargetResources[0][\"type\"]),\n        Target = iff(isnotempty(TargetResources[0][\"displayName\"]), tostring(TargetResources[0][\"displayName\"]), tolower(TargetResources[0][\"userPrincipalName\"])),\n        TargetId = tostring(TargetResources[0][\"id\"]),\n        RoleAssignment_InitiatedBy = InitiatedBy,\n        RoleAssignment_TargetResources = TargetResources,\n        RoleAssignment_AdditionalDetails = AdditionalDetails,\n        RoleAssignment_CorrelationId = CorrelationId,\n        AppServicePrincipalId = tostring(InitiatedBy[\"app\"][\"servicePrincipalId\"])\n    ) on AppServicePrincipalId\n| where PermissionGrant_TimeGenerated < RoleAssignment_TimeGenerated\n| extend\n    TargetName = tostring(split(Target, \"@\")[0]),\n    TargetUPNSuffix = tostring(split(Target, \"@\")[1])\n| project PermissionGrant_TimeGenerated, PermissionGrant_OperationName, PermissionGrant_Result, PermissionGrant, AppDisplayName, AppServicePrincipalId, PermissionGrant_InitiatedBy, PermissionGrant_TargetResources, PermissionGrant_AdditionalDetails, PermissionGrant_CorrelationId, \nRoleAssignment_TimeGenerated, RoleAssignment_OperationName, RoleAssignment_Result, RoleAssignment, TargetType, Target, TargetName, TargetUPNSuffix, TargetId, RoleAssignment_InitiatedBy, RoleAssignment_TargetResources, RoleAssignment_AdditionalDetails, RoleAssignment_CorrelationId\n| extend PermissionGrant_InitiatingUserPrincipalName = tostring(PermissionGrant_InitiatedBy.user.userPrincipalName)\n| extend PermissionGrant_InitiatingAadUserId = tostring(PermissionGrant_InitiatedBy.user.id)\n| extend PermissionGrant_InitiatingIpAddress = tostring(iff(isnotempty(PermissionGrant_InitiatedBy.user.ipAddress), PermissionGrant_InitiatedBy.user.ipAddress, PermissionGrant_InitiatedBy.app.ipAddress))\n| extend PermissionGrant_InitiatingAccountName = tostring(split(PermissionGrant_InitiatingUserPrincipalName, \"@\")[0]), PermissionGrant_InitiatingAccountUPNSuffix = tostring(split(PermissionGrant_InitiatingUserPrincipalName, \"@\")[1])\n| extend RoleAssignment_InitiatingUserPrincipalName = tostring(RoleAssignment_InitiatedBy.user.userPrincipalName)\n| extend RoleAssignment_InitiatingAadUserId = tostring(RoleAssignment_InitiatedBy.user.id)\n| extend RoleAssignment_InitiatingIpAddress = tostring(iff(isnotempty(RoleAssignment_InitiatedBy.user.ipAddress), RoleAssignment_InitiatedBy.user.ipAddress, RoleAssignment_InitiatedBy.app.ipAddress))\n| extend RoleAssignment_InitiatingAccountName = tostring(split(RoleAssignment_InitiatingUserPrincipalName, \"@\")[0]),  RoleAssignment_InitiatingAccountUPNSuffix = tostring(split(RoleAssignment_InitiatingUserPrincipalName, \"@\")[1])\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT2H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation",
                                    "Persistence"
                                ],
                                "subTechniques": [
                                    "T1098.003",
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1098",
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "AppDisplayName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "AppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Target"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "PermissionGrant_InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "PermissionGrant_InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "PermissionGrant_InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "PermissionGrant_InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "RoleAssignment_InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "RoleAssignment_InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "RoleAssignment_InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "RoleAssignment_InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f80d951a-eddc-4171-b9d0-d616bb83efdc'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 5",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f80d951a-eddc-4171-b9d0-d616bb83efdc')]",
                                "contentId": "f80d951a-eddc-4171-b9d0-d616bb83efdc",
                                "kind": "AnalyticsRule",
                                "version": "1.1.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "f80d951a-eddc-4171-b9d0-d616bb83efdc",
                "contentKind": "AnalyticsRule",
                "displayName": "Admin promotion after Role Management Application Permission Grant",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-tfmvbujgwqixq",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-tfmvbujgwqixq",
                "version": "1.1.0",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('7cb8f77d-c52f-4e46-b82f-3cf2e106224a')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "AnomalousUserAppSigninLocationIncrease-detection_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "2.0.4",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "7cb8f77d-c52f-4e46-b82f-3cf2e106224a",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query over Microsoft Entra ID sign-in considers all user sign-ins for each Microsoft Entra ID application and picks out the most anomalous change in location profile for a user within an individual application",
                                "displayName": "Anomalous sign-in location by user account and authenticating application",
                                "enabled": false,
                                "query": "// Adjust this figure to adjust how sensitive this detection is\nlet sensitivity = 2.5;\nlet AuthEvents = materialize(\nunion isfuzzy=True SigninLogs, AADNonInteractiveUserSignInLogs\n| where TimeGenerated > ago(7d)\n| where ResultType == 0\n| extend LocationDetails = LocationDetails_dynamic\n| extend Location = strcat(LocationDetails.countryOrRegion, \"-\", LocationDetails.state,\"-\", LocationDetails.city)\n| where Location != \"--\");\nAuthEvents\n| summarize dcount(Location) by AppDisplayName, AppId, UserPrincipalName, UserId, bin(startofday(TimeGenerated), 1d)\n| where dcount_Location > 2\n| make-series CountOfLocations = sum(dcount_Location) on TimeGenerated  step 1d by AppId, UserId\n| extend (Anomalies, Score, Baseline) = series_decompose_anomalies(CountOfLocations, sensitivity, -1, 'linefit')\n| mv-expand CountOfLocations to typeof(double), TimeGenerated to typeof(datetime), Anomalies to typeof(double), Score to typeof(double), Baseline to typeof(long)\n| where Anomalies > 0 and Baseline > 0\n| join kind=inner( AuthEvents | extend TimeStamp = startofday(TimeGenerated)) on UserId, AppId\n| extend SignInDetails = bag_pack(\"TimeGenerated\", TimeGenerated1, \"Location\", Location, \"Source\", IPAddress, \"Device\", DeviceDetail_dynamic)\n| summarize SignInDetailsSet=make_set(SignInDetails, 1000) by UserId, UserPrincipalName, CountOfLocations, TimeGenerated, AppId, AppDisplayName\n| extend Name = split(UserPrincipalName, \"@\")[0], UPNSuffix = split(UserPrincipalName, \"@\")[1]\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P7D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "UserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "Application": "AppDisplayName"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "This query over Microsoft Entra ID sign-in considers all user sign-ins for each Microsoft Entra ID application and picks out the most anomalous change in location profile for a user within an\nindividual application. This has detected {{UserPrincipalName}} signing into {{AppDisplayName}} from {{CountOfLocations}} \ndifferent locations.\n",
                                    "alertDisplayNameFormat": "Anomalous sign-in location by {{UserPrincipalName}} to {{AppDisplayName}}"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7cb8f77d-c52f-4e46-b82f-3cf2e106224a'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 6",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7cb8f77d-c52f-4e46-b82f-3cf2e106224a')]",
                                "contentId": "7cb8f77d-c52f-4e46-b82f-3cf2e106224a",
                                "kind": "AnalyticsRule",
                                "version": "2.0.4",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "7cb8f77d-c52f-4e46-b82f-3cf2e106224a",
                "contentKind": "AnalyticsRule",
                "displayName": "Anomalous sign-in location by user account and authenticating application",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-plv5pbgwzqppm",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-plv5pbgwzqppm",
                "version": "2.0.4",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('694c91ee-d606-4ba9-928e-405a2dd0ff0f')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "AuthenticationMethodsChangedforPrivilegedAccount_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "694c91ee-d606-4ba9-928e-405a2dd0ff0f",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies authentication methods being changed for a privileged account. This could be an indication of an attacker adding an auth method to the account so they can have continued access.\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-privileged-accounts#things-to-monitor-1",
                                "displayName": "Authentication Methods Changed for Privileged Account",
                                "enabled": false,
                                "query": "let queryperiod = 14d;\nlet queryfrequency = 2h;\nlet security_info_actions = dynamic([\"User registered security info\", \"User changed default security info\", \"User deleted security info\", \"Admin updated security info\", \"User reviewed security info\", \"Admin deleted security info\", \"Admin registered security info\"]);\nlet VIPUsers = (\n    IdentityInfo\n    | where TimeGenerated > ago(queryperiod)\n    | mv-expand AssignedRoles\n    | where AssignedRoles contains 'Admin'\n    | summarize by AccountUPN);\nAuditLogs\n| where TimeGenerated > ago(queryfrequency)\n| where Category =~ \"UserManagement\"\n| where ActivityDisplayName in (security_info_actions)\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"User\"\n      | extend TargetUserPrincipalName = tostring(TargetResource.userPrincipalName)\n  )\n| where TargetUserPrincipalName in~ (VIPUsers)\n// Uncomment the line below if you are experiencing high volumes of Target entities. If this is uncommented, the Target column will not be mapped to an entity.\n//| summarize Start=min(TimeGenerated), End=max(TimeGenerated), Actions = make_set(ResultReason, MaxSize=8), Targets=make_set(Target, MaxSize=256) by Initiator, IP, Result\n// Comment out this line below, if line above is used.\n| summarize Start=min(TimeGenerated), End=max(TimeGenerated), Actions = make_set(ResultReason, MaxSize=8) by InitiatingAppName, InitiatingAppServicePrincipalId, \nInitiatingUserPrincipalName, InitiatingAadUserId, InitiatingIpAddress, TargetUserPrincipalName, Result\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1]), \nTargetName = iff(tostring(TargetUserPrincipalName) has \"[\", \"\", tostring(split(TargetUserPrincipalName,'@',0)[0])), TargetUPNSuffix = iff(tostring(TargetUserPrincipalName) has \"[\", \"\", tostring(split(TargetUserPrincipalName,'@',1)[0]))\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "P14D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "BehaviorAnalytics",
                                        "dataTypes": [
                                            "IdentityInfo"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1098"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '694c91ee-d606-4ba9-928e-405a2dd0ff0f'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 7",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '694c91ee-d606-4ba9-928e-405a2dd0ff0f')]",
                                "contentId": "694c91ee-d606-4ba9-928e-405a2dd0ff0f",
                                "kind": "AnalyticsRule",
                                "version": "1.1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "694c91ee-d606-4ba9-928e-405a2dd0ff0f",
                "contentKind": "AnalyticsRule",
                "displayName": "Authentication Methods Changed for Privileged Account",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-myeuprcwkiows",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-myeuprcwkiows",
                "version": "1.1.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "IdentityInfo"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "BehaviorAnalytics"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('50574fac-f8d1-4395-81c7-78a463ff0c52')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "AzureAADPowerShellAnomaly_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.4",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "50574fac-f8d1-4395-81c7-78a463ff0c52",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when a user or application signs in using Microsoft Entra ID PowerShell to access non-Active Directory resources, such as the Azure Key Vault, which may be undesired or unauthorized behavior.\nFor capabilities and expected behavior of the Microsoft Entra ID PowerShell module, see: https://docs.microsoft.com/powershell/module/azuread/?view=azureadps-2.0.\nFor further information on Microsoft Entra ID Signin activity reports, see: https://docs.microsoft.com/azure/active-directory/reports-monitoring/concept-sign-ins.",
                                "displayName": "Microsoft Entra ID PowerShell accessing non-Entra ID resources",
                                "enabled": false,
                                "query": "let aadFunc = (tableName:string){\ntable(tableName)\n| where AppId =~ \"1b730954-1685-4b74-9bfd-dac224a7b894\" // AppDisplayName IS Azure Active Directory PowerShell\n| where TokenIssuerType =~ \"AzureAD\"\n| where ResourceIdentity !in (\"00000002-0000-0000-c000-000000000000\", \"00000003-0000-0000-c000-000000000000\") // ResourceDisplayName IS NOT Windows Azure Active Directory OR Microsoft Graph\n| extend Status = todynamic(Status)\n| where Status.errorCode == 0 // Success\n| project-reorder IPAddress, UserAgent, ResourceDisplayName, UserDisplayName, UserId, UserPrincipalName, Type\n| order by TimeGenerated desc\n| extend Name = tostring(split(UserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName,'@',1)[0])\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "UserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '50574fac-f8d1-4395-81c7-78a463ff0c52'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 8",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '50574fac-f8d1-4395-81c7-78a463ff0c52')]",
                                "contentId": "50574fac-f8d1-4395-81c7-78a463ff0c52",
                                "kind": "AnalyticsRule",
                                "version": "1.0.4",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "50574fac-f8d1-4395-81c7-78a463ff0c52",
                "contentKind": "AnalyticsRule",
                "displayName": "Microsoft Entra ID PowerShell accessing non-Entra ID resources",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-orondd4yveso4",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-orondd4yveso4",
                "version": "1.0.4",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1ff56009-db01-4615-8211-d4fda21da02d')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "AzureADRoleManagementPermissionGrant_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "1ff56009-db01-4615-8211-d4fda21da02d",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies when the Microsoft Graph RoleManagement.ReadWrite.Directory (Delegated or Application) permission is granted to a service principal.\nThis permission allows an application to read and manage the role-based access control (RBAC) settings for your company's directory.\nAn adversary could use this permission to add an Microsoft Entra ID object to an Admin directory role and escalate privileges.\nRef : https://docs.microsoft.com/graph/permissions-reference#role-management-permissions\nRef : https://docs.microsoft.com/graph/api/directoryrole-post-members?view=graph-rest-1.0&tabs=http",
                                "displayName": "Microsoft Entra ID Role Management Permission Grant",
                                "enabled": false,
                                "query": "AuditLogs\n| where Category =~ \"ApplicationManagement\" and LoggedByService =~ \"Core Directory\" and OperationName in~ (\"Add delegated permission grant\", \"Add app role assignment to service principal\")\n| mv-apply TargetResource = TargetResources on\n  (\n      where TargetResource.type =~ \"ServicePrincipal\" and array_length(TargetResource.modifiedProperties) > 0 and isnotnull(TargetResource.displayName)\n      | extend props = TargetResource.modifiedProperties\n  )\n| mv-apply Property = props on\n  (\n      where Property.displayName in~ (\"AppRole.Value\",\"DelegatedPermissionGrant.Scope\")\n      | extend DisplayName = tostring(Property.displayName), PermissionGrant = trim('\"',tostring(Property.newValue))\n  )\n| where PermissionGrant has \"RoleManagement.ReadWrite.Directory\"\n| mv-apply Property = props on\n  (\n      where Property.displayName =~ \"ServicePrincipal.DisplayName\"\n      | extend TargetAppDisplayName = trim('\"',tostring(Property.newValue))\n  )\n| mv-apply Property = props on\n  (\n      where Property.displayName =~ \"ServicePrincipal.ObjectID\"\n      | extend TargetAppServicePrincipalId = trim('\"',tostring(Property.newValue))\n  )\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| project TimeGenerated, OperationName, Result, PermissionGrant, TargetAppDisplayName, TargetAppServicePrincipalId, InitiatingAppName, InitiatingAppServicePrincipalId,\nInitiatingUserPrincipalName, InitiatingAadUserId, InitiatingIpAddress, TargetResources, AdditionalDetails, CorrelationId\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "PT2H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence",
                                    "Impact"
                                ],
                                "subTechniques": [
                                    "T1098.003",
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1098",
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetAppDisplayName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "TargetAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1ff56009-db01-4615-8211-d4fda21da02d'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 9",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1ff56009-db01-4615-8211-d4fda21da02d')]",
                                "contentId": "1ff56009-db01-4615-8211-d4fda21da02d",
                                "kind": "AnalyticsRule",
                                "version": "1.1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "1ff56009-db01-4615-8211-d4fda21da02d",
                "contentKind": "AnalyticsRule",
                "displayName": "Microsoft Entra ID Role Management Permission Grant",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-f267774zojfxs",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-f267774zojfxs",
                "version": "1.1.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('87210ca1-49a4-4a7d-bb4a-4988752f978c')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "AzurePortalSigninfromanotherAzureTenant_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "2.0.3",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "87210ca1-49a4-4a7d-bb4a-4988752f978c",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query looks for successful sign in attempts to the Azure Portal where the user who is signing in from another Azure tenant, and the IP address the login attempt is from is an Azure IP. A threat actor who compromises an Azure tenant may look to pivot to other tenants leveraging cross-tenant delegated access in this manner.",
                                "displayName": "Azure Portal sign in from another Azure Tenant",
                                "enabled": false,
                                "query": "// Get details of current Azure Ranges (note this URL updates regularly so will need to be manually updated over time)\n// You may find the name of the new JSON here: https://www.microsoft.com/download/details.aspx?id=56519\n// On the downloads page, click the 'details' button, and then replace just the filename in the URL below\nlet azure_ranges = externaldata(changeNumber: string, cloud: string, values: dynamic)\n[\"https://raw.githubusercontent.com/microsoft/mstic/master/PublicFeeds/MSFTIPRanges/ServiceTags_Public.json\"] with(format='multijson')\n| mv-expand values\n| mv-expand values.properties.addressPrefixes\n| mv-expand values_properties_addressPrefixes\n| summarize by tostring(values_properties_addressPrefixes)\n| extend isipv4 = parse_ipv4(values_properties_addressPrefixes)\n| extend isipv6 = parse_ipv6(values_properties_addressPrefixes)\n| extend ip_type = case(isnotnull(isipv4), \"v4\", \"v6\")\n| summarize make_list(values_properties_addressPrefixes) by ip_type\n;\nSigninLogs\n// Limiting to Azure Portal really reduces false positives and helps focus on potential admin activity\n| where ResultType == 0\n| where AppDisplayName =~ \"Azure Portal\"\n| extend isipv4 = parse_ipv4(IPAddress)\n| extend ip_type = case(isnotnull(isipv4), \"v4\", \"v6\")\n // Only get logons where the IP address is in an Azure range\n| join kind=fullouter (azure_ranges) on ip_type\n| extend ipv6_match = ipv6_is_in_any_range(IPAddress,  list_values_properties_addressPrefixes)\n| extend ipv4_match = ipv4_is_in_any_range(IPAddress,  list_values_properties_addressPrefixes)\n| where ipv4_match or ipv6_match \n// Limit to where the user is external to the tenant\n| where HomeTenantId != ResourceTenantId\n// Further limit it to just access to the current tenant (you can drop this if you wanted to look elsewhere as well but it helps reduce FPs)\n| where ResourceTenantId == AADTenantId\n| summarize FirstSeen = min(TimeGenerated), LastSeen = max(TimeGenerated), make_set(ResourceDisplayName) by UserPrincipalName, IPAddress, UserAgent, Location, HomeTenantId, ResourceTenantId, UserId\n| extend AccountName = split(UserPrincipalName, \"@\")[0]\n| extend UPNSuffix = split(UserPrincipalName, \"@\")[1]\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1199"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "AccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "UserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ],
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "This query looks for successful sign in attempts to the Azure Portal where the user who is signing in from another Azure tenant,\nand the IP address the login attempt is from is an Azure IP. A threat actor who compromises an Azure tenant may look\nto pivot to other tenants leveraging cross-tenant delegated access in this manner.\nIn this instance {{UserPrincipalName}} logged in at {{FirstSeen}} from IP Address {{IPAddress}}.\n",
                                    "alertDisplayNameFormat": "Azure Portal sign in by {{UserPrincipalName}} from another Azure Tenant with IP Address {{IPAddress}}"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '87210ca1-49a4-4a7d-bb4a-4988752f978c'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 10",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '87210ca1-49a4-4a7d-bb4a-4988752f978c')]",
                                "contentId": "87210ca1-49a4-4a7d-bb4a-4988752f978c",
                                "kind": "AnalyticsRule",
                                "version": "2.0.3",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "87210ca1-49a4-4a7d-bb4a-4988752f978c",
                "contentKind": "AnalyticsRule",
                "displayName": "Azure Portal sign in from another Azure Tenant",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-sh5mbdvvrpvzu",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-sh5mbdvvrpvzu",
                "version": "2.0.3",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('97ad74c4-fdd9-4a3f-b6bf-5e28f4f71e06')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Brute Force Attack against GitHub Account_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "2.0.2",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "97ad74c4-fdd9-4a3f-b6bf-5e28f4f71e06",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Attackers who are trying to guess your users' passwords or use brute-force methods to get in. If your organization is using SSO with Microsoft Entra ID, authentication logs to GitHub.com will be generated. Using the following query can help you identify a sudden increase in failed logon attempt of users.",
                                "displayName": "Brute Force Attack against GitHub Account",
                                "enabled": false,
                                "query": "let LearningPeriod = 7d;\nlet BinTime = 1h;\nlet RunTime = 1h;\nlet StartTime = 1h;  \nlet sensitivity = 2.5;\nlet EndRunTime = StartTime - RunTime;\nlet EndLearningTime = StartTime + LearningPeriod;\nlet aadFunc = (tableName:string){\ntable(tableName)  \n| where TimeGenerated between (ago(EndLearningTime) .. ago(EndRunTime))\n| where AppDisplayName =~ \"GitHub.com\"\n| where ResultType != 0\n| make-series FailedLogins = count() on TimeGenerated from ago(LearningPeriod) to ago(EndRunTime) step BinTime by UserPrincipalName, Type\n| extend (Anomalies, Score, Baseline) = series_decompose_anomalies(FailedLogins, sensitivity, -1, 'linefit')\n| mv-expand FailedLogins to typeof(double), TimeGenerated to typeof(datetime), Anomalies to typeof(double), Score to typeof(double), Baseline to typeof(long)  \n| where TimeGenerated >= ago(RunTime)\n| where Anomalies > 0 and Baseline > 0\n| join kind=inner (\n          table(tableName)  \n          | where TimeGenerated between (ago(StartTime) .. ago(EndRunTime))\n          | where AppDisplayName =~ \"GitHub.com\"\n          | where ResultType != 0\n          | summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), IPAddresses = make_set(IPAddress,100), Locations = make_set(LocationDetails,20), Devices = make_set(DeviceDetail,20) by UserPrincipalName, UserId, AppDisplayName\n      ) on UserPrincipalName\n| project-away UserPrincipalName1\n| extend Name = tostring(split(UserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName,'@',1)[0])\n| extend IPAddressFirst = tostring(IPAddresses[0])\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P7D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1110"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "UserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddressFirst"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '97ad74c4-fdd9-4a3f-b6bf-5e28f4f71e06'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 11",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '97ad74c4-fdd9-4a3f-b6bf-5e28f4f71e06')]",
                                "contentId": "97ad74c4-fdd9-4a3f-b6bf-5e28f4f71e06",
                                "kind": "AnalyticsRule",
                                "version": "2.0.2",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "97ad74c4-fdd9-4a3f-b6bf-5e28f4f71e06",
                "contentKind": "AnalyticsRule",
                "displayName": "Brute Force Attack against GitHub Account",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-uqlxlrwspocly",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-uqlxlrwspocly",
                "version": "2.0.2",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('3fbc20a4-04c4-464e-8fcb-6667f53e4987')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "BruteForceCloudPC_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "2.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "3fbc20a4-04c4-464e-8fcb-6667f53e4987",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies evidence of brute force activity against a Windows 365 Cloud PC by highlighting multiple authentication failures and by a successful authentication within a given time window.",
                                "displayName": "Brute force attack against a Cloud PC",
                                "enabled": false,
                                "query": "let authenticationWindow = 20m;\nlet sensitivity = 2.5;\nSigninLogs\n| where AppDisplayName =~ \"Windows Sign In\"\n| extend FailureOrSuccess = iff(ResultType in (\"0\", \"50125\", \"50140\", \"70043\", \"70044\"), \"Success\", \"Failure\")\n| summarize FailureCount = countif(FailureOrSuccess==\"Failure\"), SuccessCount = countif(FailureOrSuccess==\"Success\"), IPAddresses = make_set(IPAddress,1000)\n                          by bin(TimeGenerated, authenticationWindow), UserDisplayName, UserPrincipalName\n| extend FailureSuccessDiff = FailureCount - SuccessCount\n| where FailureSuccessDiff > 0\n| summarize Diff = make_list(FailureSuccessDiff, 10000), TimeStamp = make_list(TimeGenerated, 10000) by UserDisplayName, UserPrincipalName//, tostring(IPAddresses)\n| extend (Anomalies, Score, Baseline) = series_decompose_anomalies(Diff, sensitivity, -1, 'linefit')  \n| mv-expand Diff to typeof(double), TimeStamp to typeof(datetime), Anomalies to typeof(double), Score to typeof(double), Baseline to typeof(long)\n| where Anomalies > 0\n| summarize by UserDisplayName, UserPrincipalName, Anomalies, Score, Baseline, FailureToSuccessDiff = Diff\n| join kind=leftouter (\n      SigninLogs\n      | where AppDisplayName =~ \"Windows Sign In\"\n      | extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\n      | extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\n      | extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)\n      | summarize StartTime = min(TimeGenerated), \n                  EndTime = max(TimeGenerated), \n                  IPAddresses = make_set(IPAddress,100), \n                  OS = make_set(OS,20), \n                  Browser = make_set(Browser,20), \n                  City = make_set(City,100), \n                  ResultType = make_set(ResultType,100)\n              by UserDisplayName, UserPrincipalName, UserId, AppDisplayName\n  ) on UserDisplayName, UserPrincipalName\n| project-away UserDisplayName1, UserPrincipalName1\n| extend IPAddressFirst = tostring(IPAddresses[0])\n| extend Name = tostring(split(UserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1110"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "UserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddressFirst"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3fbc20a4-04c4-464e-8fcb-6667f53e4987'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 12",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3fbc20a4-04c4-464e-8fcb-6667f53e4987')]",
                                "contentId": "3fbc20a4-04c4-464e-8fcb-6667f53e4987",
                                "kind": "AnalyticsRule",
                                "version": "2.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "3fbc20a4-04c4-464e-8fcb-6667f53e4987",
                "contentKind": "AnalyticsRule",
                "displayName": "Brute force attack against a Cloud PC",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-bn2gsvs44mkpi",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-bn2gsvs44mkpi",
                "version": "2.0.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('218f60de-c269-457a-b882-9966632b9dc6')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "BulkChangestoPrivilegedAccountPermissions_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.7",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "218f60de-c269-457a-b882-9966632b9dc6",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies when changes to multiple users permissions are changed at once. Investigate immediately if not a planned change. This setting could enable an attacker access to Azure subscriptions in your environment.\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-privileged-identity-management",
                                "displayName": "Bulk Changes to Privileged Account Permissions",
                                "enabled": false,
                                "query": "let AdminRecords = AuditLogs\n| where Category =~ \"RoleManagement\"\n| where ActivityDisplayName has_any (\"Add eligible member to role\", \"Add member to role\")\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"User\"\n      | extend TargetUserPrincipalName = tostring(TargetResource.userPrincipalName),\n               props = TargetResource.modifiedProperties\n  )\n| mv-apply Property = props on \n  (\n      where Property.displayName =~ \"Role.DisplayName\"\n      | extend RoleName = trim('\"',tostring(Property.newValue))\n  )\n| where RoleName contains \"Admin\";\nAdminRecords\n| summarize dcount(TargetUserPrincipalName) by bin(TimeGenerated, 1h)\n| where dcount_TargetUserPrincipalName > 9\n| join kind=rightsemi  (\n  AdminRecords\n  | extend TimeWindow = bin(TimeGenerated, 1h)\n) on $left.TimeGenerated == $right.TimeWindow\n| extend InitiatedByUser = iff(isnotempty(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.user.userPrincipalName), \"\")\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend TargetName = tostring(split(TargetUserPrincipalName,'@',0)[0]), TargetUPNSuffix = tostring(split(TargetUserPrincipalName,'@',1)[0])\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "PT2H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "subTechniques": [
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "TargetUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ],
                                "customDetails": {
                                    "TargetUser": "TargetUserPrincipalName",
                                    "InitiatedByUser": "InitiatedByUser"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '218f60de-c269-457a-b882-9966632b9dc6'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 13",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '218f60de-c269-457a-b882-9966632b9dc6')]",
                                "contentId": "218f60de-c269-457a-b882-9966632b9dc6",
                                "kind": "AnalyticsRule",
                                "version": "1.0.7",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "218f60de-c269-457a-b882-9966632b9dc6",
                "contentKind": "AnalyticsRule",
                "displayName": "Bulk Changes to Privileged Account Permissions",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-qu32ahfqqbuyw",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-qu32ahfqqbuyw",
                "version": "1.0.7",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('3af9285d-bb98-4a35-ad29-5ea39ba0c628')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "BypassCondAccessRule_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.7",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "3af9285d-bb98-4a35-ad29-5ea39ba0c628",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies an attempt to Bypass conditional access rule(s) in Microsoft Entra ID.\nThe ConditionalAccessStatus column value details if there was an attempt to bypass Conditional Access or if the Conditional access rule was not satisfied (ConditionalAccessStatus == 1).\nReferences:\nhttps://docs.microsoft.com/azure/active-directory/conditional-access/overview\nhttps://docs.microsoft.com/azure/active-directory/reports-monitoring/concept-sign-ins\nhttps://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-sign-ins-error-codes\nConditionalAccessStatus == 0 // Success\nConditionalAccessStatus == 1 // Failure\nConditionalAccessStatus == 2 // Not Applied\nConditionalAccessStatus == 3 // unknown",
                                "displayName": "Attempt to bypass conditional access rule in Microsoft Entra ID",
                                "enabled": false,
                                "query": "let threshold = 1; // Modify this threshold value to reduce false positives based on your environment\nlet aadFunc = (tableName:string){\ntable(tableName)\n| where ConditionalAccessStatus == 1 or ConditionalAccessStatus =~ \"failure\"\n| mv-apply CAP = parse_json(ConditionalAccessPolicies) on (\n  project ConditionalAccessPoliciesName = CAP.displayName, result = CAP.result\n  | where result =~ \"failure\"\n)\n| extend DeviceDetail = todynamic(DeviceDetail), Status = todynamic(Status), LocationDetails = todynamic(LocationDetails)\n| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\n| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city), Region = tostring(LocationDetails.countryOrRegion)\n| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\n| extend Status = strcat(StatusCode, \": \", ResultDescription)\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), Status = make_list(Status,10), StatusDetails = make_list(StatusDetails,50), IPAddresses = make_list(IPAddress,100), IPAddressCount = dcount(IPAddress), CorrelationIds = make_list(CorrelationId,100), ConditionalAccessPoliciesName = make_list(ConditionalAccessPoliciesName,100)\nby UserPrincipalName, UserId, AppDisplayName, tostring(Browser), tostring(OS), City, State, Region, Type\n| where IPAddressCount > threshold and StatusDetails !has \"MFA successfully completed\"\n| mv-expand IPAddresses, Status, StatusDetails, CorrelationIds\n| extend Status = strcat(Status, \" \", StatusDetails)\n| summarize IPAddresses = make_set(IPAddresses,100), Status = make_set(Status,10), CorrelationIds = make_set(CorrelationIds,100), ConditionalAccessPoliciesName = make_set(ConditionalAccessPoliciesName,100)\nby StartTime, EndTime, UserPrincipalName, UserId, AppDisplayName, tostring(Browser), tostring(OS), City, State, Region, IPAddressCount, Type\n| extend IPAddressFirst = tostring(IPAddresses[0]), Name = tostring(split(UserPrincipalName, \"@\")[0]), UPNSuffix = tostring(split(UserPrincipalName, \"@\")[1])\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1098"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "UserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddressFirst"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3af9285d-bb98-4a35-ad29-5ea39ba0c628'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 14",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3af9285d-bb98-4a35-ad29-5ea39ba0c628')]",
                                "contentId": "3af9285d-bb98-4a35-ad29-5ea39ba0c628",
                                "kind": "AnalyticsRule",
                                "version": "1.0.7",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "3af9285d-bb98-4a35-ad29-5ea39ba0c628",
                "contentKind": "AnalyticsRule",
                "displayName": "Attempt to bypass conditional access rule in Microsoft Entra ID",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-7uaqcomkzvuou",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-7uaqcomkzvuou",
                "version": "1.0.7",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('707494a5-8e44-486b-90f8-155d1797a8eb')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "CredentialAddedAfterAdminConsent_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "707494a5-8e44-486b-90f8-155d1797a8eb",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query will identify instances where Service Principal credentials were added to an application by one user after the application was granted admin consent rights by another user.\n If a threat actor obtains access to an account with sufficient privileges and adds the alternate authentication material triggering this event, the threat actor can now authenticate as the Application or Service Principal using this credential.\n Additional information on OAuth Credential Grants can be found in RFC 6749 Section 4.4 or https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow.\n For further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities",
                                "displayName": "Credential added after admin consented to Application",
                                "enabled": false,
                                "query": "let auditLookbackStart = 2d;\nlet auditLookbackEnd = 1d;\nAuditLogs\n| where TimeGenerated >= ago(auditLookbackStart)\n| where OperationName =~ \"Consent to application\" \n| where Result =~ \"success\"\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"ServicePrincipal\"\n      | extend targetResourceName = tostring(TargetResource.displayName),\n               targetResourceID = tostring(TargetResource.id),\n               targetResourceType = tostring(TargetResource.type),\n               targetModifiedProp = TargetResource.modifiedProperties\n  )\n| mv-apply Property = targetModifiedProp on \n  (\n      where Property.displayName =~ \"ConsentContext.IsAdminConsent\"\n      | extend isAdminConsent = trim(@'\"',tostring(Property.newValue))\n  )\n| mv-apply Property = targetModifiedProp on \n  (\n      where Property.displayName =~ \"ConsentAction.Permissions\"\n      | extend Consent_TargetPermissions = trim(@'\"',tostring(Property.newValue))\n  )\n| mv-apply Property = targetModifiedProp on \n  (\n      where Property.displayName =~ \"TargetId.ServicePrincipalNames\"\n      | extend Consent_TargetServicePrincipalNames = tostring(extract_all(@\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})\",trim(@'\"',tostring(Property.newValue)))[0])\n  )\n| extend Consent_InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\n| extend Consent_InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend Consent_InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend Consent_InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend Consent_InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend Consent_InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| join kind=inner ( \nAuditLogs\n| where TimeGenerated  >= ago(auditLookbackEnd)\n| where OperationName =~ \"Add service principal credentials\"\n| where Result =~ \"success\"\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"ServicePrincipal\"\n      | extend targetResourceName = tostring(TargetResource.displayName),\n               targetResourceID = tostring(TargetResource.id),\n               targetModifiedProp = TargetResource.modifiedProperties\n  )\n| mv-apply Property = targetModifiedProp on \n  (\n      where Property.displayName =~ \"KeyDescription\"\n      | extend Credential_TargetKeyDescription = trim(@'\"',tostring(Property.newValue))\n  )\n| mv-apply Property = targetModifiedProp on \n  (\n      where Property.displayName =~ \"Included Updated Properties\"\n      | extend UpdatedProperties = trim(@'\"',tostring(Property.newValue))\n  )\n| mv-apply Property = targetModifiedProp on \n  (\n      where Property.displayName =~ \"TargetId.ServicePrincipalNames\"\n      | extend Credential_TargetServicePrincipalNames = tostring(extract_all(@\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})\",trim(@'\"',tostring(Property.newValue)))[0])\n  )\n| extend Credential_InitiatingUserOrApp = iff(isnotempty(InitiatedBy.user.userPrincipalName),tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\n| extend Credential_InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend Credential_InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend Credential_InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend Credential_InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend Credential_InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n) on targetResourceName, targetResourceID\n| extend TimeConsent = TimeGenerated, TimeCred = TimeGenerated1\n| where TimeConsent < TimeCred \n| project TimeConsent, TimeCred, targetResourceName, targetResourceType, isAdminConsent, \nConsent_InitiatingUserOrApp, Consent_TargetServicePrincipalNames, Consent_TargetPermissions,\nConsent_InitiatingAppName, Consent_InitiatingAppServicePrincipalId, Consent_InitiatingUserPrincipalName, Consent_InitiatingAadUserId, Consent_InitiatingIpAddress,\nCredential_InitiatingUserOrApp, Credential_TargetServicePrincipalNames, Credential_TargetKeyDescription,\nCredential_InitiatingAppName, Credential_InitiatingAppServicePrincipalId, Credential_InitiatingUserPrincipalName, Credential_InitiatingAadUserId, Credential_InitiatingIpAddress\n| extend Consent_AccountName = tostring(split(Consent_InitiatingUserPrincipalName, \"@\")[0]), Consent_UPNSuffix = tostring(split(Consent_InitiatingUserPrincipalName, \"@\")[1])\n| extend Credential_AccountName = tostring(split(Credential_InitiatingUserPrincipalName, \"@\")[0]), Credential_UPNSuffix = tostring(split(Credential_InitiatingUserPrincipalName, \"@\")[1])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P2D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess",
                                    "Persistence",
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1555",
                                    "T1098"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "Consent_InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "Consent_InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "Credential_InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "Credential_InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Consent_InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Consent_AccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "Consent_UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "Consent_InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Credential_InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Credential_AccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "Credential_UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "Credential_InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "Consent_InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "Credential_InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '707494a5-8e44-486b-90f8-155d1797a8eb'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 15",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '707494a5-8e44-486b-90f8-155d1797a8eb')]",
                                "contentId": "707494a5-8e44-486b-90f8-155d1797a8eb",
                                "kind": "AnalyticsRule",
                                "version": "1.1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "707494a5-8e44-486b-90f8-155d1797a8eb",
                "contentKind": "AnalyticsRule",
                "displayName": "Credential added after admin consented to Application",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-in5piaehbjcx6",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-in5piaehbjcx6",
                "version": "1.1.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('757e6a79-6d23-4ae6-9845-4dac170656b5')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Cross-tenantAccessSettingsOrganizationAdded_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "757e6a79-6d23-4ae6-9845-4dac170656b5",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Organizations are added in the Cross-tenant Access Settings to control communication inbound or outbound for users and applications. This detection notifies when an Organization is added other than the list that is supposed to exist from the Microsoft Entra ID Cross-tenant Access Settings.",
                                "displayName": "Cross-tenant Access Settings Organization Added",
                                "enabled": false,
                                "query": "// Tenants IDs can be found by navigating to Azure Active Directory then from menu on the left, select External Identities, then from menu on the left, select Cross-tenant access settings and from the list shown of Tenants\nlet ExpectedTenantIDs = dynamic([\"List of expected tenant IDs\",\"Tenant ID 2\"]);\nAuditLogs\n| where OperationName has \"Add a partner to cross-tenant access setting\"\n| mv-apply TargetResource = TargetResources on\n  (\n      where TargetResource.type =~ \"Policy\"\n      | extend Properties = TargetResource.modifiedProperties\n  )\n| mv-apply Property = Properties on\n  (\n      where Property.displayName =~ \"tenantId\"\n      | extend ExtTenantIDAdded = trim('\"',tostring(Property.newValue))\n  )\n| where ExtTenantIDAdded !in (ExpectedTenantIDs)\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n",
                                "queryFrequency": "P2D",
                                "queryPeriod": "P2D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "Persistence",
                                    "Discovery"
                                ],
                                "subTechniques": [
                                    "T1078.004",
                                    "T1136.003",
                                    "T1087.004"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1136",
                                    "T1087"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '757e6a79-6d23-4ae6-9845-4dac170656b5'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 16",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '757e6a79-6d23-4ae6-9845-4dac170656b5')]",
                                "contentId": "757e6a79-6d23-4ae6-9845-4dac170656b5",
                                "kind": "AnalyticsRule",
                                "version": "1.1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "757e6a79-6d23-4ae6-9845-4dac170656b5",
                "contentKind": "AnalyticsRule",
                "displayName": "Cross-tenant Access Settings Organization Added",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-taxbcf6qkpfqa",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-taxbcf6qkpfqa",
                "version": "1.1.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('eb8a9c1c-f532-4630-817c-1ecd8a60ed80')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Cross-tenantAccessSettingsOrganizationDeleted_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "eb8a9c1c-f532-4630-817c-1ecd8a60ed80",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Organizations are added in the Cross-tenant Access Settings to control communication inbound or outbound for users and applications. This detection notifies when an Organization is deleted from the Microsoft Entra ID Cross-tenant Access Settings.",
                                "displayName": "Cross-tenant Access Settings Organization Deleted",
                                "enabled": false,
                                "query": "AuditLogs\n| where OperationName has \"Delete partner specific cross-tenant access setting\"\n| mv-apply TargetResource = TargetResources on\n  (\n      where TargetResource.type =~ \"Policy\"\n      | extend Properties = TargetResource.modifiedProperties\n  )\n| mv-apply Property = Properties on\n  (\n      where Property.displayName =~ \"tenantId\"\n      | extend ExtTenantDeleted = trim('\"',tostring(Property.oldValue))\n  )\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n",
                                "queryFrequency": "P2D",
                                "queryPeriod": "P2D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "Persistence",
                                    "Discovery"
                                ],
                                "subTechniques": [
                                    "T1078.004",
                                    "T1136.003",
                                    "T1087.004"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1136",
                                    "T1087"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'eb8a9c1c-f532-4630-817c-1ecd8a60ed80'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 17",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'eb8a9c1c-f532-4630-817c-1ecd8a60ed80')]",
                                "contentId": "eb8a9c1c-f532-4630-817c-1ecd8a60ed80",
                                "kind": "AnalyticsRule",
                                "version": "1.1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "eb8a9c1c-f532-4630-817c-1ecd8a60ed80",
                "contentKind": "AnalyticsRule",
                "displayName": "Cross-tenant Access Settings Organization Deleted",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-nftgo4u4msdf2",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-nftgo4u4msdf2",
                "version": "1.1.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('c895c5b9-0fc6-40ce-9830-e8818862f2d5')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Cross-tenantAccessSettingsOrganizationInboundCollaborationSettingsChanged_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "c895c5b9-0fc6-40ce-9830-e8818862f2d5",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Organizations are added in the Cross-tenant Access Settings to control communication inbound or outbound for users and applications. This detection notifies when Organization Inbound Collaboration Settings are changed for \"Users & Groups\" and for \"Applications\".",
                                "displayName": "Cross-tenant Access Settings Organization Inbound Collaboration Settings Changed",
                                "enabled": false,
                                "query": "// In User & Groups and in Applications, the following \"AccessType\" values in columns PremodifiedInboundSettings and ModifiedInboundSettings are interpreted accordingly\n// When Access Type in premodified inbound settings value was 1 that means that the initial access was allowed. When Access Type in premodified inbound settings value was 2 that means that the initial access was blocked.\n// When Access Type in modified inbound settings value is 1 that means that now access is allowed. When Access Type in modified inbound settings value is 2 that means that now access is blocked.\nAuditLogs\n| where OperationName has \"Update a partner cross-tenant access setting\"\n| mv-apply TargetResource = TargetResources on\n  (\n      where TargetResource.type =~ \"Policy\"\n      | extend Properties = TargetResource.modifiedProperties\n  )\n| mv-apply Property = Properties on\n  (\n      where Property.displayName =~ \"b2bCollaborationInbound\"\n      | extend PremodifiedInboundSettings = trim('\"',tostring(Property.oldValue)),\n               ModifiedInboundSettings = trim(@'\"',tostring(Property.newValue))\n  )\n| where PremodifiedInboundSettings != ModifiedInboundSettings\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n",
                                "queryFrequency": "P2D",
                                "queryPeriod": "P2D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "Persistence",
                                    "Discovery"
                                ],
                                "subTechniques": [
                                    "T1078.004",
                                    "T1136.003",
                                    "T1087.004"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1136",
                                    "T1087"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c895c5b9-0fc6-40ce-9830-e8818862f2d5'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 18",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c895c5b9-0fc6-40ce-9830-e8818862f2d5')]",
                                "contentId": "c895c5b9-0fc6-40ce-9830-e8818862f2d5",
                                "kind": "AnalyticsRule",
                                "version": "1.1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "c895c5b9-0fc6-40ce-9830-e8818862f2d5",
                "contentKind": "AnalyticsRule",
                "displayName": "Cross-tenant Access Settings Organization Inbound Collaboration Settings Changed",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-5pk7cnypkgpk2",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-5pk7cnypkgpk2",
                "version": "1.1.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('276d5190-38de-4eb2-9933-b3b72f4a5737')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Cross-tenantAccessSettingsOrganizationInboundDirectSettingsChanged_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "276d5190-38de-4eb2-9933-b3b72f4a5737",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Organizations are added in the Cross-tenant Access Settings to control communication inbound or outbound for users and applications. This detection notifies when Organization Inbound Direct Settings are changed for \"Users & Groups\" and for \"Applications\".",
                                "displayName": "Cross-tenant Access Settings Organization Inbound Direct Settings Changed",
                                "enabled": false,
                                "query": "// In User & Groups and in Applications, the following \"AccessType\" values in columns PremodifiedInboundSettings and ModifiedInboundSettings are interpreted accordingly\n// When Access Type in premodified inbound settings value was 1 that means that the initial access was allowed. When Access Type in premodified inbound settings value was 2 that means that the initial access was blocked.\n// When Access Type in modified inbound settings value is 1 that means that now access is allowed. When Access Type in modified inbound settings value is 2 that means that now access is blocked.\nAuditLogs\n| where OperationName has \"Update a partner cross-tenant access setting\"\n| mv-apply TargetResource = TargetResources on\n  (\n      where TargetResource.type =~ \"Policy\"\n      | extend Properties = TargetResource.modifiedProperties\n  )\n| mv-apply Property = Properties on\n  (\n      where Property.displayName =~ \"b2bDirectConnectInbound\"\n      | extend PremodifiedInboundSettings = trim('\"',tostring(Property.oldValue)),\n               ModifiedInboundSettings = trim(@'\"',tostring(Property.newValue))\n  )\n| where PremodifiedInboundSettings != ModifiedInboundSettings\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n",
                                "queryFrequency": "P2D",
                                "queryPeriod": "P2D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "Persistence",
                                    "Discovery"
                                ],
                                "subTechniques": [
                                    "T1078.004",
                                    "T1136.003",
                                    "T1087.004"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1136",
                                    "T1087"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '276d5190-38de-4eb2-9933-b3b72f4a5737'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 19",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '276d5190-38de-4eb2-9933-b3b72f4a5737')]",
                                "contentId": "276d5190-38de-4eb2-9933-b3b72f4a5737",
                                "kind": "AnalyticsRule",
                                "version": "1.1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "276d5190-38de-4eb2-9933-b3b72f4a5737",
                "contentKind": "AnalyticsRule",
                "displayName": "Cross-tenant Access Settings Organization Inbound Direct Settings Changed",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-mal77e2g46flm",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-mal77e2g46flm",
                "version": "1.1.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('229f71ba-d83b-42a5-b83b-11a641049ed1')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Cross-tenantAccessSettingsOrganizationOutboundCollaborationSettingsChanged_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "229f71ba-d83b-42a5-b83b-11a641049ed1",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Organizations are added in the Cross-tenant Access Settings to control communication inbound or outbound for users and applications. This detection notifies when Organization Outbound Collaboration Settings are changed for \"Users & Groups\" and for \"Applications\".",
                                "displayName": "Cross-tenant Access Settings Organization Outbound Collaboration Settings Changed",
                                "enabled": false,
                                "query": "// In User & Groups and in Applications, the following \"AccessType\" values in columns PremodifiedOutboundSettings and ModifiedOutboundSettings are interpreted accordingly\n// When Access Type in premodified outbound settings value was 1 that means that the initial access was allowed. When Access Type in premodified outbound settings value was 2 that means that the initial access was blocked.\n// When Access Type in modified outbound settings value is 1 that means that now access is allowed. When Access Type in modified outbound settings value is 2 that means that now access is blocked.\nAuditLogs\n| where OperationName has \"Update a partner cross-tenant access setting\"\n| mv-apply TargetResource = TargetResources on\n  (\n      where TargetResource.type =~ \"Policy\"\n      | extend Properties = TargetResource.modifiedProperties\n  )\n| mv-apply Property = Properties on\n  (\n      where Property.displayName =~ \"b2bCollaborationOutbound\"\n      | extend PremodifiedOutboundSettings = trim('\"',tostring(Property.oldValue)),\n               ModifiedOutboundSettings = trim(@'\"',tostring(Property.newValue))\n  )\n| where PremodifiedOutboundSettings != ModifiedOutboundSettings\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n",
                                "queryFrequency": "P2D",
                                "queryPeriod": "P2D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "Persistence",
                                    "Discovery"
                                ],
                                "subTechniques": [
                                    "T1078.004",
                                    "T1136.003",
                                    "T1087.004"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1136",
                                    "T1087"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '229f71ba-d83b-42a5-b83b-11a641049ed1'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 20",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '229f71ba-d83b-42a5-b83b-11a641049ed1')]",
                                "contentId": "229f71ba-d83b-42a5-b83b-11a641049ed1",
                                "kind": "AnalyticsRule",
                                "version": "1.1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "229f71ba-d83b-42a5-b83b-11a641049ed1",
                "contentKind": "AnalyticsRule",
                "displayName": "Cross-tenant Access Settings Organization Outbound Collaboration Settings Changed",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-xinspjqzvrggu",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-xinspjqzvrggu",
                "version": "1.1.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('0101e08d-99cd-4a97-a9e0-27649c4369ad')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Cross-tenantAccessSettingsOrganizationOutboundDirectSettingsChanged_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "0101e08d-99cd-4a97-a9e0-27649c4369ad",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Organizations are added in the Cross-tenant Access Settings to control communication inbound or outbound for users and applications. This detection notifies when Organization Outbound Direct Settings are changed for \"Users & Groups\" and for \"Applications\".",
                                "displayName": "Cross-tenant Access Settings Organization Outbound Direct Settings Changed",
                                "enabled": false,
                                "query": "// In User & Groups and in Applications, the following \"AccessType\" values in columns PremodifiedOutboundSettings and ModifiedOutboundSettings are interpreted accordingly\n// When Access Type in premodified outbound settings value was 1 that means that the initial access was allowed. When Access Type in premodified outbound settings value was 2 that means that the initial access was blocked.\n// When Access Type in modified outbound settings value is 1 that means that now access is allowed. When Access Type in modified outbound settings value is 2 that means that now access is blocked.\nAuditLogs\n| where OperationName has \"Update a partner cross-tenant access setting\"\n| mv-apply TargetResource = TargetResources on\n  (\n      where TargetResource.type =~ \"Policy\"\n      | extend Properties = TargetResource.modifiedProperties\n  )\n| mv-apply Property = Properties on\n  (\n      where Property.displayName =~ \"b2bDirectConnectOutbound\"\n      | extend PremodifiedOutboundSettings = trim('\"',tostring(Property.oldValue)),\n               ModifiedOutboundSettings = trim(@'\"',tostring(Property.newValue))\n  )\n| where PremodifiedOutboundSettings != ModifiedOutboundSettings\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend InitiatingAccountName = tostring(split(InitiatingUserPrincipalName, \"@\")[0]), InitiatingAccountUPNSuffix = tostring(split(InitiatingUserPrincipalName, \"@\")[1])\n",
                                "queryFrequency": "P2D",
                                "queryPeriod": "P2D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "Persistence",
                                    "Discovery"
                                ],
                                "subTechniques": [
                                    "T1078.004",
                                    "T1136.003",
                                    "T1087.004"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1136",
                                    "T1087"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatingAccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '0101e08d-99cd-4a97-a9e0-27649c4369ad'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 21",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '0101e08d-99cd-4a97-a9e0-27649c4369ad')]",
                                "contentId": "0101e08d-99cd-4a97-a9e0-27649c4369ad",
                                "kind": "AnalyticsRule",
                                "version": "1.1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "0101e08d-99cd-4a97-a9e0-27649c4369ad",
                "contentKind": "AnalyticsRule",
                "displayName": "Cross-tenant Access Settings Organization Outbound Direct Settings Changed",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-vphig5gkmc3qu",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-vphig5gkmc3qu",
                "version": "1.1.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('75ea5c39-93e5-489b-b1e1-68fa6c9d2d04')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "DisabledAccountSigninsAcrossManyApplications_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.3",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "75ea5c39-93e5-489b-b1e1-68fa6c9d2d04",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies failed attempts to sign in to disabled accounts across multiple Azure Applications.\nDefault threshold for Azure Applications attempted to sign in to is 3.\nReferences: https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-sign-ins-error-codes\n50057 - User account is disabled. The account has been disabled by an administrator.",
                                "displayName": "Attempts to sign in to disabled accounts",
                                "enabled": false,
                                "query": "let threshold = 3;\nlet aadFunc = (tableName:string){\ntable(tableName)\n| where ResultType == \"50057\"\n| where ResultDescription =~ \"User account is disabled. The account has been disabled by an administrator.\"\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), applicationCount = dcount(AppDisplayName),\napplicationSet = make_set(AppDisplayName), count() by UserPrincipalName, IPAddress, Type\n| where applicationCount >= threshold\n| extend Name = tostring(split(UserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName,'@',1)[0])\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '75ea5c39-93e5-489b-b1e1-68fa6c9d2d04'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 22",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '75ea5c39-93e5-489b-b1e1-68fa6c9d2d04')]",
                                "contentId": "75ea5c39-93e5-489b-b1e1-68fa6c9d2d04",
                                "kind": "AnalyticsRule",
                                "version": "1.0.3",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "75ea5c39-93e5-489b-b1e1-68fa6c9d2d04",
                "contentKind": "AnalyticsRule",
                "displayName": "Attempts to sign in to disabled accounts",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-dipgjayb4d2z4",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-dipgjayb4d2z4",
                "version": "1.0.3",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('bfb1c90f-8006-4325-98be-c7fffbc254d6')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "DistribPassCrackAttempt_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.4",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "bfb1c90f-8006-4325-98be-c7fffbc254d6",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies distributed password cracking attempts from the Microsoft Entra ID SigninLogs.\nThe query looks for unusually high number of failed password attempts coming from multiple locations for a user account.\nReferences: https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-sign-ins-error-codes\n50053   Account is locked because the user tried to sign in too many times with an incorrect user ID or password.\n50055   Invalid password, entered expired password.\n50056   Invalid or null password - Password does not exist in store for this user.\n50126   Invalid username or password, or invalid on-premises username or password.",
                                "displayName": "Distributed Password cracking attempts in Microsoft Entra ID",
                                "enabled": false,
                                "query": "let s_threshold = 30;\nlet l_threshold = 3;\nlet aadFunc = (tableName:string){\ntable(tableName)\n| where OperationName =~ \"Sign-in activity\"\n// Error codes that we want to look at as they are related to the use of incorrect password.\n| where ResultType in (\"50126\", \"50053\" , \"50055\", \"50056\")\n| extend DeviceDetail = todynamic(DeviceDetail), Status = todynamic(DeviceDetail), LocationDetails = todynamic(LocationDetails)\n| extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser\n| extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)\n| extend LocationString = strcat(tostring(LocationDetails.countryOrRegion), \"/\", tostring(LocationDetails.state), \"/\", tostring(LocationDetails.city))\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), LocationCount=dcount(LocationString), Location = make_set(LocationString,100),\nIPAddress = make_set(IPAddress,100), IPAddressCount = dcount(IPAddress), AppDisplayName = make_set(AppDisplayName,100), ResultDescription = make_set(ResultDescription,50),\nBrowser = make_set(Browser,20), OS = make_set(OS,20), SigninCount = count() by UserPrincipalName, Type\n// Setting a generic threshold - Can be different for different environment\n| where SigninCount > s_threshold and LocationCount >= l_threshold\n| extend Location = tostring(Location), IPAddress = tostring(IPAddress), AppDisplayName = tostring(AppDisplayName), ResultDescription = tostring(ResultDescription), Browser = tostring(Browser), OS = tostring(OS)\n| extend Name = tostring(split(UserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName,'@',1)[0])};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1110"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'bfb1c90f-8006-4325-98be-c7fffbc254d6'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 23",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'bfb1c90f-8006-4325-98be-c7fffbc254d6')]",
                                "contentId": "bfb1c90f-8006-4325-98be-c7fffbc254d6",
                                "kind": "AnalyticsRule",
                                "version": "1.0.4",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "bfb1c90f-8006-4325-98be-c7fffbc254d6",
                "contentKind": "AnalyticsRule",
                "displayName": "Distributed Password cracking attempts in Microsoft Entra ID",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-q4i6vj4jrsqge",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-q4i6vj4jrsqge",
                "version": "1.0.4",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('a22740ec-fc1e-4c91-8de6-c29c6450ad00')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "ExplicitMFADeny_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.7",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "a22740ec-fc1e-4c91-8de6-c29c6450ad00",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "User explicitly denies MFA push, indicating that login was not expected and the account's password may be compromised.\nThis rule is deprecated as of July-2024. Alternative rule with similar logic and contex from more data source \nis available at https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Microsoft%20Entra%20ID/Analytic%20Rules/MFARejectedbyUser.yaml",
                                "displayName": "[Deprecated] Explicit MFA Deny",
                                "enabled": false,
                                "query": "let aadFunc = (tableName: string) {\n    table(tableName)\n    | where ResultType == 500121\n    | where Status has \"MFA Denied; user declined the authentication\" or Status has \"MFA denied; Phone App Reported Fraud\"\n    | extend Type = Type, PublicIP = IPAddress\n    | extend\n        Name = tostring(split(UserPrincipalName, '@', 0)[0]),\n        UPNSuffix = tostring(split(UserPrincipalName, '@', 1)[0])\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet dvcInfo = DeviceInfo\n    | extend SensorHealthState = column_ifexists(\"SensorHealthState\", \"\")\n    | where OnboardingStatus == \"Onboarded\" and SensorHealthState == \"Active\"\n    | project PublicIP, AadDeviceId;\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n| join kind=leftouter dvcInfo on PublicIP\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "MicrosoftThreatProtection",
                                        "dataTypes": [
                                            "DeviceInfo"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1110"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "PublicIP"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "ResourceId",
                                                "columnName": "ResourceId"
                                            }
                                        ],
                                        "entityType": "AzureResource"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "AppDisplayName"
                                            },
                                            {
                                                "identifier": "AppId",
                                                "columnName": "AppId"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a22740ec-fc1e-4c91-8de6-c29c6450ad00'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 24",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a22740ec-fc1e-4c91-8de6-c29c6450ad00')]",
                                "contentId": "a22740ec-fc1e-4c91-8de6-c29c6450ad00",
                                "kind": "AnalyticsRule",
                                "version": "1.0.7",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "a22740ec-fc1e-4c91-8de6-c29c6450ad00",
                "contentKind": "AnalyticsRule",
                "displayName": "[Deprecated] Explicit MFA Deny",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-x3uy7bopixm3y",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-x3uy7bopixm3y",
                "version": "1.0.7",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "DeviceInfo"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "MicrosoftThreatProtection"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('54e22fed-0ec6-4fb2-8312-2a3809a93f63')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "ExchangeFullAccessGrantedToApp_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.2",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "54e22fed-0ec6-4fb2-8312-2a3809a93f63",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This detection looks for the full_access_as_app permission being granted to an OAuth application with Admin Consent.\nThis permission provide access to all Exchange mailboxes via the EWS API can could be exploited to access sensitive data by being added to a compromised application. The application granted this permission should be reviewed to ensure that it is absolutely necessary for the applications function.\nRef: https://learn.microsoft.com/graph/auth-limit-mailbox-access",
                                "displayName": "full_access_as_app Granted To Application",
                                "enabled": false,
                                "query": "AuditLogs\n| where LoggedByService =~ \"Core Directory\"\n| where Category =~ \"ApplicationManagement\"\n| where OperationName =~ \"Consent to application\"\n| where TargetResources has \"full_access_as_app\"\n| mv-expand TargetResources\n| extend OAuthAppName = TargetResources.displayName\n| extend ModifiedProperties = TargetResources.modifiedProperties \n| mv-apply Property = ModifiedProperties on \n  (\n      where Property.displayName =~ \"ConsentContext.isAdminConsent\"\n      | extend AdminConsent = tostring(Property.newValue)\n  )\n| mv-apply Property = ModifiedProperties on \n  (\n      where Property.displayName =~ \"ConsentAction.Permissions\"\n      | extend Permissions = tostring(Property.newValue)\n  )\n| mv-apply Property = ModifiedProperties on \n  (\n      where Property.displayName =~ \"TargetId.ServicePrincipalNames\"\n      | extend AppId = tostring(Property.newValue)\n  )\n| mv-apply Property = AdditionalDetails on \n  (\n      where Property.key =~ \"User-Agent\"\n      | extend InitiatingUserAgent = replace('\"', '', tostring(Property.value))\n  )\n| project-away Property\n| parse Permissions with * \"ConsentType: \" GrantConsentType \", Scope: \" GrantScope1 \",\" *\n| where GrantScope1 =~ \"full_access_as_app\"\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| project-reorder TimeGenerated, OAuthAppName, AppId, AdminConsent, Permissions, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingIpAddress, InitiatingUserAgent, GrantScope1, GrantConsentType\n| extend GrantInitiatedBy = tostring(iff(isnotempty(InitiatingUserPrincipalName), InitiatingUserPrincipalName, InitiatingAppName))\n| extend Name = split(InitiatingUserPrincipalName, \"@\")[0], UPNSuffix = split(InitiatingUserPrincipalName, \"@\")[1]\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion"
                                ],
                                "subTechniques": [
                                    "T1550.001"
                                ],
                                "techniques": [
                                    "T1550"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ],
                                "customDetails": {
                                    "OAuthApplication": "OAuthAppName",
                                    "UserAgent": "InitiatingUserAgent",
                                    "OAuthAppId": "AppId"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "This detection looks for the full_access_as_app permission being granted to an OAuth application with Admin Consent.\nThis permission provide access to all Exchange mailboxes via the EWS API can could be exploited to access sensitive data \nby being added to a compromised application. The application granted this permission should be reviewed to ensure that it \nis absolutely necessary for the applications function.\nIn this case {{GrantInitiatedBy}} granted full_access_as_app to {{OAuthAppName}} from {{InitiatingIpAddress}}\nRef: https://learn.microsoft.com/graph/auth-limit-mailbox-access\n",
                                    "alertDisplayNameFormat": "User or App {{GrantInitiatedBy}} granted full_access_as_app to {{OAuthAppName}}"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '54e22fed-0ec6-4fb2-8312-2a3809a93f63'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 25",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '54e22fed-0ec6-4fb2-8312-2a3809a93f63')]",
                                "contentId": "54e22fed-0ec6-4fb2-8312-2a3809a93f63",
                                "kind": "AnalyticsRule",
                                "version": "1.0.2",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "54e22fed-0ec6-4fb2-8312-2a3809a93f63",
                "contentKind": "AnalyticsRule",
                "displayName": "full_access_as_app Granted To Application",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-urnqxda53wyqk",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-urnqxda53wyqk",
                "version": "1.0.2",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('223db5c1-1bf8-47d8-8806-bed401b356a4')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "FailedLogonToAzurePortal_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.7",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "223db5c1-1bf8-47d8-8806-bed401b356a4",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies failed login attempts in the Microsoft Entra ID SigninLogs to the Azure Portal.  Many failed logon attempts or some failed logon attempts from multiple IPs could indicate a potential brute force attack.\nThe following are excluded due to success and non-failure results:\nReferences: https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-sign-ins-error-codes\n0 - successful logon\n50125 - Sign-in was interrupted due to a password reset or password registration entry.\n50140 - This error occurred due to 'Keep me signed in' interrupt when the user was signing-in.",
                                "displayName": "Failed login attempts to Azure Portal",
                                "enabled": false,
                                "query": "let timeRange = 1d;\nlet lookBack = 7d;\nlet threshold_Failed = 5;\nlet threshold_FailedwithSingleIP = 20;\nlet threshold_IPAddressCount = 2;\nlet isGUID = \"[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}\";\nlet aadFunc = (tableName:string){\nlet azPortalSignins = materialize(table(tableName)\n| where TimeGenerated >= ago(lookBack)\n// Azure Portal only\n| where AppDisplayName =~ \"Azure Portal\")\n;\nlet successPortalSignins = azPortalSignins\n| where TimeGenerated >= ago(timeRange)\n// Azure Portal only and exclude non-failure Result Types\n| where ResultType in (\"0\", \"50125\", \"50140\")\n// Tagging identities not resolved to friendly names\n//| extend Unresolved = iff(Identity matches regex isGUID, true, false)\n| distinct TimeGenerated, UserPrincipalName\n;\nlet failPortalSignins = azPortalSignins\n| where TimeGenerated >= ago(timeRange)\n// Azure Portal only and exclude non-failure Result Types\n| where ResultType !in (\"0\", \"50125\", \"50140\", \"70044\", \"70043\")\n// Tagging identities not resolved to friendly names\n| extend Unresolved = iff(Identity matches regex isGUID, true, false)\n;\n// Verify there is no success for the same connection attempt after the fail\nlet failnoSuccess = failPortalSignins | join kind= leftouter (\n   successPortalSignins\n) on UserPrincipalName\n| where TimeGenerated > TimeGenerated1 or isempty(TimeGenerated1)\n| project-away TimeGenerated1, UserPrincipalName1\n;\n// Lookup up resolved identities from last 7 days\nlet identityLookup = azPortalSignins\n| where TimeGenerated >= ago(lookBack)\n| where not(Identity matches regex isGUID)\n| summarize by UserId, lu_UserDisplayName = UserDisplayName, lu_UserPrincipalName = UserPrincipalName;\n// Join resolved names to unresolved list from portal signins\nlet unresolvedNames = failnoSuccess | where Unresolved == true | join kind= inner (\n   identityLookup\n) on UserId\n| extend UserDisplayName = lu_UserDisplayName, UserPrincipalName = lu_UserPrincipalName\n| project-away lu_UserDisplayName, lu_UserPrincipalName;\n// Join Signins that had resolved names with list of unresolved that now have a resolved name\nlet u_azPortalSignins = failnoSuccess | where Unresolved == false | union unresolvedNames;\nu_azPortalSignins\n| extend DeviceDetail = todynamic(DeviceDetail), Status = todynamic(DeviceDetail), LocationDetails = todynamic(LocationDetails)\n| extend Status = strcat(ResultType, \": \", ResultDescription), OS = tostring(DeviceDetail.operatingSystem), Browser = tostring(DeviceDetail.browser)\n| extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city), Region = tostring(LocationDetails.countryOrRegion)\n| extend FullLocation = strcat(Region,'|', State, '|', City)  \n| summarize TimeGenerated = make_list(TimeGenerated,100), Status = make_list(Status,100), IPAddresses = make_list(IPAddress,100), IPAddressCount = dcount(IPAddress), FailedLogonCount = count()\nby UserPrincipalName, UserId, UserDisplayName, AppDisplayName, Browser, OS, FullLocation, Type\n| mvexpand TimeGenerated, IPAddresses, Status\n| extend TimeGenerated = todatetime(tostring(TimeGenerated)), IPAddress = tostring(IPAddresses), Status = tostring(Status)\n| project-away IPAddresses\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserPrincipalName, UserId, UserDisplayName, Status, FailedLogonCount, IPAddress, IPAddressCount, AppDisplayName, Browser, OS, FullLocation, Type\n| where (IPAddressCount >= threshold_IPAddressCount and FailedLogonCount >= threshold_Failed) or FailedLogonCount >= threshold_FailedwithSingleIP\n| extend Name = tostring(split(UserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName,'@',1)[0])\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P7D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1110"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '223db5c1-1bf8-47d8-8806-bed401b356a4'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 26",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '223db5c1-1bf8-47d8-8806-bed401b356a4')]",
                                "contentId": "223db5c1-1bf8-47d8-8806-bed401b356a4",
                                "kind": "AnalyticsRule",
                                "version": "1.0.7",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "223db5c1-1bf8-47d8-8806-bed401b356a4",
                "contentKind": "AnalyticsRule",
                "displayName": "Failed login attempts to Azure Portal",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-55mkp4xryce5u",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-55mkp4xryce5u",
                "version": "1.0.7",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('2cfc3c6e-f424-4b88-9cc9-c89f482d016a')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "FirstAppOrServicePrincipalCredential_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.5",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "2cfc3c6e-f424-4b88-9cc9-c89f482d016a",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when an admin or app owner account adds a new credential to an Application or Service Principal where there was no previous verify KeyCredential associated.\nIf a threat actor obtains access to an account with sufficient privileges and adds the alternate authentication material triggering this event, the threat actor can now authenticate as the Application or Service Principal using this credential.\nAdditional information on OAuth Credential Grants can be found in RFC 6749 Section 4.4 or https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.",
                                "displayName": "First access credential added to Application or Service Principal where no credential was present",
                                "enabled": false,
                                "query": "AuditLogs\n| where OperationName has (\"Certificates and secrets management\")\n| where Result =~ \"success\"\n| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"Application\"\n      | extend targetDisplayName = tostring(TargetResource.displayName),\n               targetId = tostring(TargetResource.id),\n               targetType = tostring(TargetResource.type),\n               keyEvents = TargetResource.modifiedProperties\n  )\n| mv-apply Property = keyEvents on \n  (\n      where Property.displayName =~ \"KeyDescription\"\n      | extend new_value_set = parse_json(tostring(Property.newValue)),\n               old_value_set = parse_json(tostring(Property.oldValue))\n  )\n| where old_value_set == \"[]\"\n| mv-expand new_value_set\n| parse new_value_set with * \"KeyIdentifier=\" keyIdentifier:string \",KeyType=\" keyType:string \",KeyUsage=\" keyUsage:string \",DisplayName=\" keyDisplayName:string \"]\" *\n| where keyUsage =~ \"Verify\"\n| mv-apply AdditionalDetail = AdditionalDetails on \n  (\n      where AdditionalDetail.key =~ \"User-Agent\"\n      | extend InitiatingUserAgent = tostring(AdditionalDetail.value)\n  )\n| project-away new_value_set, old_value_set, TargetResource, Property, AdditionalDetail\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| project-reorder TimeGenerated, OperationName, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingIpAddress, InitiatingUserAgent, \ntargetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId\n| extend Name = split(InitiatingUserPrincipalName, \"@\")[0], UPNSuffix = split(InitiatingUserPrincipalName, \"@\")[1]\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion"
                                ],
                                "subTechniques": [
                                    "T1550.001"
                                ],
                                "techniques": [
                                    "T1550"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "targetDisplayName"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '2cfc3c6e-f424-4b88-9cc9-c89f482d016a'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 27",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '2cfc3c6e-f424-4b88-9cc9-c89f482d016a')]",
                                "contentId": "2cfc3c6e-f424-4b88-9cc9-c89f482d016a",
                                "kind": "AnalyticsRule",
                                "version": "1.1.5",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "2cfc3c6e-f424-4b88-9cc9-c89f482d016a",
                "contentKind": "AnalyticsRule",
                "displayName": "First access credential added to Application or Service Principal where no credential was present",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-7djskfykh5t7a",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-7djskfykh5t7a",
                "version": "1.1.5",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('6ab1f7b2-61b8-442f-bc81-96afe7ad8c53')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "GuestAccountsAddedinAADGroupsOtherThanTheOnesSpecified_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.6",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "6ab1f7b2-61b8-442f-bc81-96afe7ad8c53",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Guest Accounts are added in the Organization Tenants to perform various tasks i.e projects execution, support etc.. This detection notifies when guest users are added to Microsoft Entra ID Groups other than the ones specified and poses a risk to gain access to sensitive apps or data.",
                                "displayName": "Guest accounts added in Entra ID Groups other than the ones specified",
                                "enabled": false,
                                "query": "// OBJECT ID of AAD Groups can be found by navigating to Azure Active Directory then from menu on the left, select Groups and from the list shown of AAD Groups, the Second Column shows the ObjectID of each\nlet GroupIDs = dynamic([\"List with Custom AAD GROUP OBJECT ID 1\",\"Custom AAD GROUP OBJECT ID 2\"]);\nAuditLogs\n| where OperationName in ('Add member to group', 'Add owner to group')\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n// Uncomment the following line to filter events where the inviting user was a guest user\n//| where InitiatedBy has_any (\"CUSTOM DOMAIN NAME#\", \"#EXT#\")\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"User\"\n      | extend InvitedUserPrincipalName = trim(@'\"',tostring(TargetResource.userPrincipalName)),\n               Properties = TargetResource.modifiedProperties\n  )\n| mv-apply Property = Properties on \n  (\n      where Property.displayName =~ \"Group.DisplayName\"\n      | extend AADGroup = trim('\"',tostring(Property.newValue))\n  )\n| where InvitedUserPrincipalName has_any (\"CUSTOM DOMAIN NAME#\", \"#EXT#\")\n| mv-apply Property = Properties on\n   (\n     where Property.displayName =~ \"Group.ObjectID\"\n     | extend AADGroupId = trim('\"',tostring(Property.newValue))\n   )\n| project-away TargetResource, Property\n| where AADGroupId !in (GroupIDs)\n| extend Name = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n| extend InvitedUserName = tostring(split(InvitedUserPrincipalName,'@',0)[0]), InvitedUPNSuffix = tostring(split(InvitedUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "PT2H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "Persistence",
                                    "Discovery"
                                ],
                                "subTechniques": [
                                    "T1078.004",
                                    "T1136.003",
                                    "T1087.004"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1136",
                                    "T1087"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InvitedUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InvitedUserName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InvitedUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "DistinguishedName",
                                                "columnName": "AADGroup"
                                            },
                                            {
                                                "identifier": "ObjectGuid",
                                                "columnName": "AADGroupId"
                                            }
                                        ],
                                        "entityType": "SecurityGroup"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6ab1f7b2-61b8-442f-bc81-96afe7ad8c53'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 28",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6ab1f7b2-61b8-442f-bc81-96afe7ad8c53')]",
                                "contentId": "6ab1f7b2-61b8-442f-bc81-96afe7ad8c53",
                                "kind": "AnalyticsRule",
                                "version": "1.0.6",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "6ab1f7b2-61b8-442f-bc81-96afe7ad8c53",
                "contentKind": "AnalyticsRule",
                "displayName": "Guest accounts added in Entra ID Groups other than the ones specified",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-4x6b42g3o36l2",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-4x6b42g3o36l2",
                "version": "1.0.6",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('2560515c-07d1-434e-87fb-ebe3af267760')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "MailPermissionsAddedToApplication_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.4",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "2560515c-07d1-434e-87fb-ebe3af267760",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query look for applications that have been granted (Delegated or App/Role) permissions to Read Mail (Permissions field has Mail.Read) and subsequently has been consented to. This can help identify applications that have been abused to gain access to mailboxes.",
                                "displayName": "Mail.Read Permissions Granted to Application",
                                "enabled": false,
                                "query": "AuditLogs\n| where Category =~ \"ApplicationManagement\"\n| where ActivityDisplayName has_any (\"Add delegated permission grant\",\"Add app role assignment to service principal\")  \n| where Result =~ \"success\"\n| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"ServicePrincipal\" and array_length(TargetResource.modifiedProperties) > 0 and isnotnull(TargetResource.displayName)\n      | extend props = TargetResource.modifiedProperties,\n               Type = tostring(TargetResource.type),\n               PermissionsAddedTo = tostring(TargetResource.displayName)\n  )\n| mv-apply Property = props on \n  (\n      where Property.displayName =~ \"DelegatedPermissionGrant.Scope\"\n      | extend DisplayName = tostring(Property.displayName), Permissions = trim('\"',tostring(Property.newValue))\n  )\n| where Permissions has_any (\"Mail.Read\", \"Mail.ReadWrite\")\n| mv-apply AdditionalDetail = AdditionalDetails on \n  (\n      where AdditionalDetail.key =~ \"User-Agent\"\n      | extend InitiatingUserAgent = tostring(AdditionalDetail.value)\n  )\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| project-away props, TargetResource, AdditionalDetail, Property\n| join kind=leftouter(\n  AuditLogs\n  | where ActivityDisplayName has \"Consent to application\"\n  | mv-apply TargetResource = TargetResources on \n      (\n          where TargetResource.type =~ \"ServicePrincipal\"\n          | extend AppName = tostring(TargetResource.displayName),\n                   AppId = tostring(TargetResource.id)\n      )\n| project AppName, AppId, CorrelationId) on CorrelationId\n| project-away CorrelationId1\n| project-reorder TimeGenerated, OperationName, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingIpAddress, InitiatingUserAgent, PermissionsAddedTo, Permissions, AppName, AppId, CorrelationId\n| extend Name = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1098"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '2560515c-07d1-434e-87fb-ebe3af267760'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 29",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '2560515c-07d1-434e-87fb-ebe3af267760')]",
                                "contentId": "2560515c-07d1-434e-87fb-ebe3af267760",
                                "kind": "AnalyticsRule",
                                "version": "1.0.4",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "2560515c-07d1-434e-87fb-ebe3af267760",
                "contentKind": "AnalyticsRule",
                "displayName": "Mail.Read Permissions Granted to Application",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-yn55t57zyp6ou",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-yn55t57zyp6ou",
                "version": "1.0.4",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('f948a32f-226c-4116-bddd-d95e91d97eb9')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "MaliciousOAuthApp_O365AttackToolkit_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.2",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "f948a32f-226c-4116-bddd-d95e91d97eb9",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when a user consents to provide a previously-unknown Azure application with the same OAuth permissions used by the MDSec O365 Attack Toolkit (https://github.com/mdsecactivebreach/o365-attack-toolkit).\nThe default permissions/scope for the MDSec O365 Attack toolkit change sometimes but often include contacts.read, user.read, mail.read, notes.read.all, mailboxsettings.readwrite, files.readwrite.all, mail.send, files.read, and files.read.all.\nConsent to applications with these permissions should be rare, especially as the knownApplications list is expanded, especially as the knownApplications list is expanded. Public contributions to expand this filter are welcome!\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.",
                                "displayName": "Suspicious application consent similar to O365 Attack Toolkit",
                                "enabled": false,
                                "query": "let detectionTime = 1d;\nlet joinLookback = 14d;\nlet threshold = 5;\nlet o365_attack_regex = \"contacts.read|user.read|mail.read|notes.read.all|mailboxsettings.readwrite|Files.ReadWrite.All|mail.send|files.read|files.read.all\";\nlet o365_attack = dynamic([\"contacts.read\", \"user.read\", \"mail.read\", \"notes.read.all\", \"mailboxsettings.readwrite\", \"Files.ReadWrite.All\", \"mail.send\", \"files.read\", \"files.read.all\"]);\nAuditLogs\n| where TimeGenerated > ago(detectionTime)\n| where LoggedByService =~ \"Core Directory\"\n| where Category =~ \"ApplicationManagement\"\n| where OperationName =~ \"Consent to application\"\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"ServicePrincipal\"\n      | extend AppDisplayName = tostring(TargetResource.displayName),\n               AppClientId = tostring(TargetResource.id),\n               props = TargetResource.modifiedProperties\n  )\n| where AppClientId !in ((externaldata(knownAppClientId:string, knownAppDisplayName:string)[@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/Microsoft.OAuth.KnownApplications.csv\"] with (format=\"csv\"))) // NOTE: a MATCH from this list will cause the alert to NOT fire - please modify for your environment!\n| mv-apply ConsentFull = props on \n  (\n      where ConsentFull.displayName =~ \"ConsentAction.Permissions\"\n  )\n| parse ConsentFull with * \"ConsentType: \" GrantConsentType \", Scope: \" GrantScope1 \", CreatedDateTime\" * \"]\" *\n| where GrantConsentType != \"AllPrincipals\" // NOTE: we are ignoring if OAuth application was granted to all users via an admin - but admin due diligence should be audited occasionally\n| where ConsentFull has_any (o365_attack)  \n| extend GrantScopeCount = countof(tolower(GrantScope1), o365_attack_regex, 'regex')\n| where GrantScopeCount > threshold\n| extend GrantInitiatedByAppName = tostring(InitiatedBy.app.displayName)\n| extend GrantInitiatedByAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend GrantInitiatedByUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend GrantInitiatedByAadUserId = tostring(InitiatedBy.user.id)\n| extend GrantIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))\n| extend GrantInitiatedBy = iff(isnotempty(GrantInitiatedByUserPrincipalName), GrantInitiatedByUserPrincipalName, GrantInitiatedByAppName)\n| mv-apply AdditionalDetail = AdditionalDetails on \n  (\n      where AdditionalDetail.key =~ \"User-Agent\"\n      | extend GrantUserAgent = AdditionalDetail.value\n  )\n| project TimeGenerated, GrantConsentType, GrantScope1, GrantInitiatedBy, AppDisplayName, GrantInitiatedByUserPrincipalName, GrantInitiatedByAadUserId, GrantInitiatedByAppName, GrantInitiatedByAppServicePrincipalId, GrantIpAddress, GrantUserAgent, AppClientId, OperationName, ConsentFull, CorrelationId\n| join kind = leftouter (AuditLogs\n  | where TimeGenerated > ago(joinLookback)\n  | where LoggedByService =~ \"Core Directory\"\n  | where Category =~ \"ApplicationManagement\"\n  | where OperationName =~ \"Add service principal\"\n  | mv-apply TargetResource = TargetResources on \n      (\n          where TargetResource.type =~ \"ServicePrincipal\"\n          | extend props = TargetResource.modifiedProperties,\n                  AppClientId = tostring(TargetResource.id)\n      )\n  | mv-apply Property = props on \n      (\n          where Property.displayName =~ \"AppAddress\" and Property.newValue has \"AddressType\"\n          | extend AppReplyURLs = trim('\"',tostring(Property.newValue))\n      )\n  | distinct AppClientId, tostring(AppReplyURLs)\n) on AppClientId\n| join kind = innerunique (AuditLogs\n      | where TimeGenerated > ago(joinLookback)\n      | where LoggedByService =~ \"Core Directory\"\n      | where Category =~ \"ApplicationManagement\"\n      | where OperationName =~ \"Add OAuth2PermissionGrant\" or OperationName =~ \"Add delegated permission grant\"\n          | mv-apply TargetResource = TargetResources on \n          (\n              where TargetResource.type =~ \"ServicePrincipal\" and array_length(TargetResource.modifiedProperties) > 0 and isnotnull(TargetResource.displayName)\n              | extend GrantAuthentication = tostring(TargetResource.displayName)\n          )\n      | extend GrantOperation = OperationName\n      | project GrantAuthentication, GrantOperation, CorrelationId\n  ) on CorrelationId\n| project TimeGenerated, GrantConsentType, GrantScope1, GrantInitiatedBy, AppDisplayName, AppReplyURLs, GrantInitiatedByUserPrincipalName, GrantInitiatedByAadUserId, GrantInitiatedByAppName, GrantInitiatedByAppServicePrincipalId, GrantIpAddress, GrantUserAgent, AppClientId, GrantAuthentication, OperationName, GrantOperation, CorrelationId, ConsentFull\n| extend Name = tostring(split(GrantInitiatedByUserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(GrantInitiatedByUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P14D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess",
                                    "DefenseEvasion"
                                ],
                                "techniques": [
                                    "T1528",
                                    "T1550"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "GrantInitiatedByUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "GrantInitiatedByAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "GrantInitiatedByAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "GrantIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "AppDisplayName"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f948a32f-226c-4116-bddd-d95e91d97eb9'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 30",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f948a32f-226c-4116-bddd-d95e91d97eb9')]",
                                "contentId": "f948a32f-226c-4116-bddd-d95e91d97eb9",
                                "kind": "AnalyticsRule",
                                "version": "1.1.2",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "f948a32f-226c-4116-bddd-d95e91d97eb9",
                "contentKind": "AnalyticsRule",
                "displayName": "Suspicious application consent similar to O365 Attack Toolkit",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-z76mndwjvdu3m",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-z76mndwjvdu3m",
                "version": "1.1.2",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('39198934-62a0-4781-8416-a81265c03fd6')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "MaliciousOAuthApp_PwnAuth_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.2",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "39198934-62a0-4781-8416-a81265c03fd6",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when a user consents to provide a previously-unknown Azure application with the same OAuth permissions used by the FireEye PwnAuth toolkit (https://github.com/fireeye/PwnAuth).\nThe default permissions/scope for the PwnAuth toolkit are user.read, offline_access, mail.readwrite, mail.send, and files.read.all.\nConsent to applications with these permissions should be rare, especially as the knownApplications list is expanded. Public contributions to expand this filter are welcome!\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.",
                                "displayName": "Suspicious application consent similar to PwnAuth",
                                "enabled": false,
                                "query": "let detectionTime = 1d;\nlet joinLookback = 14d;\nAuditLogs\n| where TimeGenerated > ago(detectionTime)\n| where LoggedByService =~ \"Core Directory\"\n| where Category =~ \"ApplicationManagement\"\n| where OperationName =~ \"Consent to application\"\n| where TargetResources has \"offline\"\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"ServicePrincipal\"\n      | extend AppDisplayName = tostring(TargetResource.displayName),\n               AppClientId = tostring(TargetResource.id),\n               props = TargetResource.modifiedProperties\n  )\n| where AppClientId !in ((externaldata(knownAppClientId:string, knownAppDisplayName:string)[@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/Microsoft.OAuth.KnownApplications.csv\"] with (format=\"csv\")))\n| mv-apply ConsentFull = props on \n  (\n      where ConsentFull.displayName =~ \"ConsentAction.Permissions\"\n  )\n| parse ConsentFull with * \"ConsentType: \" GrantConsentType \", Scope: \" GrantScope1 \"]\" *\n| where ConsentFull has_all (\"user.read\", \"offline_access\", \"mail.readwrite\", \"mail.send\", \"files.read.all\")\n| where GrantConsentType != \"AllPrincipals\" // NOTE: we are ignoring if OAuth application was granted to all users via an admin - but admin due diligence should be audited occasionally\n| extend GrantInitiatedByAppName = tostring(InitiatedBy.app.displayName)\n| extend GrantInitiatedByAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend GrantInitiatedByUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend GrantInitiatedByAadUserId = tostring(InitiatedBy.user.id)\n| extend GrantIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))\n| extend GrantInitiatedBy = iff(isnotempty(GrantInitiatedByUserPrincipalName), GrantInitiatedByUserPrincipalName, GrantInitiatedByAppName)\n| mv-apply AdditionalDetail = AdditionalDetails on \n  (\n      where AdditionalDetail.key =~ \"User-Agent\"\n      | extend GrantUserAgent = AdditionalDetail.value\n  )\n| project TimeGenerated, GrantConsentType, GrantScope1, GrantInitiatedBy, AppDisplayName, GrantInitiatedByUserPrincipalName, GrantInitiatedByAadUserId, GrantInitiatedByAppName, GrantInitiatedByAppServicePrincipalId, GrantIpAddress, GrantUserAgent, AppClientId, OperationName, ConsentFull, CorrelationId\n| join kind = leftouter (AuditLogs\n| where TimeGenerated > ago(joinLookback)\n| where LoggedByService =~ \"Core Directory\"\n| where Category =~ \"ApplicationManagement\"\n| where OperationName =~ \"Add service principal\"\n  | mv-apply TargetResource = TargetResources on \n      (\n          where TargetResource.type =~ \"ServicePrincipal\"\n          | extend props = TargetResource.modifiedProperties,\n                  AppClientId = tostring(TargetResource.id)\n      )\n  | mv-apply Property = props on \n      (\n          where Property.displayName =~ \"AppAddress\" and Property.newValue has \"AddressType\"\n          | extend AppReplyURLs = trim('\"',tostring(Property.newValue))\n      )\n| distinct AppClientId, tostring(AppReplyURLs)\n)\non AppClientId\n| join kind = innerunique (AuditLogs\n| where TimeGenerated > ago(joinLookback)\n| where LoggedByService =~ \"Core Directory\"\n| where Category =~ \"ApplicationManagement\"\n| where OperationName =~ \"Add OAuth2PermissionGrant\" or OperationName =~ \"Add delegated permission grant\"\n      | mv-apply TargetResource = TargetResources on \n          (\n              where TargetResource.type =~ \"ServicePrincipal\" and array_length(TargetResource.modifiedProperties) > 0 and isnotnull(TargetResource.displayName)\n              | extend GrantAuthentication = tostring(TargetResource.displayName)\n          )\n| extend GrantOperation = OperationName\n| project GrantAuthentication, GrantOperation, CorrelationId\n) on CorrelationId\n| project TimeGenerated, GrantConsentType, GrantScope1, GrantInitiatedBy, AppDisplayName, AppReplyURLs, GrantInitiatedByUserPrincipalName, GrantInitiatedByAadUserId, GrantInitiatedByAppName, GrantInitiatedByAppServicePrincipalId, GrantIpAddress, GrantUserAgent, AppClientId, GrantAuthentication, OperationName, GrantOperation, CorrelationId, ConsentFull\n| extend timestamp = TimeGenerated, Name = tostring(split(GrantInitiatedByUserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(GrantInitiatedByUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P14D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess",
                                    "DefenseEvasion"
                                ],
                                "techniques": [
                                    "T1528",
                                    "T1550"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "GrantInitiatedByUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "GrantInitiatedByAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "GrantInitiatedByAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "GrantIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '39198934-62a0-4781-8416-a81265c03fd6'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 31",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '39198934-62a0-4781-8416-a81265c03fd6')]",
                                "contentId": "39198934-62a0-4781-8416-a81265c03fd6",
                                "kind": "AnalyticsRule",
                                "version": "1.0.2",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "39198934-62a0-4781-8416-a81265c03fd6",
                "contentKind": "AnalyticsRule",
                "displayName": "Suspicious application consent similar to PwnAuth",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-7ziwhnfhkbmcc",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-7ziwhnfhkbmcc",
                "version": "1.0.2",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('d99cf5c3-d660-436c-895b-8a8f8448da23')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "MFARejectedbyUser_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "2.0.3",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "d99cf5c3-d660-436c-895b-8a8f8448da23",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies occurances where a user has rejected an MFA prompt. This could be an indicator that a threat actor has compromised the username and password of this user account and is using it to try and log into the account.\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-user-accounts#monitoring-for-failed-unusual-sign-ins\nThis query has also been updated to include UEBA logs IdentityInfo and BehaviorAnalytics for contextual information around the results.",
                                "displayName": "MFA Rejected by User",
                                "enabled": false,
                                "query": "let riskScoreCutoff = 20; //Adjust this based on volume of results\nSigninLogs\n| where ResultType == 500121\n| extend additionalDetails_ = tostring(Status.additionalDetails)\n| extend UserPrincipalName = tolower(UserPrincipalName)\n| where additionalDetails_ =~ \"MFA denied; user declined the authentication\" or additionalDetails_ has \"fraud\"\n| summarize StartTime = min(TimeGenerated), EndTIme = max(TimeGenerated) by UserPrincipalName, UserId, AADTenantId, IPAddress\n| extend Name = tostring(split(UserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName,'@',1)[0])\n| join kind=leftouter (\n    IdentityInfo\n    | summarize LatestReportTime = arg_max(TimeGenerated, *) by AccountUPN\n    | project AccountUPN, Tags, JobTitle, GroupMembership, AssignedRoles, UserType, IsAccountEnabled\n    | summarize\n        Tags = make_set(Tags, 1000),\n        GroupMembership = make_set(GroupMembership, 1000),\n        AssignedRoles = make_set(AssignedRoles, 1000),\n        UserType = make_set(UserType, 1000),\n        UserAccountControl = make_set(UserType, 1000)\n    by AccountUPN\n    | extend UserPrincipalName=tolower(AccountUPN)\n) on UserPrincipalName\n| join kind=leftouter (\n    BehaviorAnalytics\n    | where ActivityType in (\"FailedLogOn\", \"LogOn\")\n    | where isnotempty(SourceIPAddress)\n    | project UsersInsights, DevicesInsights, ActivityInsights, InvestigationPriority, SourceIPAddress\n    | project-rename IPAddress = SourceIPAddress\n    | summarize\n        UsersInsights = make_set(UsersInsights, 1000),\n        DevicesInsights = make_set(DevicesInsights, 1000),\n        IPInvestigationPriority = sum(InvestigationPriority)\n    by IPAddress)\non IPAddress\n| extend UEBARiskScore = IPInvestigationPriority\n| where  UEBARiskScore > riskScoreCutoff\n| sort by UEBARiskScore desc \n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "BehaviorAnalytics",
                                        "dataTypes": [
                                            "BehaviorAnalytics"
                                        ]
                                    },
                                    {
                                        "connectorId": "BehaviorAnalytics",
                                        "dataTypes": [
                                            "IdentityInfo"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "subTechniques": [
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "UserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd99cf5c3-d660-436c-895b-8a8f8448da23'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 32",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd99cf5c3-d660-436c-895b-8a8f8448da23')]",
                                "contentId": "d99cf5c3-d660-436c-895b-8a8f8448da23",
                                "kind": "AnalyticsRule",
                                "version": "2.0.3",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "d99cf5c3-d660-436c-895b-8a8f8448da23",
                "contentKind": "AnalyticsRule",
                "displayName": "MFA Rejected by User",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-lr5pfpxgzsb6u",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-lr5pfpxgzsb6u",
                "version": "2.0.3",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "BehaviorAnalytics"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "BehaviorAnalytics"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "IdentityInfo"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "BehaviorAnalytics"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('a8cc6d5c-4e7e-4b48-b4ac-d8a116c62a8b')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "MFASpammingfollowedbySuccessfullogin_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.4",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "a8cc6d5c-4e7e-4b48-b4ac-d8a116c62a8b",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies MFA Spamming followed by Successful logins and by a successful authentication within a given time window.\nDefault Failure count is 10 and 1 successful login with default Time Window is 5 minutes.",
                                "displayName": "MFA Spamming followed by Successful login",
                                "enabled": false,
                                "query": "// Filter for sign-in logs ingested within the last day\nSigninLogs\n| where ingestion_time() > ago(1d)\n// Filter for records with AuthenticationRequirement set to multiFactorAuthentication\n| where AuthenticationRequirement == \"multiFactorAuthentication\"\n// Extract information from dynamic columns DeviceDetail and LocationDetails\n| extend DeviceDetail = todynamic(DeviceDetail), LocationDetails = todynamic(LocationDetails)\n// Extract specific attributes from DeviceDetail and LocationDetails\n| extend\n      OS = tostring(DeviceDetail.operatingSystem),\n      Browser = tostring(DeviceDetail.browser),\n      State = tostring(LocationDetails.state),\n      City = tostring(LocationDetails.city),\n      Region = tostring(LocationDetails.countryOrRegion)\n// Expand multi-value property AuthenticationDetails into separate records\n| mv-expand todynamic(AuthenticationDetails)\n// Parse AuthResult from JSON in AuthenticationDetails and convert to string\n| extend AuthResult = tostring(parse_json(AuthenticationDetails).authenticationStepResultDetail)\n// Summarize data by aggregating statistics for each user, IP, and AuthResult\n| summarize FailedAttempts = countif(AuthResult == \"MFA denied; user declined the authentication\" or AuthResult == \"MFA denied; user did not respond to mobile app notification\"), SuccessfulAttempts = countif(AuthResult == \"MFA successfully completed\"), InvolvedOS = make_set(OS, 5), InvolvedBrowser = make_set(Browser), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated) by UserPrincipalName, IPAddress, State, City, Region\n// Calculate AuthenticationWindow by finding time difference between start and end times\n| extend AuthenticationWindow = (EndTime - StartTime)\n// Filter for records with more than 10 failed attempts in 5-minute window and at least 1 successful attempt\n| where FailedAttempts > 10 and AuthenticationWindow <= 5m and SuccessfulAttempts >= 1\n// Extract user's name and UPN suffix using split function\n| extend Name = tostring(split(UserPrincipalName, '@', 0)[0]), UPNSuffix = tostring(split(UserPrincipalName, '@', 1)[0])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1110"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a8cc6d5c-4e7e-4b48-b4ac-d8a116c62a8b'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 33",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a8cc6d5c-4e7e-4b48-b4ac-d8a116c62a8b')]",
                                "contentId": "a8cc6d5c-4e7e-4b48-b4ac-d8a116c62a8b",
                                "kind": "AnalyticsRule",
                                "version": "1.0.4",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "a8cc6d5c-4e7e-4b48-b4ac-d8a116c62a8b",
                "contentKind": "AnalyticsRule",
                "displayName": "MFA Spamming followed by Successful login",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-ljdbvidiqtyr4",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-ljdbvidiqtyr4",
                "version": "1.0.4",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('cda5928c-2c1e-4575-9dfa-07568bc27a4f')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "MultipleAdmin_membership_removals_from_NewAdmin_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.2",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "cda5928c-2c1e-4575-9dfa-07568bc27a4f",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query detects when newly created Global admin removes multiple existing global admins which can be an attempt by adversaries to lock down organization and retain sole access. \n Investigate reasoning and intention of multiple membership removal by new Global admins and take necessary actions accordingly.",
                                "displayName": "Multiple admin membership removals from newly created admin.",
                                "enabled": false,
                                "query": "let lookback = 7d; \nlet timeframe = 1h; \nlet GlobalAdminsRemoved = AuditLogs \n| where TimeGenerated > ago(timeframe) \n| where Category =~ \"RoleManagement\" \n| where AADOperationType in (\"Unassign\", \"RemoveEligibleRole\") \n| where ActivityDisplayName has_any (\"Remove member from role\", \"Remove eligible member from role\") \n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"User\"\n      | extend Target = tostring(TargetResource.userPrincipalName),\n               props = TargetResource.modifiedProperties\n  )\n| mv-apply Property = props on \n      (\n          where Property.displayName =~ \"Role.DisplayName\"\n          | extend RoleName = trim('\"',tostring(Property.oldValue))\n      )\n| where RoleName =~ \"Global Administrator\" // Add other Privileged role if applicable\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend Initiator = iif(isnotempty(InitiatingAppName), InitiatingAppName, InitiatingUserPrincipalName) \n| where Initiator != \"MS-PIM\"  // Filtering PIM events  \n| summarize RemovedGlobalAdminTime = max(TimeGenerated), TargetAdmins = make_set(Target,100) by OperationName, RoleName, Initiator, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingIpAddress, Result; \nlet GlobalAdminsAdded = AuditLogs \n| where TimeGenerated > ago(lookback) \n| where Category =~ \"RoleManagement\" \n| where AADOperationType in (\"Assign\", \"AssignEligibleRole\") \n| where ActivityDisplayName has_any (\"Add eligible member to role\", \"Add member to role\") and Result == \"success\" \n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"User\"\n      | extend Target = tostring(TargetResource.userPrincipalName),\n               props = TargetResource.modifiedProperties\n  )\n| mv-apply Property = props on \n      (\n          where Property.displayName =~ \"Role.DisplayName\"\n          | extend RoleName = trim('\"',tostring(Property.newValue))\n      )\n| where RoleName =~ \"Global Administrator\" // Add other Privileged role if applicable\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend Initiator = iif(isnotempty(InitiatingAppName), InitiatingAppName, tostring(InitiatedBy.user.userPrincipalName)) \n| where Initiator != \"MS-PIM\"  // Filtering PIM events \n| summarize AddedGlobalAdminTime = max(TimeGenerated) by OperationName, RoleName, Target, Initiator, Result;\nGlobalAdminsAdded \n| join kind= inner GlobalAdminsRemoved on $left.Target == $right.Initiator \n| where AddedGlobalAdminTime < RemovedGlobalAdminTime \n| extend NoofAdminsRemoved = array_length(TargetAdmins) \n| where NoofAdminsRemoved > 1\n| project AddedGlobalAdminTime, Initiator, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingIpAddress, Target, RemovedGlobalAdminTime, TargetAdmins, NoofAdminsRemoved\n| extend TargetName = tostring(split(Target,'@',0)[0]), TargetUPNSuffix = tostring(split(Target,'@',1)[0])\n| extend InitiatedByName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatedByUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P7D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Impact"
                                ],
                                "techniques": [
                                    "T1531"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Target"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'cda5928c-2c1e-4575-9dfa-07568bc27a4f'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 34",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'cda5928c-2c1e-4575-9dfa-07568bc27a4f')]",
                                "contentId": "cda5928c-2c1e-4575-9dfa-07568bc27a4f",
                                "kind": "AnalyticsRule",
                                "version": "1.0.2",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "cda5928c-2c1e-4575-9dfa-07568bc27a4f",
                "contentKind": "AnalyticsRule",
                "displayName": "Multiple admin membership removals from newly created admin.",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-gzedhyd4vwnqq",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-gzedhyd4vwnqq",
                "version": "1.0.2",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('4f42b94f-b210-42d1-a023-7fa1c51d969f')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "NewOnmicrosoftDomainAdded_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "4f42b94f-b210-42d1-a023-7fa1c51d969f",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This detection looks for new onmicrosoft domains being added to a tenant. \nAn attacker who compromises a tenant may register a new onmicrosoft domain in order to masquerade as a service provider for launching phishing campaigns.\nDomain additions are not a common occurrence and users should validate that the domain was added by a legitimate user, with a legitimate purpose.",
                                "displayName": "New onmicrosoft domain added to tenant",
                                "enabled": false,
                                "query": "AuditLogs\n| where AADOperationType == \"Add\"\n| where Result == \"success\"\n| where OperationName in (\"Add verified domain\", \"Add unverified domain\")\n| extend InitiatedBy = parse_json(InitiatedBy)\n| extend InitiatingUser = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIp = tostring(InitiatedBy.user.ipAddress)\n| extend InitiatingApp = tostring(InitiatedBy.app.displayName)\n| extend InitiatingSPID = tostring(InitiatedBy.app.servicePrincipalId)\n| extend DomainAdded = tostring(TargetResources[0].displayName)\n| where DomainAdded has \"onmicrosoft\"\n| extend ActionInitiatedBy = case(isnotempty(InitiatingUser), InitiatingUser, strcat(InitiatingApp, \" - \", InitiatingSPID))\n| extend UserName = split(InitiatingUser, \"@\")[0]\n| extend UPNSuffix = split(InitiatingUser, \"@\")[1]\n| project-reorder TimeGenerated, OperationName, DomainAdded, ActionInitiatedBy, InitiatingIp\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "ResourceDevelopment"
                                ],
                                "subTechniques": [
                                    "T1585.003"
                                ],
                                "techniques": [
                                    "T1585"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUser"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "UserName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingSPID"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIp"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "DomainName",
                                                "columnName": "DomainAdded"
                                            }
                                        ],
                                        "entityType": "DNS"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "This detection looks for new onmicrosoft domains being added to a tenant. An attacker who compromises a tenant may register a new onmicrosoft domain in order to masquerade as a service provider for launching phishing accounts. Domain additions are not a common occurrence and users should validate that {{ActionInitiatedBy}} added {{DomainAdded}} with a legitimate purpose.",
                                    "alertDisplayNameFormat": "{{DomainAdded}} added to tenant by {{ActionInitiatedBy}}"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4f42b94f-b210-42d1-a023-7fa1c51d969f'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 35",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4f42b94f-b210-42d1-a023-7fa1c51d969f')]",
                                "contentId": "4f42b94f-b210-42d1-a023-7fa1c51d969f",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "4f42b94f-b210-42d1-a023-7fa1c51d969f",
                "contentKind": "AnalyticsRule",
                "displayName": "New onmicrosoft domain added to tenant",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-jgspolghdns7e",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-jgspolghdns7e",
                "version": "1.0.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('79566f41-df67-4e10-a703-c38a6213afd8')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "NewAppOrServicePrincipalCredential_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.2",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "79566f41-df67-4e10-a703-c38a6213afd8",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when an admin or app owner account adds a new credential to an Application or Service Principal where a verify KeyCredential was already present for the app.\nIf a threat actor obtains access to an account with sufficient privileges and adds the alternate authentication material triggering this event, the threat actor can now authenticate as the Application or Service Principal using this credential.\nAdditional information on OAuth Credential Grants can be found in RFC 6749 Section 4.4 or https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.",
                                "displayName": "New access credential added to Application or Service Principal",
                                "enabled": false,
                                "query": "AuditLogs\n| where OperationName has_any (\"Add service principal\", \"Certificates and secrets management\") // captures \"Add service principal\", \"Add service principal credentials\", and \"Update application - Certificates and secrets management\" events\n| where Result =~ \"success\"\n| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"Application\"\n      | extend targetDisplayName = tostring(TargetResource.displayName),\n               targetId = tostring(TargetResource.id),\n               targetType = tostring(TargetResource.type),\n               keyEvents = TargetResource.modifiedProperties\n  )\n| mv-apply Property = keyEvents on \n  (\n      where Property.displayName =~ \"KeyDescription\"\n      | extend new_value_set = parse_json(tostring(Property.newValue)),\n               old_value_set = parse_json(tostring(Property.oldValue))\n  )\n| where old_value_set != \"[]\"\n| extend diff = set_difference(new_value_set, old_value_set)\n| where isnotempty(diff)\n| parse diff with * \"KeyIdentifier=\" keyIdentifier:string \",KeyType=\" keyType:string \",KeyUsage=\" keyUsage:string \",DisplayName=\" keyDisplayName:string \"]\" *\n| where keyUsage =~ \"Verify\"\n| mv-apply AdditionalDetail = AdditionalDetails on \n  (\n      where AdditionalDetail.key =~ \"User-Agent\"\n      | extend UserAgent = tostring(AdditionalDetail.value)\n  )\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n// The below line is currently commented out but Microsoft Sentinel users can modify this query to show only Application or only Service Principal events in their environment\n//| where targetType =~ \"Application\" // or targetType =~ \"ServicePrincipal\"\n| project-away diff, new_value_set, old_value_set\n| project-reorder TimeGenerated, OperationName, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId\n| extend Name = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion"
                                ],
                                "subTechniques": [
                                    "T1550.001"
                                ],
                                "techniques": [
                                    "T1550"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '79566f41-df67-4e10-a703-c38a6213afd8'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 36",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '79566f41-df67-4e10-a703-c38a6213afd8')]",
                                "contentId": "79566f41-df67-4e10-a703-c38a6213afd8",
                                "kind": "AnalyticsRule",
                                "version": "1.1.2",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "79566f41-df67-4e10-a703-c38a6213afd8",
                "contentKind": "AnalyticsRule",
                "displayName": "New access credential added to Application or Service Principal",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-d4ab5ztklfi32",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-d4ab5ztklfi32",
                "version": "1.1.2",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('8540c842-5bbc-4a24-9fb2-a836c0e55a51')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "NRT_ADFSDomainTrustMods_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.3",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "8540c842-5bbc-4a24-9fb2-a836c0e55a51",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "NRT",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when a user or application modifies the federation settings on the domain or Update domain authentication from Managed to Federated.\nFor example, this alert will trigger when a new Active Directory Federated Service (ADFS) TrustedRealm object, such as a signing certificate, is added to the domain.\nModification to domain federation settings should be rare. Confirm the added or modified target domain/URL is legitimate administrator behavior.\nTo understand why an authorized user may update settings for a federated domain in Office 365, Azure, or Intune, see: https://docs.microsoft.com/office365/troubleshoot/active-directory/update-federated-domain-office-365.\nFor details on security realms that accept security tokens, see the ADFS Proxy Protocol (MS-ADFSPP) specification: https://docs.microsoft.com/openspecs/windows_protocols/ms-adfspp/e7b9ea73-1980-4318-96a6-da559486664b.\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.",
                                "displayName": "NRT Modified domain federation trust settings",
                                "enabled": false,
                                "query": "AuditLogs\n| where OperationName =~ \"Set federation settings on domain\" or OperationName =~ \"Set domain authentication\"\n//| where Result =~ \"success\"   // commenting out, as it may be interesting to capture failed attempts\n| mv-expand TargetResources\n| extend modifiedProperties = parse_json(TargetResources).modifiedProperties\n| mv-apply Property = modifiedProperties on \n  (\n      where Property.displayName =~ \"LiveType\"\n      | extend targetDisplayName = tostring(Property.displayName),\n               NewDomainValue = tostring(Property.newValue)\n  )\n| extend Federated = iif(OperationName =~ \"Set domain authentication\", iif(NewDomainValue has \"Federated\", True, False), True)\n| where Federated == True\n| mv-expand AdditionalDetails\n| mv-apply AdditionalDetail = AdditionalDetails on \n  (\n      where AdditionalDetail.key =~ \"User-Agent\"\n      | extend UserAgent = tostring(AdditionalDetail.value)\n  )\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| project-reorder TimeGenerated, OperationName, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingIpAddress, AADOperationType, targetDisplayName, Result, UserAgent, CorrelationId, TenantId, AADTenantId\n| extend Name = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess",
                                    "Persistence",
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1555",
                                    "T1098"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8540c842-5bbc-4a24-9fb2-a836c0e55a51'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 37",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8540c842-5bbc-4a24-9fb2-a836c0e55a51')]",
                                "contentId": "8540c842-5bbc-4a24-9fb2-a836c0e55a51",
                                "kind": "AnalyticsRule",
                                "version": "1.0.3",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "8540c842-5bbc-4a24-9fb2-a836c0e55a51",
                "contentKind": "AnalyticsRule",
                "displayName": "NRT Modified domain federation trust settings",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-orebs2xhshweq",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-orebs2xhshweq",
                "version": "1.0.3",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('29e99017-e28d-47be-8b9a-c8c711f8a903')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "NRT_AuthenticationMethodsChangedforVIPUsers_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.3",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "29e99017-e28d-47be-8b9a-c8c711f8a903",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "NRT",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies authentication methods being changed for a list of VIP users watchlist. This could be an indication of an attacker adding an auth method to the account so they can have continued access.",
                                "displayName": "NRT Authentication Methods Changed for VIP Users",
                                "enabled": false,
                                "query": "let security_info_actions = dynamic([\"User registered security info\", \"User changed default security info\", \"User deleted security info\", \"Admin updated security info\", \"User reviewed security info\", \"Admin deleted security info\", \"Admin registered security info\"]);\nlet VIPUsers = (_GetWatchlist('VIPUsers') | distinct \"User Principal Name\");\nAuditLogs\n| where Category =~ \"UserManagement\"\n| where ActivityDisplayName in (security_info_actions)\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"User\"\n      | extend Target = trim(@'\"',tolower(tostring(TargetResource.userPrincipalName)))\n  )\n| where Target in~ (VIPUsers)\n| summarize Start=min(TimeGenerated), End=max(TimeGenerated), Actions = make_set(ResultReason) by InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingIpAddress, Result, Target\n| extend TargetName = tostring(split(Target,'@',0)[0]), TargetUPNSuffix = tostring(split(Target,'@',1)[0])\n| extend InitiatedByName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatedByUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1098"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Target"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '29e99017-e28d-47be-8b9a-c8c711f8a903'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 38",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '29e99017-e28d-47be-8b9a-c8c711f8a903')]",
                                "contentId": "29e99017-e28d-47be-8b9a-c8c711f8a903",
                                "kind": "AnalyticsRule",
                                "version": "1.0.3",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "29e99017-e28d-47be-8b9a-c8c711f8a903",
                "contentKind": "AnalyticsRule",
                "displayName": "NRT Authentication Methods Changed for VIP Users",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-dwlnjguif2wim",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-dwlnjguif2wim",
                "version": "1.0.3",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b6988c32-4f3b-4a45-8313-b46b33061a74')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "nrt_FirstAppOrServicePrincipalCredential_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.6",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "b6988c32-4f3b-4a45-8313-b46b33061a74",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "NRT",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when an admin or app owner account adds a new credential to an Application or Service Principal where there was no previous verify KeyCredential associated.\nIf a threat actor obtains access to an account with sufficient privileges and adds the alternate authentication material triggering this event, the threat actor can now authenticate as the Application or Service Principal using this credential.\nAdditional information on OAuth Credential Grants can be found in RFC 6749 Section 4.4 or https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.",
                                "displayName": "NRT First access credential added to Application or Service Principal where no credential was present",
                                "enabled": false,
                                "query": "AuditLogs\n| where OperationName has_any (\"Add service principal\", \"Certificates and secrets management\")\n| where Result =~ \"success\"\n| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"\n| mv-apply TargetResource = TargetResources on \n  (\n    where TargetResource.type =~ \"Application\"\n    | extend targetDisplayName = tostring(TargetResource.displayName),\n             targetId = tostring(TargetResource.id),\n             targetType = tostring(TargetResource.type),\n             keyEvents = TargetResource.modifiedProperties\n  )\n|  mv-apply Property = keyEvents on \n (\n  where Property.displayName =~ \"KeyDescription\"\n  | extend new_value_set = parse_json(tostring(Property.newValue)),\n           old_value_set = parse_json(tostring(Property.oldValue))\n )\n| where old_value_set == \"[]\"\n| mv-expand new_value_set\n| parse new_value_set with * \"KeyIdentifier=\" keyIdentifier:string \",KeyType=\" keyType:string \",KeyUsage=\" keyUsage:string \",DisplayName=\" keyDisplayName:string \"]\" *\n| where keyUsage == \"Verify\"\n | mv-apply AdditionalDetail = AdditionalDetails on \n  (\n    where AdditionalDetail.key =~ \"User-Agent\"\n    | extend UserAgent = tostring(AdditionalDetail.value)\n  )\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n//| where targetType =~ \"Application\" // or targetType =~ \"ServicePrincipal\"\n| project-away new_value_set, old_value_set\n| project-reorder TimeGenerated, OperationName, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId\n| extend InitiatedByName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatedByUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion"
                                ],
                                "subTechniques": [
                                    "T1550.001"
                                ],
                                "techniques": [
                                    "T1550"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b6988c32-4f3b-4a45-8313-b46b33061a74'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 39",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b6988c32-4f3b-4a45-8313-b46b33061a74')]",
                                "contentId": "b6988c32-4f3b-4a45-8313-b46b33061a74",
                                "kind": "AnalyticsRule",
                                "version": "1.0.6",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "b6988c32-4f3b-4a45-8313-b46b33061a74",
                "contentKind": "AnalyticsRule",
                "displayName": "NRT First access credential added to Application or Service Principal where no credential was present",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-tfzs4byaxxst2",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-tfzs4byaxxst2",
                "version": "1.0.6",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('e42e889a-caaf-4dbb-aec6-371b37d64298')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "NRT_NewAppOrServicePrincipalCredential_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.5",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "e42e889a-caaf-4dbb-aec6-371b37d64298",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "NRT",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when an admin or app owner account adds a new credential to an Application or Service Principal where a verify KeyCredential was already present for the app.\nIf a threat actor obtains access to an account with sufficient privileges and adds the alternate authentication material triggering this event, the threat actor can now authenticate as the Application or Service Principal using this credential.\nAdditional information on OAuth Credential Grants can be found in RFC 6749 Section 4.4 or https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.",
                                "displayName": "NRT New access credential added to Application or Service Principal",
                                "enabled": false,
                                "query": "AuditLogs\n| where OperationName has_any (\"Add service principal\", \"Certificates and secrets management\") // captures \"Add service principal\", \"Add service principal credentials\", and \"Update application - Certificates and secrets management\" events\n| where Result =~ \"success\"\n| where tostring(InitiatedBy.user.userPrincipalName) has \"@\" or tostring(InitiatedBy.app.displayName) has \"@\"\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"Application\"\n      | extend targetDisplayName = tostring(TargetResource.displayName),\n               targetId = tostring(TargetResource.id),\n               targetType = tostring(TargetResource.type),\n               keyEvents = TargetResource.modifiedProperties\n  )\n| mv-apply Property = keyEvents on \n  (\n      where Property.displayName =~ \"KeyDescription\"\n      | extend new_value_set = parse_json(tostring(Property.newValue)),\n               old_value_set = parse_json(tostring(Property.oldValue))\n  )\n| where old_value_set != \"[]\"\n| extend diff = set_difference(new_value_set, old_value_set)\n| where diff != \"[]\"\n| parse diff with * \"KeyIdentifier=\" keyIdentifier:string \",KeyType=\" keyType:string \",KeyUsage=\" keyUsage:string \",DisplayName=\" keyDisplayName:string \"]\" *\n| where keyUsage =~ \"Verify\"\n| mv-apply AdditionalDetail = AdditionalDetails on \n  (\n      where AdditionalDetail.key =~ \"User-Agent\"\n      | extend UserAgent = tostring(AdditionalDetail.value)\n  )\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n// The below line is currently commented out but Microsoft Sentinel users can modify this query to show only Application or only Service Principal events in their environment\n//| where targetType =~ \"Application\" // or targetType =~ \"ServicePrincipal\"\n| project-away diff, new_value_set, old_value_set\n| project-reorder TimeGenerated, OperationName, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingIpAddress, UserAgent, targetDisplayName, targetId, targetType, keyDisplayName, keyType, keyUsage, keyIdentifier, CorrelationId, TenantId\n| extend InitiatedByName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatedByUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion"
                                ],
                                "techniques": [
                                    "T1550"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatingAppName"
                                            },
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e42e889a-caaf-4dbb-aec6-371b37d64298'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 40",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e42e889a-caaf-4dbb-aec6-371b37d64298')]",
                                "contentId": "e42e889a-caaf-4dbb-aec6-371b37d64298",
                                "kind": "AnalyticsRule",
                                "version": "1.0.5",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "e42e889a-caaf-4dbb-aec6-371b37d64298",
                "contentKind": "AnalyticsRule",
                "displayName": "NRT New access credential added to Application or Service Principal",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-iltu7vzxeae5m",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-iltu7vzxeae5m",
                "version": "1.0.5",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('5db427b2-f406-4274-b413-e9fcb29412f8')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "NRT_PIMElevationRequestRejected_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.4",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "5db427b2-f406-4274-b413-e9fcb29412f8",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "NRT",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies when a user is rejected for a privileged role elevation via PIM. Monitor rejections for indicators of attacker compromise of the requesting account.\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-privileged-identity-management",
                                "displayName": "NRT PIM Elevation Request Rejected",
                                "enabled": false,
                                "query": "AuditLogs\n| where ActivityDisplayName =~ 'Add member to role request denied (PIM activation)'\n| mv-apply ResourceItem = TargetResources on \n  (\n      where ResourceItem.type =~ \"Role\"\n      | extend Role = trim(@'\"',tostring(ResourceItem.displayName))\n  )\n| mv-apply ResourceItem = TargetResources on \n  (\n      where ResourceItem.type =~ \"User\"\n      | extend TargetUserPrincipalName = trim(@'\"',tostring(ResourceItem.userPrincipalName))\n  )\n| where ResultReason != \"RoleAssignmentExists\"\n| where isnotempty(InitiatedBy.user)\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend TargetName = tostring(split(TargetUserPrincipalName,'@',0)[0]), TargetUPNSuffix = tostring(split(TargetUserPrincipalName,'@',1)[0])\n| extend InitiatedByName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatedByUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n| project-reorder TimeGenerated, TargetUserPrincipalName, Role, OperationName, Result, ResultDescription\n",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "subTechniques": [
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "TargetUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5db427b2-f406-4274-b413-e9fcb29412f8'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 41",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5db427b2-f406-4274-b413-e9fcb29412f8')]",
                                "contentId": "5db427b2-f406-4274-b413-e9fcb29412f8",
                                "kind": "AnalyticsRule",
                                "version": "1.0.4",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "5db427b2-f406-4274-b413-e9fcb29412f8",
                "contentKind": "AnalyticsRule",
                "displayName": "NRT PIM Elevation Request Rejected",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-kndi7oa3iftvu",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-kndi7oa3iftvu",
                "version": "1.0.4",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('14f6da04-2f96-44ee-9210-9ccc1be6401e')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "NRT_PrivlegedRoleAssignedOutsidePIM_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.2",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "14f6da04-2f96-44ee-9210-9ccc1be6401e",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "NRT",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies a privileged role being assigned to a user outside of PIM\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-privileged-accounts#things-to-monitor-1",
                                "displayName": "NRT Privileged Role Assigned Outside PIM",
                                "enabled": false,
                                "query": "AuditLogs\n| where Category =~ \"RoleManagement\"\n| where OperationName has \"Add member to role outside of PIM\"\n        or (LoggedByService =~ \"Core Directory\" and OperationName =~ \"Add member to role\" and Identity != \"MS-PIM\")\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"User\"\n      | extend TargetUserPrincipalName = tostring(TargetResource.userPrincipalName)\n  )\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend TargetName = tostring(split(TargetUserPrincipalName,'@',0)[0]), TargetUPNSuffix = tostring(split(TargetUserPrincipalName,'@',1)[0])\n| extend InitiatedByName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatedByUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "subTechniques": [
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "TargetUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '14f6da04-2f96-44ee-9210-9ccc1be6401e'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 42",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '14f6da04-2f96-44ee-9210-9ccc1be6401e')]",
                                "contentId": "14f6da04-2f96-44ee-9210-9ccc1be6401e",
                                "kind": "AnalyticsRule",
                                "version": "1.0.2",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "14f6da04-2f96-44ee-9210-9ccc1be6401e",
                "contentKind": "AnalyticsRule",
                "displayName": "NRT Privileged Role Assigned Outside PIM",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-n4y4qgvt3d42s",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-n4y4qgvt3d42s",
                "version": "1.0.2",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('70fc7201-f28e-4ba7-b9ea-c04b96701f13')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "NRT_UseraddedtoPrivilgedGroups_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.6",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "70fc7201-f28e-4ba7-b9ea-c04b96701f13",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "NRT",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when a user is added to any of the Privileged Groups.\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.\nFor Administrator role permissions in Microsoft Entra ID please see https://docs.microsoft.com/azure/active-directory/users-groups-roles/directory-assign-admin-roles",
                                "displayName": "NRT User added to Microsoft Entra ID Privileged Groups",
                                "enabled": false,
                                "query": "let OperationList = dynamic([\"Add member to role\",\"Add member to role in PIM requested (permanent)\"]);\nlet PrivilegedGroups = dynamic([\"UserAccountAdmins\",\"PrivilegedRoleAdmins\",\"TenantAdmins\"]);\nAuditLogs\n//| where LoggedByService =~ \"Core Directory\"\n| where Category =~ \"RoleManagement\"\n| where OperationName in~ (OperationList)\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"User\"\n      | extend TargetUserPrincipalName = tostring(TargetResource.userPrincipalName),\n               modProps = TargetResource.modifiedProperties\n  )\n| mv-apply Property = modProps on \n  (\n      where Property.displayName =~ \"Role.WellKnownObjectName\"\n      | extend DisplayName = trim('\"',tostring(Property.displayName)),\n               GroupName = trim('\"',tostring(Property.newValue))\n  )\n| extend InitiatingAppId = tostring(InitiatedBy.app.appId)\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingAppServicePrincipalName = tostring(InitiatedBy.app.servicePrincipalName)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))        \n| extend InitiatingUserRoles = InitiatedBy.user.roles\n| where GroupName in~ (PrivilegedGroups)\n// If you don't want to alert for operations from PIM, remove below filtering for MS-PIM.\n//| where InitiatingAppName != \"MS-PIM\"\n| project TimeGenerated, AADOperationType, Category, OperationName, AADTenantId, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppId, InitiatingAppServicePrincipalId, InitiatingIpAddress, InitiatingUserRoles, DisplayName, GroupName, TargetUserPrincipalName\n| extend InitiatedByName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatedByUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n| extend TargetName = tostring(split(TargetUserPrincipalName,'@',0)[0]), TargetUPNSuffix = tostring(split(TargetUserPrincipalName,'@',1)[0])\n",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence",
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1098",
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "TargetUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '70fc7201-f28e-4ba7-b9ea-c04b96701f13'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 43",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '70fc7201-f28e-4ba7-b9ea-c04b96701f13')]",
                                "contentId": "70fc7201-f28e-4ba7-b9ea-c04b96701f13",
                                "kind": "AnalyticsRule",
                                "version": "1.0.6",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "70fc7201-f28e-4ba7-b9ea-c04b96701f13",
                "contentKind": "AnalyticsRule",
                "displayName": "NRT User added to Microsoft Entra ID Privileged Groups",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-vuua5che2eiai",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-vuua5che2eiai",
                "version": "1.0.6",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('7d7e20f8-3384-4b71-811c-f5e950e8306c')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "PIMElevationRequestRejected_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.8",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "7d7e20f8-3384-4b71-811c-f5e950e8306c",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies when a user is rejected for a privileged role elevation via PIM. Monitor rejections for indicators of attacker compromise of the requesting account.\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-privileged-identity-management",
                                "displayName": "PIM Elevation Request Rejected",
                                "enabled": false,
                                "query": "AuditLogs\n| where ActivityDisplayName =~'Add member to role request denied (PIM activation)'\n| mv-apply ResourceItem = TargetResources on \n  (\n      where ResourceItem.type =~ \"Role\"\n      | extend Role = trim(@'\"',tostring(ResourceItem.displayName))\n  )\n| mv-apply ResourceItem = TargetResources on \n  (\n      where ResourceItem.type =~ \"User\"\n      | extend TargetUserPrincipalName = trim(@'\"',tostring(ResourceItem.userPrincipalName))\n  )\n| where isnotempty(InitiatedBy.user)\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend TargetName = tostring(split(TargetUserPrincipalName,'@',0)[0]), TargetUPNSuffix = tostring(split(TargetUserPrincipalName,'@',1)[0])\n| extend InitiatedByName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatedByUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n| project-reorder TimeGenerated, TargetUserPrincipalName, Role, OperationName, Result, ResultDescription\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "PT2H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "subTechniques": [
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "TargetUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7d7e20f8-3384-4b71-811c-f5e950e8306c'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 44",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7d7e20f8-3384-4b71-811c-f5e950e8306c')]",
                                "contentId": "7d7e20f8-3384-4b71-811c-f5e950e8306c",
                                "kind": "AnalyticsRule",
                                "version": "1.0.8",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "7d7e20f8-3384-4b71-811c-f5e950e8306c",
                "contentKind": "AnalyticsRule",
                "displayName": "PIM Elevation Request Rejected",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-a5vmnqazbs7i4",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-a5vmnqazbs7i4",
                "version": "1.0.8",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('fa00014c-c5f4-4715-8f5b-ba567e19e41e')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "PossibleSignInfromAzureBackdoor_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "fa00014c-c5f4-4715-8f5b-ba567e19e41e",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies when a user adds an unverified domain as an authentication method, followed by a sign-in from a user the newly added domain. Threat actors may add custom domains to create a backdoor to your tenant. It's important to monitor whenever custom domains are added to the tenant.",
                                "displayName": "Possible SignIn from Azure Backdoor",
                                "enabled": false,
                                "query": "// Microsoft Entra ID  Backdoors: Identity Federation\n//Ref: https://www.inversecos.com/2021/11/how-to-detect-azure-active-directory.html\nAuditLogs\n| where OperationName == \"Add unverified domain\"\n| where Result == \"success\"\n| extend InitiatedBy = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\n| extend DomainName = tostring(TargetResources[0].displayName)\n| summarize DomainAddedTime = min(TimeGenerated), ModifiedProperties = make_set(parse_json(TargetResources[0].modifiedProperties),1048576) by InitiatedBy, DomainName\n| join kind=inner (\nSigninLogs\n| where ResultType == \"0\"\n| extend UserDomain = tostring(parse_json(split(UserPrincipalName,\"@\",1)[0]))\n| summarize SignInTime = min(TimeGenerated)  by UserPrincipalName, IPAddress, tostring(LocationDetails),AppDisplayName,ResourceDisplayName,UserDomain\n) on $left.DomainName == $right.UserDomain\n// Getting UserName and Domain\n| extend Name = split(UserPrincipalName,\"@\",0), Domain = split(UserPrincipalName,\"@\",1)\n| mv-expand Name,Domain\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs",
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1098"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "NTDomain",
                                                "columnName": "UserDomain"
                                            },
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ],
                                "customDetails": {
                                    "InitiatedBy": "InitiatedBy",
                                    "ModifiedProperties": "ModifiedProperties",
                                    "AppDisplayName": "AppDisplayName",
                                    "SignInTime": "SignInTime",
                                    "DomainAdded": "DomainName",
                                    "DomainAddedTime": "DomainAddedTime",
                                    "ResourceDisplayName": "ResourceDisplayName"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'fa00014c-c5f4-4715-8f5b-ba567e19e41e'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 45",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'fa00014c-c5f4-4715-8f5b-ba567e19e41e')]",
                                "contentId": "fa00014c-c5f4-4715-8f5b-ba567e19e41e",
                                "kind": "AnalyticsRule",
                                "version": "1.0.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "fa00014c-c5f4-4715-8f5b-ba567e19e41e",
                "contentKind": "AnalyticsRule",
                "displayName": "Possible SignIn from Azure Backdoor",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-ufjfmswpkatxm",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-ufjfmswpkatxm",
                "version": "1.0.0",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('34c5aff9-a8c2-4601-9654-c7e46342d03b')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "PrivilegedAccountsSigninFailureSpikes_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "34c5aff9-a8c2-4601-9654-c7e46342d03b",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": " Identifies spike in failed sign-ins from Privileged accounts. Privileged accounts list can be based on IdentityInfo UEBA table.\nSpike is determined based on Time series anomaly which will look at historical baseline values.\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-privileged-accounts#things-to-monitor",
                                "displayName": "Privileged Accounts - Sign in Failure Spikes",
                                "enabled": false,
                                "query": "let starttime = 14d;\nlet timeframe = 1d;\nlet scorethreshold = 3;\nlet baselinethreshold = 5;\nlet aadFunc = (tableName:string){\n    IdentityInfo\n    | where TimeGenerated > ago(starttime)\n    | summarize arg_max(TimeGenerated, *) by AccountUPN\n    | mv-expand AssignedRoles\n    | where AssignedRoles contains 'Admin' or GroupMembership has \"Admin\"\n    | summarize Roles = make_list(AssignedRoles) by AccountUPN = tolower(AccountUPN)\n    | join kind=inner (\n        table(tableName)\n        | where TimeGenerated between (startofday(ago(starttime))..startofday(now()))\n        | where ResultType != 0\n        | extend UserPrincipalName = tolower(UserPrincipalName)\n    ) on $left.AccountUPN == $right.UserPrincipalName\n    | extend timestamp = TimeGenerated, AccountCustomEntity = UserPrincipalName, Roles = tostring(Roles)\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nlet allSignins = union isfuzzy=true aadSignin, aadNonInt;\nlet TimeSeriesAlerts = \n    allSignins\n    | make-series HourlyCount=count() on TimeGenerated from startofday(ago(starttime)) to startofday(now()) step 1h by UserPrincipalName, Roles\n    | extend (anomalies, score, baseline) = series_decompose_anomalies(HourlyCount, scorethreshold, -1, 'linefit')\n    | mv-expand HourlyCount to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double), score to typeof(double), baseline to typeof(long)\n    // Filtering low count events per baselinethreshold\n    | where anomalies > 0 and baseline > baselinethreshold\n    | extend AnomalyHour = TimeGenerated\n    | project UserPrincipalName, Roles, AnomalyHour, TimeGenerated, HourlyCount, baseline, anomalies, score;\n// Filter the alerts for specified timeframe\nTimeSeriesAlerts\n| where TimeGenerated > startofday(ago(timeframe))\n| join kind=inner ( \n    allSignins\n    | where TimeGenerated > startofday(ago(timeframe))\n    // create a new column and round to hour\n    | extend DateHour = bin(TimeGenerated, 1h)\n    | summarize PartialFailedSignins = count(), LatestAnomalyTime = arg_max(TimeGenerated, *) by bin(TimeGenerated, 1h), OperationName, Category, ResultType, ResultDescription, UserPrincipalName, Roles, UserDisplayName, AppDisplayName, ClientAppUsed, IPAddress, ResourceDisplayName\n) on UserPrincipalName, $left.AnomalyHour == $right.DateHour\n| project LatestAnomalyTime, OperationName, Category, UserPrincipalName, Roles = todynamic(Roles), UserDisplayName, ResultType, ResultDescription, AppDisplayName, ClientAppUsed, UserAgent, IPAddress, Location, AuthenticationRequirement, ConditionalAccessStatus, ResourceDisplayName, PartialFailedSignins, TotalFailedSignins = HourlyCount, baseline, anomalies, score\n| extend Name = tostring(split(UserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P14D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "BehaviorAnalytics",
                                        "dataTypes": [
                                            "IdentityInfo"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "subTechniques": [
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '34c5aff9-a8c2-4601-9654-c7e46342d03b'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 46",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '34c5aff9-a8c2-4601-9654-c7e46342d03b')]",
                                "contentId": "34c5aff9-a8c2-4601-9654-c7e46342d03b",
                                "kind": "AnalyticsRule",
                                "version": "1.1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "34c5aff9-a8c2-4601-9654-c7e46342d03b",
                "contentKind": "AnalyticsRule",
                "displayName": "Privileged Accounts - Sign in Failure Spikes",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-csubgb4ipxsrw",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-csubgb4ipxsrw",
                "version": "1.1.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "IdentityInfo"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "BehaviorAnalytics"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('269435e3-1db8-4423-9dfc-9bf59997da1c')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "PrivlegedRoleAssignedOutsidePIM_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.5",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "269435e3-1db8-4423-9dfc-9bf59997da1c",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies a privileged role being assigned to a user outside of PIM\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-privileged-accounts#things-to-monitor-1",
                                "displayName": "Privileged Role Assigned Outside PIM",
                                "enabled": false,
                                "query": "AuditLogs\n| where Category =~ \"RoleManagement\"\n| where OperationName has \"Add member to role outside of PIM\"\n        or (LoggedByService =~ \"Core Directory\" and OperationName =~ \"Add member to role\" and Identity != \"MS-PIM\")\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"User\"\n      | extend TargetUserPrincipalName = tostring(TargetResource.userPrincipalName)\n  )\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend TargetName = tostring(split(TargetUserPrincipalName,'@',0)[0]), TargetUPNSuffix = tostring(split(TargetUserPrincipalName,'@',1)[0])\n| extend InitiatedByName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatedByUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "PrivilegeEscalation"
                                ],
                                "subTechniques": [
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "TargetUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '269435e3-1db8-4423-9dfc-9bf59997da1c'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 47",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '269435e3-1db8-4423-9dfc-9bf59997da1c')]",
                                "contentId": "269435e3-1db8-4423-9dfc-9bf59997da1c",
                                "kind": "AnalyticsRule",
                                "version": "1.0.5",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "269435e3-1db8-4423-9dfc-9bf59997da1c",
                "contentKind": "AnalyticsRule",
                "displayName": "Privileged Role Assigned Outside PIM",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-6drszkjigcmdc",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-6drszkjigcmdc",
                "version": "1.0.5",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('83ba3057-9ea3-4759-bf6a-933f2e5bc7ee')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "RareApplicationConsent_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.5",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "83ba3057-9ea3-4759-bf6a-933f2e5bc7ee",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when the \"Consent to application\" operation occurs by a user that has not done this operation before or rarely does this.\nThis could indicate that permissions to access the listed Azure App were provided to a malicious actor.\nConsent to application, Add service principal and Add OAuth2PermissionGrant should typically be rare events.\nThis may help detect the Oauth2 attack that can be initiated by this publicly available tool - https://github.com/fireeye/PwnAuth\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.",
                                "displayName": "Rare application consent",
                                "enabled": false,
                                "query": "let current = 1d;\nlet auditLookback = 7d;\n// Setting threshold to 3 as a default, change as needed.\n// Any operation that has been initiated by a user or app more than 3 times in the past 7 days will be excluded\nlet threshold = 3;\n// Gather initial data from lookback period, excluding current, adjust current to more than a single day if no results\nlet AuditTrail = AuditLogs | where TimeGenerated >= ago(auditLookback) and TimeGenerated < ago(current)\n// 2 other operations that can be part of malicious activity in this situation are\n// \"Add OAuth2PermissionGrant\" and \"Add service principal\", extend the filter below to capture these too\n| where OperationName has \"Consent to application\"\n| extend InitiatedBy = iff(isnotempty(tostring(InitiatedBy.user.userPrincipalName)),\n          tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"ServicePrincipal\"\n      | extend TargetResourceName = tolower(tostring(TargetResource.displayName))\n  )\n| summarize max(TimeGenerated), OperationCount = count() by OperationName, InitiatedBy, TargetResourceName\n// only including operations initiated by a user or app that is above the threshold so we produce only rare and has not occurred in last 7 days\n| where OperationCount > threshold;\n// Gather current period of audit data\nlet RecentConsent = AuditLogs | where TimeGenerated >= ago(current)\n| where OperationName has \"Consent to application\"\n| extend IpAddress = case(\n              isnotempty(tostring(InitiatedBy.user.ipAddress)) and tostring(InitiatedBy.user.ipAddress) != 'null', tostring(InitiatedBy.user.ipAddress),\n              isnotempty(tostring(InitiatedBy.app.ipAddress)) and tostring(InitiatedBy.app.ipAddress) != 'null', tostring(InitiatedBy.app.ipAddress),\n              'Not Available')\n| extend InitiatedBy = iff(isnotempty(tostring(InitiatedBy.user.userPrincipalName)),\n                          tostring(InitiatedBy.user.userPrincipalName), tostring(InitiatedBy.app.displayName))\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"ServicePrincipal\"\n      | extend TargetResourceName = tolower(tostring(TargetResource.displayName)),\n               props = TargetResource.modifiedProperties\n  )\n| parse props with * \"ConsentType: \" ConsentType \"]\" *\n| mv-apply AdditionalDetail = AdditionalDetails on \n  (\n      where AdditionalDetail.key =~ \"User-Agent\"\n      | extend UserAgent = tostring(AdditionalDetail.value)\n  )\n| project TimeGenerated, InitiatedBy, IpAddress, TargetResourceName, Category, OperationName, ConsentType, UserAgent, CorrelationId, Type;\n// Exclude previously seen audit activity for \"Consent to application\" that was seen in the lookback period\n// First for rare InitiatedBy\nlet RareConsentBy = RecentConsent | join kind= leftanti AuditTrail on OperationName, InitiatedBy\n| extend Reason = \"Previously unseen user consenting\";\n// Second for rare TargetResourceName\nlet RareConsentApp = RecentConsent | join kind= leftanti AuditTrail on OperationName, TargetResourceName\n| extend Reason = \"Previously unseen app granted consent\";\nRareConsentBy | union RareConsentApp\n| summarize Reason = make_set(Reason,100) by TimeGenerated, InitiatedBy, IpAddress, TargetResourceName, Category, OperationName, ConsentType, UserAgent, CorrelationId, Type\n| extend timestamp = TimeGenerated, Name = tolower(tostring(split(InitiatedBy,'@',0)[0])), UPNSuffix = tolower(tostring(split(InitiatedBy,'@',1)[0]))\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P7D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 3,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence",
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1136",
                                    "T1068"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatedBy"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetResourceName"
                                            }
                                        ],
                                        "entityType": "CloudApplication"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '83ba3057-9ea3-4759-bf6a-933f2e5bc7ee'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 48",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '83ba3057-9ea3-4759-bf6a-933f2e5bc7ee')]",
                                "contentId": "83ba3057-9ea3-4759-bf6a-933f2e5bc7ee",
                                "kind": "AnalyticsRule",
                                "version": "1.1.5",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "83ba3057-9ea3-4759-bf6a-933f2e5bc7ee",
                "contentKind": "AnalyticsRule",
                "displayName": "Rare application consent",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-uwawrgvz4c7qa",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-uwawrgvz4c7qa",
                "version": "1.1.5",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('fb7ca1c9-e14c-40a3-856e-28f3c14ea1ba')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "SeamlessSSOPasswordSpray_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.4",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "fb7ca1c9-e14c-40a3-856e-28f3c14ea1ba",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query detects when there is a spike in Microsoft Entra ID Seamless SSO errors. They may not be caused by a Password Spray attack, but the cause of the errors might need to be investigated.\nMicrosoft Entra ID only logs the requests that matched existing accounts, thus there might have been unlogged requests for non-existing accounts.",
                                "displayName": "Password spray attack against Microsoft Entra ID Seamless SSO",
                                "enabled": false,
                                "query": "let account_threshold = 5;\nAADNonInteractiveUserSignInLogs\n//| where ResultType == \"81016\"\n| where ResultType startswith \"81\"\n| summarize DistinctAccounts = dcount(UserPrincipalName), DistinctAddresses = make_set(IPAddress,100) by ResultType\n| where DistinctAccounts > account_threshold\n| mv-expand IPAddress = DistinctAddresses\n| extend IPAddress = tostring(IPAddress)\n| join kind=leftouter (union isfuzzy=true SigninLogs, AADNonInteractiveUserSignInLogs) on IPAddress\n| summarize\n    StartTime = min(TimeGenerated),\n    EndTime = max(TimeGenerated),\n    UserPrincipalName = make_set(UserPrincipalName,100),\n    UserAgent = make_set(UserAgent,100),\n    ResultDescription = take_any(ResultDescription),\n    ResultSignature = take_any(ResultSignature)\n    by IPAddress, Type, ResultType\n| project Type, StartTime, EndTime, IPAddress, ResultType, ResultDescription, ResultSignature, UserPrincipalName, UserAgent = iff(array_length(UserAgent) == 1, UserAgent[0], UserAgent)\n| extend Name = tostring(split(UserPrincipalName[0],'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName[0],'@',1)[0])\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1110"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'fb7ca1c9-e14c-40a3-856e-28f3c14ea1ba'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 49",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'fb7ca1c9-e14c-40a3-856e-28f3c14ea1ba')]",
                                "contentId": "fb7ca1c9-e14c-40a3-856e-28f3c14ea1ba",
                                "kind": "AnalyticsRule",
                                "version": "1.0.4",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "fb7ca1c9-e14c-40a3-856e-28f3c14ea1ba",
                "contentKind": "AnalyticsRule",
                "displayName": "Password spray attack against Microsoft Entra ID Seamless SSO",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-n4wct6xrgwwas",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-n4wct6xrgwwas",
                "version": "1.0.4",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('d3980830-dd9d-40a5-911f-76b44dfdce16')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Sign-in Burst from Multiple Locations_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.3",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "d3980830-dd9d-40a5-911f-76b44dfdce16",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This detection triggers when there is a Signin burst from multiple locations in GitHub (Entra ID SSO).\n This detection is based on configurable threshold which can be prone to false positives. To view the anomaly based equivalent of thie detection, please see here https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Microsoft%20Entra%20ID/Analytic%20Rules/AnomalousUserAppSigninLocationIncrease-detection.yaml. ",
                                "displayName": "GitHub Signin Burst from Multiple Locations",
                                "enabled": false,
                                "query": "let locationThreshold = 1;\nlet aadFunc = (tableName:string){\ntable(tableName)\n| where AppDisplayName =~ \"GitHub.com\"\n| where ResultType == 0\n| summarize CountOfLocations = dcount(Location), Locations = make_set(Location,100), BurstStartTime = min(TimeGenerated), BurstEndTime = max(TimeGenerated) by UserPrincipalName, Type\n| where CountOfLocations > locationThreshold\n| extend timestamp = BurstStartTime\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n| extend Name = tostring(split(UserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1110"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd3980830-dd9d-40a5-911f-76b44dfdce16'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 50",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd3980830-dd9d-40a5-911f-76b44dfdce16')]",
                                "contentId": "d3980830-dd9d-40a5-911f-76b44dfdce16",
                                "kind": "AnalyticsRule",
                                "version": "1.0.3",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "d3980830-dd9d-40a5-911f-76b44dfdce16",
                "contentKind": "AnalyticsRule",
                "displayName": "GitHub Signin Burst from Multiple Locations",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-6vll2cpyoajpu",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-6vll2cpyoajpu",
                "version": "1.0.3",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('500c103a-0319-4d56-8e99-3cec8d860757')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "SigninAttemptsByIPviaDisabledAccounts_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "2.1.3",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "500c103a-0319-4d56-8e99-3cec8d860757",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies IPs with failed attempts to sign in to one or more disabled accounts using the IP through which successful signins from other accounts have happened.\nThis could indicate an attacker who obtained credentials for a list of accounts and is attempting to login with those accounts, some of which may have already been disabled.\nReferences: https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-sign-ins-error-codes\n50057 - User account is disabled. The account has been disabled by an administrator.\nThis query has also been updated to include UEBA logs IdentityInfo and BehaviorAnalytics for contextual information around the results.",
                                "displayName": "Sign-ins from IPs that attempt sign-ins to disabled accounts",
                                "enabled": false,
                                "query": "let aadFunc = (tableName: string) {\nlet failed_signins = table(tableName)\n| where ResultType == \"50057\"\n| where ResultDescription == \"User account is disabled. The account has been disabled by an administrator.\";\nlet disabled_users = failed_signins | summarize by UserPrincipalName;\ntable(tableName)\n  | where ResultType == 0\n  | where isnotempty(UserPrincipalName)\n  | where UserPrincipalName !in (disabled_users)\n| summarize\n        successfulAccountsTargettedCount = dcount(UserPrincipalName),\n        successfulAccountSigninSet = make_set(UserPrincipalName, 100),\n        successfulApplicationSet = make_set(AppDisplayName, 100)\n    by IPAddress, Type\n    // Assume IPs associated with sign-ins from 100+ distinct user accounts are safe\n    | where successfulAccountsTargettedCount < 50\n    | where isnotempty(successfulAccountsTargettedCount)\n  | join kind=inner (failed_signins\n| summarize\n    StartTime = min(TimeGenerated),\n    EndTime = max(TimeGenerated),\n    totalDisabledAccountLoginAttempts = count(),\n    disabledAccountsTargettedCount = dcount(UserPrincipalName),\n    applicationsTargeted = dcount(AppDisplayName),\n    disabledAccountSet = make_set(UserPrincipalName, 100),\n    disabledApplicationSet = make_set(AppDisplayName, 100)\nby IPAddress, Type\n| order by totalDisabledAccountLoginAttempts desc) on IPAddress\n| project StartTime, EndTime, IPAddress, totalDisabledAccountLoginAttempts, disabledAccountsTargettedCount, disabledAccountSet, disabledApplicationSet, successfulApplicationSet, successfulAccountsTargettedCount, successfulAccountSigninSet, Type\n| order by totalDisabledAccountLoginAttempts};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n| join kind=leftouter (\n    BehaviorAnalytics\n    | where ActivityType in (\"FailedLogOn\", \"LogOn\")\n    | where EventSource =~ \"Azure AD\"\n    | project UsersInsights, DevicesInsights, ActivityInsights, InvestigationPriority, SourceIPAddress, UserPrincipalName\n    | project-rename IPAddress = SourceIPAddress\n    | summarize\n        Users = make_set(UserPrincipalName, 100),\n        UsersInsights = make_set(UsersInsights, 100),\n        DevicesInsights = make_set(DevicesInsights, 100),\n        IPInvestigationPriority = sum(InvestigationPriority)\n    by IPAddress\n) on IPAddress\n| extend SFRatio = toreal(toreal(disabledAccountsTargettedCount)/toreal(successfulAccountsTargettedCount))\n| where SFRatio >= 0.5\n| sort by IPInvestigationPriority desc\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "BehaviorAnalytics",
                                        "dataTypes": [
                                            "BehaviorAnalytics"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "Persistence"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1098"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '500c103a-0319-4d56-8e99-3cec8d860757'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 51",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '500c103a-0319-4d56-8e99-3cec8d860757')]",
                                "contentId": "500c103a-0319-4d56-8e99-3cec8d860757",
                                "kind": "AnalyticsRule",
                                "version": "2.1.3",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "500c103a-0319-4d56-8e99-3cec8d860757",
                "contentKind": "AnalyticsRule",
                "displayName": "Sign-ins from IPs that attempt sign-ins to disabled accounts",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-gjhkokvirhtjk",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-gjhkokvirhtjk",
                "version": "2.1.3",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "BehaviorAnalytics"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "BehaviorAnalytics"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('28b42356-45af-40a6-a0b4-a554cdfd5d8a')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "SigninBruteForce-AzurePortal_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "2.1.4",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "28b42356-45af-40a6-a0b4-a554cdfd5d8a",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Detects Azure Portal brute force attacks by monitoring for multiple authentication failures and a successful login within a 20-minute window. Default settings: 10 failures, 25 deviations.\nRef: https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-sign-ins-error-codes.",
                                "displayName": "Brute force attack against Azure Portal",
                                "enabled": false,
                                "query": "// Set threshold value for deviation\nlet threshold = 25;\n// Set the time range for the query\nlet timeRange = 24h;\n// Set the authentication window duration\nlet authenticationWindow = 20m;\n// Define a reusable function 'aadFunc' that takes a table name as input\nlet aadFunc = (tableName: string) {\n  // Query the specified table\n  table(tableName)\n  // Filter data within the last 24 hours\n  | where TimeGenerated > ago(1d)\n  // Filter records related to \"Azure Portal\" applications\n  | where AppDisplayName has \"Azure Portal\"\n  // Extract and transform some fields\n  | extend\n      DeviceDetail = todynamic(DeviceDetail),\n      LocationDetails = todynamic(LocationDetails)\n  | extend\n      OS = tostring(DeviceDetail.operatingSystem),\n      Browser = tostring(DeviceDetail.browser),\n      State = tostring(LocationDetails.state),\n      City = tostring(LocationDetails.city),\n      Region = tostring(LocationDetails.countryOrRegion)\n  // Categorize records as Success or Failure based on ResultType\n  | extend FailureOrSuccess = iff(ResultType in (\"0\", \"50125\", \"50140\", \"70043\", \"70044\"), \"Success\", \"Failure\")\n  // Sort and identify sessions\n  | sort by UserPrincipalName asc, TimeGenerated asc\n  | extend SessionStartedUtc = row_window_session(TimeGenerated, timeRange, authenticationWindow, UserPrincipalName != prev(UserPrincipalName) or prev(FailureOrSuccess) == \"Success\")\n  // Summarize data\n  | summarize FailureOrSuccessCount = count() by  FailureOrSuccess, UserId, UserDisplayName, AppDisplayName, IPAddress, Browser, OS, State, City, Region, Type, CorrelationId, bin(TimeGenerated, authenticationWindow), ResultType, UserPrincipalName, SessionStartedUtc\n  | summarize FailureCountBeforeSuccess = sumif(FailureOrSuccessCount, FailureOrSuccess == \"Failure\"), StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), makelist(FailureOrSuccess), IPAddress = make_set(IPAddress, 15), make_set(Browser, 15), make_set(City, 15), make_set(State, 15), make_set(Region, 15), make_set(ResultType, 15) by SessionStartedUtc, UserPrincipalName, CorrelationId, AppDisplayName, UserId, Type\n  // Filter records where \"Success\" occurs in the middle of a session\n  | where array_index_of(list_FailureOrSuccess, \"Success\") != 0\n  | where array_index_of(list_FailureOrSuccess, \"Success\") == array_length(list_FailureOrSuccess) - 1\n  // Remove unnecessary columns from the output\n  | project-away SessionStartedUtc, list_FailureOrSuccess\n  // Join with another table and calculate deviation\n  | join kind=inner (\n      table(tableName)\n      | where TimeGenerated > ago(7d)\n      | where AppDisplayName has \"Azure Portal\"\n      | extend FailureOrSuccess = iff(ResultType in (\"0\", \"50125\", \"50140\", \"70043\", \"70044\"), \"Success\", \"Failure\")\n      | summarize avgFailures = avg(todouble(FailureOrSuccess == \"Failure\")) by UserPrincipalName\n  ) on UserPrincipalName\n  | extend Deviation = abs(FailureCountBeforeSuccess - avgFailures) / avgFailures\n  // Filter records based on deviation and failure count criteria\n  | where Deviation > threshold and FailureCountBeforeSuccess >= 10\n  // Expand the IPAddress array\n  | mv-expand IPAddress\n  | extend IPAddress = tostring(IPAddress)\n  | extend timestamp = StartTime\n};\n// Call 'aadFunc' with different table names and union the results\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n// Additional transformation - Split UserPrincipalName\n| extend Name = tostring(split(UserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P7D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1110"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "UserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '28b42356-45af-40a6-a0b4-a554cdfd5d8a'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 52",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '28b42356-45af-40a6-a0b4-a554cdfd5d8a')]",
                                "contentId": "28b42356-45af-40a6-a0b4-a554cdfd5d8a",
                                "kind": "AnalyticsRule",
                                "version": "2.1.4",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "28b42356-45af-40a6-a0b4-a554cdfd5d8a",
                "contentKind": "AnalyticsRule",
                "displayName": "Brute force attack against Azure Portal",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-juatvt36qmrlq",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-juatvt36qmrlq",
                "version": "2.1.4",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('48607a29-a26a-4abf-8078-a06dbdd174a4')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "SigninPasswordSpray_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.7",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "48607a29-a26a-4abf-8078-a06dbdd174a4",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies evidence of password spray activity against Microsoft Entra ID applications by looking for failures from multiple accounts from the same IP address within a time window. If the number of accounts breaches the threshold just once, all failures from the IP address within the time range are bought into the result. Details on whether there were successful authentications by the IP address within the time window are also included.\nThis can be an indicator that an attack was successful.\nThe default failure acccount threshold is 5, Default time window for failures is 20m and default look back window is 1 day\nNote: Due to the number of possible accounts involved in a password spray it is not possible to map identities to a custom entity.\nReferences: https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-sign-ins-error-codes.",
                                "displayName": "Password spray attack against Microsoft Entra ID application",
                                "enabled": false,
                                "query": "let timeRange = 1d;\nlet lookBack = 7d;\nlet authenticationWindow = 20m;\nlet authenticationThreshold = 5;\nlet isGUID = \"[0-9a-z]{8}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{4}-[0-9a-z]{12}\";\nlet failureCodes = dynamic([50053, 50126, 50055]); // invalid password, account is locked - too many sign ins, expired password\nlet successCodes = dynamic([0, 50055, 50057, 50155, 50105, 50133, 50005, 50076, 50079, 50173, 50158, 50072, 50074, 53003, 53000, 53001, 50129]);\n// Lookup up resolved identities from last 7 days\nlet aadFunc = (tableName:string){\nlet identityLookup = table(tableName)\n| where TimeGenerated >= ago(lookBack)\n| where not(Identity matches regex isGUID)\n| where isnotempty(UserId)\n| summarize by UserId, lu_UserDisplayName = UserDisplayName, lu_UserPrincipalName = UserPrincipalName, Type;\n// collect window threshold breaches\ntable(tableName)\n| where TimeGenerated > ago(timeRange)\n| where ResultType in(failureCodes)\n| summarize FailedPrincipalCount = dcount(UserPrincipalName) by bin(TimeGenerated, authenticationWindow), IPAddress, AppDisplayName, Type\n| where FailedPrincipalCount >= authenticationThreshold\n| summarize WindowThresholdBreaches = count() by IPAddress, Type\n| join kind= inner (\n// where we breached a threshold, join the details back on all failure data\ntable(tableName)\n| where TimeGenerated > ago(timeRange)\n| where ResultType in(failureCodes)\n| extend LocationDetails = todynamic(LocationDetails)\n| extend FullLocation = strcat(LocationDetails.countryOrRegion,'|', LocationDetails.state, '|', LocationDetails.city)\n| summarize StartTime = min(TimeGenerated), EndTime = max(TimeGenerated), make_set(ClientAppUsed,20), make_set(FullLocation,20), FailureCount = count() by IPAddress, AppDisplayName, UserPrincipalName, UserDisplayName, Identity, UserId, Type\n// lookup any unresolved identities\n| extend UnresolvedUserId = iff(Identity matches regex isGUID, UserId, \"\")\n| join kind= leftouter (\n identityLookup\n) on $left.UnresolvedUserId==$right.UserId\n| extend UserDisplayName=iff(isempty(lu_UserDisplayName), UserDisplayName, lu_UserDisplayName)\n| extend UserPrincipalName=iff(isempty(lu_UserPrincipalName), UserPrincipalName, lu_UserPrincipalName)\n| summarize StartTime = min(StartTime), EndTime = max(EndTime), make_set(UserPrincipalName,20), make_set(UserDisplayName,20), make_set(set_ClientAppUsed,20), make_set(set_FullLocation,20), make_list(FailureCount,20) by IPAddress, AppDisplayName, Type\n| extend FailedPrincipalCount = array_length(set_UserPrincipalName)\n) on IPAddress\n| project IPAddress, StartTime, EndTime, TargetedApplication=AppDisplayName, FailedPrincipalCount, UserPrincipalNames=set_UserPrincipalName, UserDisplayNames=set_UserDisplayName, ClientAppsUsed=set_set_ClientAppUsed, Locations=set_set_FullLocation, FailureCountByPrincipal=list_FailureCount, WindowThresholdBreaches, Type\n| join kind= inner (\ntable(tableName) // get data on success vs. failure history for each IP\n| where TimeGenerated > ago(timeRange)\n| where ResultType in(successCodes) or ResultType in(failureCodes) // success or failure types\n| summarize GlobalSuccessPrincipalCount = dcountif(UserPrincipalName, (ResultType in (successCodes))), ResultTypeSuccesses = make_set_if(ResultType, (ResultType in (successCodes))), GlobalFailPrincipalCount = dcountif(UserPrincipalName, (ResultType in (failureCodes))), ResultTypeFailures = make_set_if(ResultType, (ResultType in (failureCodes))) by IPAddress, Type\n| where GlobalFailPrincipalCount > GlobalSuccessPrincipalCount // where the number of failed principals is greater than success - eliminates FPs from IPs who authenticate successfully alot and as a side effect have alot of failures\n) on IPAddress\n| project-away IPAddress1\n| extend timestamp=StartTime\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P7D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1110"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '48607a29-a26a-4abf-8078-a06dbdd174a4'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 53",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '48607a29-a26a-4abf-8078-a06dbdd174a4')]",
                                "contentId": "48607a29-a26a-4abf-8078-a06dbdd174a4",
                                "kind": "AnalyticsRule",
                                "version": "1.0.7",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "48607a29-a26a-4abf-8078-a06dbdd174a4",
                "contentKind": "AnalyticsRule",
                "displayName": "Password spray attack against Microsoft Entra ID application",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-jf6sqdhlgc47i",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-jf6sqdhlgc47i",
                "version": "1.0.7",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('02ef8d7e-fc3a-4d86-a457-650fa571d8d2')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "SuccessThenFail_DiffIP_SameUserandApp_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "2.1.11",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "02ef8d7e-fc3a-4d86-a457-650fa571d8d2",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies when a user account successfully logs onto an Azure App from one IP and within 10 mins failed to logon to the same App via a different IP (may indicate a malicious attempt at password guessing with known account). \nUEBA added for context to gather all asoociated information assocaited with IP addressed initiating Faile Logon and affected user. \nPlease note, Failed logons from known IP ranges can be benign depending on the conditional access policies. In case of noisy behavior, consider tuning the source IP ranges after careful consideration",
                                "displayName": "Successful logon from IP and failure from a different IP",
                                "enabled": false,
                                "query": "let riskScoreCutoff = 3; //Adjust this score threshold based on volume of results. Activities identified as the most abnormal receive the highest scores (on a scale of 0-10)\nlet logonDiff = 10m; \nlet aadFunc = (tableName:string)\n{ \ntable(tableName)\n| where ResultType == \"0\"\n| where AppDisplayName !in (\"Office 365 Exchange Online\", \"Skype for Business Online\") // To remove false-positives, add more Apps to this array\n// ---------- Fix for SuccessBlock to also consider IPv6\n| extend SuccessIPv6Block = strcat(split(IPAddress, \":\")[0], \":\", split(IPAddress, \":\")[1], \":\", split(IPAddress, \":\")[2], \":\", split(IPAddress, \":\")[3])\n| extend SuccessIPv4Block = strcat(split(IPAddress, \".\")[0], \".\", split(IPAddress, \".\")[1])\n// ------------------\n| project SuccessLogonTime = TimeGenerated, UserPrincipalName, SuccessIPAddress = IPAddress, SuccessLocation = Location, AppDisplayName, SuccessIPBlock = iff(IPAddress contains \":\", strcat(split(IPAddress, \":\")[0], \":\", split(IPAddress, \":\")[1]), strcat(split(IPAddress, \".\")[0], \".\", split(IPAddress, \".\")[1])), Type\n| join kind= inner (\n    table(tableName)\n    | where ResultType !in (\"0\", \"50140\")\n    | where ResultDescription !~ \"Other\"\n    | where AppDisplayName !in (\"Office 365 Exchange Online\", \"Skype for Business Online\")\n    | project FailedLogonTime = TimeGenerated, UserPrincipalName, FailedIPAddress = IPAddress, FailedLocation = Location, AppDisplayName, ResultType, ResultDescription, Type \n) on UserPrincipalName, AppDisplayName\n| where SuccessLogonTime < FailedLogonTime and FailedLogonTime - SuccessLogonTime <= logonDiff and FailedIPAddress !startswith SuccessIPBlock\n| summarize FailedLogonTime = max(FailedLogonTime), SuccessLogonTime = max(SuccessLogonTime) by UserPrincipalName, SuccessIPAddress, SuccessLocation, AppDisplayName, FailedIPAddress, FailedLocation, ResultType, ResultDescription, Type\n| extend timestamp = SuccessLogonTime\n| extend UserPrincipalName = tolower(UserPrincipalName)};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nunion isfuzzy=true aadSignin, aadNonInt\n| extend Name = tostring(split(UserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName,'@',1)[0])\n// UEBA context below - make sure you have these 2 datatypes, otherwise the query will not work. If so, comment all that is below.\n| join kind=leftouter (\n    IdentityInfo\n    | summarize LatestReportTime = arg_max(TimeGenerated, *) by AccountUPN\n    | project AccountUPN, Tags, JobTitle, GroupMembership, AssignedRoles, UserType, IsAccountEnabled\n    | summarize\n        Tags = make_set(Tags, 1000),\n        GroupMembership = make_set(GroupMembership, 1000),\n        AssignedRoles = make_set(AssignedRoles, 1000),\n        UserType = make_set(UserType, 1000),\n        UserAccountControl = make_set(UserType, 1000)\n    by AccountUPN\n    | extend UserPrincipalName=tolower(AccountUPN)\n) on UserPrincipalName\n//Below it will be joined with BehaviorAnalytics table to the Failed IP Addresses\n| join kind=leftouter (\n    BehaviorAnalytics\n    | where ActivityType in (\"FailedLogOn\", \"LogOn\")\n    | where isnotempty(SourceIPAddress)\n    | project UsersInsights, DevicesInsights, ActivityInsights, InvestigationPriority, SourceIPAddress, UserName\n    | project-rename FailedIPAddress = SourceIPAddress, Name = UserName\n    | summarize\n        MaxInvestigationScore = max(InvestigationPriority)  // Only retrieve maximum Investigation Property score for both FailedIP and User\n    by FailedIPAddress, Name)\non FailedIPAddress, Name  // Joining on both IP and User so as to only return context associated with same user\n| extend UEBARiskScore = MaxInvestigationScore\n| project-away *1 // removing duplicate columns post outer join from output\n| where  UEBARiskScore > riskScoreCutoff\n| sort by UEBARiskScore desc\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "BehaviorAnalytics",
                                        "dataTypes": [
                                            "BehaviorAnalytics"
                                        ]
                                    },
                                    {
                                        "connectorId": "BehaviorAnalytics",
                                        "dataTypes": [
                                            "IdentityInfo"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess",
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1110",
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "SuccessIPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "FailedIPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '02ef8d7e-fc3a-4d86-a457-650fa571d8d2'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 54",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '02ef8d7e-fc3a-4d86-a457-650fa571d8d2')]",
                                "contentId": "02ef8d7e-fc3a-4d86-a457-650fa571d8d2",
                                "kind": "AnalyticsRule",
                                "version": "2.1.11",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "02ef8d7e-fc3a-4d86-a457-650fa571d8d2",
                "contentKind": "AnalyticsRule",
                "displayName": "Successful logon from IP and failure from a different IP",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-hihqrhnno7lbu",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-hihqrhnno7lbu",
                "version": "2.1.11",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "BehaviorAnalytics"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "BehaviorAnalytics"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "IdentityInfo"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "BehaviorAnalytics"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('3a3c6835-0086-40ca-b033-a93bf26d878f')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "SuspiciousAADJoinedDeviceUpdate_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.4",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "3a3c6835-0086-40ca-b033-a93bf26d878f",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query looks for suspicious updates to an Microsoft Entra ID joined device where the device name is changed and the device falls out of compliance.\nThis could occur when a threat actor updates the details of an Autopilot provisioned device using a stolen device ticket, in order to access certificates and keys.\nRef: https://dirkjanm.io/assets/raw/Insomnihack%20Breaking%20and%20fixing%20Azure%20AD%20device%20identity%20security.pdf",
                                "displayName": "Suspicious Entra ID Joined Device Update",
                                "enabled": false,
                                "query": "AuditLogs\n| where OperationName =~ \"Update device\"\n| mv-apply TargetResource=TargetResources on (\n    where TargetResource.type =~ \"Device\"\n    | extend ModifiedProperties = TargetResource.modifiedProperties\n    | extend DeviceId = TargetResource.id)\n| mv-apply Prop=ModifiedProperties on ( \n    where Prop.displayName =~ \"CloudDisplayName\"\n    | extend OldName = Prop.oldValue \n    | extend NewName = Prop.newValue)\n| mv-apply Prop=ModifiedProperties on ( \n    where Prop.displayName =~ \"IsCompliant\"\n    | extend OldComplianceState = Prop.oldValue  \n    | extend NewComplianceState = Prop.newValue)\n| mv-apply Prop=ModifiedProperties on ( \n    where Prop.displayName =~ \"TargetId.DeviceTrustType\"\n    | extend OldTrustType = Prop.oldValue  \n    | extend NewTrustType = Prop.newValue)\n| mv-apply Prop=ModifiedProperties on ( \n    where Prop.displayName =~ \"Included Updated Properties\" \n    | extend UpdatedProperties = Prop.newValue)\n| extend OldDeviceName = tostring(parse_json(tostring(OldName))[0])\n| extend NewDeviceName = tostring(parse_json(tostring(NewName))[0])\n| extend OldComplianceState = tostring(parse_json(tostring(OldComplianceState))[0])\n| extend NewComplianceState = tostring(parse_json(tostring(NewComplianceState))[0])\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend UpdatedPropertiesCount = array_length(split(UpdatedProperties, ','))\n| where OldDeviceName != NewDeviceName\n| where OldComplianceState =~ 'true' and NewComplianceState =~ 'false'\n// Most common is transferring from AAD Registered to AAD Joined - we just want AAD Joined devices\n| where NewTrustType == '\"AzureAd\"' and OldTrustType != '\"Workplace\"'\n// We can modify this value to tune FPs - more properties changed about the device beyond its name the more suspicious it could be\n| where UpdatedPropertiesCount > 1\n| project-reorder TimeGenerated, DeviceId, NewDeviceName, OldDeviceName, NewComplianceState, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingIpAddress, AADOperationType, OldTrustType, NewTrustType, UpdatedProperties, UpdatedPropertiesCount\n| extend InitiatedByName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatedByUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1528"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "HostName",
                                                "columnName": "NewDeviceName"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "HostName",
                                                "columnName": "OldDeviceName"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AzureID",
                                                "columnName": "DeviceId"
                                            }
                                        ],
                                        "entityType": "Host"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ],
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "This query looks for suspicious updates to an Microsoft Entra ID joined device where the device name is changed and the device falls out of compliance.\nIn this case {{OldDeviceName}} was renamed to {{NewDeviceName}} and {{UpdatedPropertiesCount}} properties were changed.\nThis could occur when a threat actor updates the details of an Autopilot provisioned device using a stolen device ticket, in order to access certificates and keys.\nRef: https://dirkjanm.io/assets/raw/Insomnihack%20Breaking%20and%20fixing%20Azure%20AD%20device%20identity%20security.pdf\n",
                                    "alertDisplayNameFormat": "Suspicious Entra ID Joined Device Update {{OldDeviceName}} renamed to {{NewDeviceName}} and {{UpdatedPropertiesCount}} properties changed"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3a3c6835-0086-40ca-b033-a93bf26d878f'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 55",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3a3c6835-0086-40ca-b033-a93bf26d878f')]",
                                "contentId": "3a3c6835-0086-40ca-b033-a93bf26d878f",
                                "kind": "AnalyticsRule",
                                "version": "1.0.4",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "3a3c6835-0086-40ca-b033-a93bf26d878f",
                "contentKind": "AnalyticsRule",
                "displayName": "Suspicious Entra ID Joined Device Update",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-kfoq4pk6hogqo",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-kfoq4pk6hogqo",
                "version": "1.0.4",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('3533f74c-9207-4047-96e2-0eb9383be587')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "SuspiciousOAuthApp_OfflineAccess_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.2",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "3533f74c-9207-4047-96e2-0eb9383be587",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when a user consents to provide a previously-unknown Azure application with offline access via OAuth.\nOffline access will provide the Azure App with access to the listed resources without requiring two-factor authentication.\nConsent to applications with offline access and read capabilities should be rare, especially as the knownApplications list is expanded. Public contributions to expand this filter are welcome!\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.",
                                "displayName": "Suspicious application consent for offline access",
                                "enabled": false,
                                "query": "let detectionTime = 1d;\nlet joinLookback = 14d;\nAuditLogs\n| where TimeGenerated > ago(detectionTime)\n| where LoggedByService =~ \"Core Directory\"\n| where Category =~ \"ApplicationManagement\"\n| where OperationName =~ \"Consent to application\"\n| where TargetResources has \"offline\"\n| mv-apply TargetResource=TargetResources on \n  (\n      where TargetResource.type =~ \"ServicePrincipal\"\n      | extend ModifiedProperties = TargetResource.modifiedProperties,\n               AppDisplayName = tostring(TargetResource.displayName),\n               AppClientId = tolower(tostring(TargetResource.id))\n  )\n| where AppClientId !in ((externaldata(knownAppClientId:string, knownAppDisplayName:string)[@\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/Microsoft.OAuth.KnownApplications.csv\"] with (format=\"csv\")))\n| mv-apply Properties=ModifiedProperties on \n  (\n      where Properties.displayName =~ \"ConsentAction.Permissions\"\n      | extend ConsentFull = tostring(Properties.newValue)\n      | extend ConsentFull = trim(@'\"',tostring(ConsentFull))\n  )\n| parse ConsentFull with * \"ConsentType: \" GrantConsentType \", Scope: \" GrantScope1 \"]\" *\n| where ConsentFull has \"offline_access\" and ConsentFull has_any (\"Files.Read\", \"Mail.Read\", \"Notes.Read\", \"ChannelMessage.Read\", \"Chat.Read\", \"TeamsActivity.Read\", \"Group.Read\", \"EWS.AccessAsUser.All\", \"EAS.AccessAsUser.All\")\n| where GrantConsentType != \"AllPrincipals\" // NOTE: we are ignoring if OAuth application was granted to all users via an admin - but admin due diligence should be audited occasionally\n| extend GrantInitiatedByAppName = tostring(InitiatedBy.app.displayName)\n| extend GrantInitiatedByAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend GrantInitiatedByUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend GrantInitiatedByAadUserId = tostring(InitiatedBy.user.id)\n| extend GrantIpAddress = iff(isnotempty(InitiatedBy.user.ipAddress), tostring(InitiatedBy.user.ipAddress), tostring(InitiatedBy.app.ipAddress))\n| extend GrantInitiatedBy = iff(isnotempty(GrantInitiatedByUserPrincipalName), GrantInitiatedByUserPrincipalName, GrantInitiatedByAppName)\n| extend GrantUserAgent = tostring(iff(AdditionalDetails[0].key =~ \"User-Agent\", AdditionalDetails[0].value, \"\"))\n| project TimeGenerated, GrantConsentType, GrantScope1, GrantInitiatedBy, AppDisplayName, GrantInitiatedByUserPrincipalName, GrantInitiatedByAadUserId, GrantInitiatedByAppName, GrantInitiatedByAppServicePrincipalId, GrantIpAddress, GrantUserAgent, AppClientId, OperationName, ConsentFull, CorrelationId\n| join kind = leftouter (AuditLogs\n| where TimeGenerated > ago(joinLookback)\n| where LoggedByService =~ \"Core Directory\"\n| where Category =~ \"ApplicationManagement\"\n| where OperationName =~ \"Add service principal\"\n| mv-apply TargetResource=TargetResources on \n  (\n      where TargetResource.type =~ \"ServicePrincipal\"\n      | extend ModifiedProperties = TargetResource.modifiedProperties,\n               AppClientId = tolower(TargetResource.id)\n  )\n| mv-apply ModifiedProperties=TargetResource.modifiedProperties on \n   (\n      where ModifiedProperties.displayName =~ \"AppAddress\" and ModifiedProperties.newValue has \"AddressType\"\n      | extend AppReplyURLs = ModifiedProperties.newValue\n   )\n | distinct AppClientId, tostring(AppReplyURLs)\n)\non AppClientId\n| join kind = innerunique (AuditLogs\n| where TimeGenerated > ago(joinLookback)\n| where LoggedByService =~ \"Core Directory\"\n| where Category =~ \"ApplicationManagement\"\n| where OperationName =~ \"Add OAuth2PermissionGrant\" or OperationName =~ \"Add delegated permission grant\"\n | mv-apply TargetResource=TargetResources on \n  (\n      where TargetResource.type =~ \"ServicePrincipal\" and array_length(TargetResource.modifiedProperties) > 0 and isnotnull(TargetResource.displayName)\n      | extend GrantAuthentication = tostring(TargetResource.displayName)\n  )\n| extend GrantOperation = OperationName\n| project GrantAuthentication, GrantOperation, CorrelationId\n) on CorrelationId\n| project TimeGenerated, GrantConsentType, GrantScope1, GrantInitiatedBy, AppDisplayName, AppReplyURLs, GrantInitiatedByUserPrincipalName, GrantInitiatedByAadUserId, GrantInitiatedByAppName, GrantInitiatedByAppServicePrincipalId, GrantIpAddress, GrantUserAgent, AppClientId, GrantAuthentication, OperationName, GrantOperation, CorrelationId, ConsentFull\n| extend Name = tostring(split(GrantInitiatedByUserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(GrantInitiatedByUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P14D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess"
                                ],
                                "techniques": [
                                    "T1528"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "GrantInitiatedByUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "GrantInitiatedByAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "GrantInitiatedByAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "GrantIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3533f74c-9207-4047-96e2-0eb9383be587'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 56",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3533f74c-9207-4047-96e2-0eb9383be587')]",
                                "contentId": "3533f74c-9207-4047-96e2-0eb9383be587",
                                "kind": "AnalyticsRule",
                                "version": "1.0.2",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "3533f74c-9207-4047-96e2-0eb9383be587",
                "contentKind": "AnalyticsRule",
                "displayName": "Suspicious application consent for offline access",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-lkz5adhidbegw",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-lkz5adhidbegw",
                "version": "1.0.2",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('6852d9da-8015-4b95-8ecf-d9572ee0395d')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "SuspiciousServicePrincipalcreationactivity_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.3",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "6852d9da-8015-4b95-8ecf-d9572ee0395d",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This alert will detect creation of an SPN, permissions granted, credentials created, activity and deletion of the SPN in a time frame (default 10 minutes)",
                                "displayName": "Suspicious Service Principal creation activity",
                                "enabled": false,
                                "query": "let queryfrequency = 1h;\nlet wait_for_deletion = 10m;\nlet account_created =\n  AuditLogs \n  | where ActivityDisplayName == \"Add service principal\"\n  | where Result == \"success\"\n  | extend AppID = tostring(AdditionalDetails[1].value)\n  | extend creationTime = ActivityDateTime\n  | extend CreatorUserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\n  | extend CreatorIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress);\nlet account_activity =\n  AADServicePrincipalSignInLogs\n  | extend Activities = pack(\"ActivityTime\", TimeGenerated ,\"IpAddress\", IPAddress, \"ResourceDisplayName\", ResourceDisplayName)\n  | extend AppID = AppId\n  | summarize make_list(Activities) by AppID;\nlet account_deleted =\n  AuditLogs \n  | where OperationName == \"Remove service principal\"\n  | where Result == \"success\"\n  | extend AppID = tostring(AdditionalDetails[1].value)\n  | extend deletionTime = ActivityDateTime\n  | extend DeleterUserPrincipalName = tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)\n  | extend DeleterIPAddress = tostring(parse_json(tostring(InitiatedBy.user)).ipAddress);\nlet account_credentials =\n  AuditLogs\n  | where OperationName has_all (\"Update application\", \"Certificates and secrets management\")\n  | where Result == \"success\"\n  | extend AppID = tostring(AdditionalDetails[1].value)\n  | extend credentialCreationTime = ActivityDateTime;\nlet roles_assigned =\n  AuditLogs\n  | where ActivityDisplayName == \"Add app role assignment to service principal\"\n  | extend AppID = tostring(TargetResources[1].displayName)\n  | extend AssignedRole =  iff(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].displayName)==\"AppRole.Value\", tostring(parse_json(tostring(parse_json(tostring(TargetResources[0].modifiedProperties))[1].newValue))),\"\")\n  | extend AssignedRoles = pack(\"Role\", AssignedRole)\n  | summarize make_list(AssignedRoles) by AppID;\naccount_created\n| where TimeGenerated between (ago(wait_for_deletion+queryfrequency)..ago(wait_for_deletion))\n| join kind= inner (account_activity) on AppID\n| join kind= inner (account_deleted) on AppID\n| join kind= inner (account_credentials) on AppID\n| join kind= inner (roles_assigned) on AppID\n| where deletionTime - creationTime between (time(0s)..wait_for_deletion)\n| extend AliveTime = deletionTime - creationTime\n| project AADTenantId, AppID, creationTime, deletionTime, CreatorUserPrincipalName, DeleterUserPrincipalName, CreatorIPAddress, DeleterIPAddress, list_Activities, list_AssignedRoles, AliveTime\n| extend CreatorName = tostring(split(CreatorUserPrincipalName, \"@\")[0]), CreatorUPNSuffix = tostring(split(CreatorUserPrincipalName, \"@\")[1])\n| extend DeleterName = tostring(split(DeleterUserPrincipalName, \"@\")[0]), DeleterSuffix = tostring(split(DeleterUserPrincipalName, \"@\")[1])\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT70M",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs",
                                            "AADServicePrincipalSignInLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "CredentialAccess",
                                    "PrivilegeEscalation",
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1528"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "CreatorUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "CreatorName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "CreatorUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "DeleterUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "DeleterName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "DeleterSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "CreatorIPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "DeleterIPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6852d9da-8015-4b95-8ecf-d9572ee0395d'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 57",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6852d9da-8015-4b95-8ecf-d9572ee0395d')]",
                                "contentId": "6852d9da-8015-4b95-8ecf-d9572ee0395d",
                                "kind": "AnalyticsRule",
                                "version": "1.0.3",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "6852d9da-8015-4b95-8ecf-d9572ee0395d",
                "contentKind": "AnalyticsRule",
                "displayName": "Suspicious Service Principal creation activity",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-qut7sigtl273m",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-qut7sigtl273m",
                "version": "1.0.3",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADServicePrincipalSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('aec77100-25c5-4254-a20a-8027ed92c46c')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "SuspiciousSignInFollowedByMFAModification_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "aec77100-25c5-4254-a20a-8027ed92c46c",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This query looks uses Microsoft Sentinel's UEBA features to look for suspicious logons followed by modifications to MFA settings by that user.",
                                "displayName": "Suspicious Sign In Followed by MFA Modification",
                                "enabled": false,
                                "query": "let PriorityScore = 9;\nBehaviorAnalytics\n| where ActionType == \"Sign-in\"\n| where InvestigationPriority > PriorityScore\n| extend UserPrincipalName = tolower(UserPrincipalName)\n| extend LogOnTime = TimeGenerated\n| join kind=inner (AuditLogs\n| where Category =~ \"UserManagement\" \n| where OperationName in~ (\"Admin registered security info\", \"Admin updated security info\", \"Admin deleted security info\", \"User registered security info\", \"User changed default security info\", \"User deleted security info\",\"User registered all required security info\",\"User started security info registration\") \n| extend InitiatorUPN = tolower(tostring(InitiatedBy.user.userPrincipalName))\n| extend InitiatorID = tostring(InitiatedBy.user.id)\n| extend FromIP = tostring(InitiatedBy.user.ipAddress) \n| extend TargetUPN = tolower(tostring(TargetResources[0].userPrincipalName))\n| extend TargetId = tostring(TargetResources[0].id)\n| extend MFAModTime = TimeGenerated\n| where isnotempty(InitiatorUPN)) on $left.UserPrincipalName == $right.InitiatorUPN\n| where MFAModTime between((LogOnTime-30m)..(LogOnTime+1h))\n| extend InitiatorName = tostring(split(InitiatorUPN, \"@\")[0]), InitiatorUPNSuffix = tostring(split(InitiatorUPN, \"@\")[1]), TargetName = tostring(split(TargetUPN, \"@\")[0]), TargetUPNSuffix = tostring(split(TargetUPN, \"@\")[1])\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "BehaviorAnalytics",
                                        "dataTypes": [
                                            "BehaviorAnalytics"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "DefenseEvasion"
                                ],
                                "subTechniques": [
                                    "T1078.004",
                                    "T1556.006"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1556"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatorUPN"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatorName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatorUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatorID"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "TargetUPN"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "TargetId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "FromIP"
                                            }
                                        ],
                                        "entityType": "IP"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "SourceIPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "This query looks uses Microsoft Sentinel's UEBA features to look for suspicious logons followed by modifications to MFA settings by that user.\nIn this case {{InitiatorUPN}} logged in followed by a modification to MFA settings for {{TargetUPN}}.\nThe sign in was from {{SourceIPAddress}}.\n",
                                    "alertDisplayNameFormat": "Suspicious Sign In by {{InitiatorUPN}} Followed by MFA Modification to {{TargetUPN}}"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'aec77100-25c5-4254-a20a-8027ed92c46c'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 58",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'aec77100-25c5-4254-a20a-8027ed92c46c')]",
                                "contentId": "aec77100-25c5-4254-a20a-8027ed92c46c",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "aec77100-25c5-4254-a20a-8027ed92c46c",
                "contentKind": "AnalyticsRule",
                "displayName": "Suspicious Sign In Followed by MFA Modification",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-24bbfm2bofxvs",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-24bbfm2bofxvs",
                "version": "1.0.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "BehaviorAnalytics"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "BehaviorAnalytics"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('acc4c247-aaf7-494b-b5da-17f18863878a')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "UnusualGuestActivity_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.3",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "acc4c247-aaf7-494b-b5da-17f18863878a",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "By default guests have capability to invite more external guest users, guests also can do suspicious Microsoft Entra ID enumeration. This detection look at guest users, who have been invited or have invited recently, who also are logging via various PowerShell CLI.\nRef : 'https://danielchronlund.com/2021/11/18/scary-azure-ad-tenant-enumeration-using-regular-b2b-guest-accounts/",
                                "displayName": "External guest invitation followed by Microsoft Entra ID PowerShell signin",
                                "enabled": false,
                                "query": "let queryfrequency = 1h;\nlet queryperiod = 1d;\nAuditLogs\n| where TimeGenerated > ago(queryperiod)\n| where OperationName in (\"Invite external user\", \"Bulk invite users - started (bulk)\", \"Invite external user with reset invitation status\")\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend InitiatedBy = iff(isnotempty(InitiatingUserPrincipalName), InitiatingUserPrincipalName, InitiatingAppName)\n// Uncomment the following line to filter events where the inviting user was a guest user\n//| where InitiatedBy has_any (\"live.com#\", \"#EXT#\")\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"User\"\n      | extend InvitedUser = tostring(TargetResource.userPrincipalName)\n  )\n| mv-expand UserToCompare = pack_array(InitiatedBy, InvitedUser) to typeof(string)\n| where UserToCompare has_any (\"live.com#\", \"#EXT#\")\n| extend\n    parsedUser = replace_string(tolower(iff(UserToCompare startswith \"live.com#\", tostring(split(UserToCompare, \"#\")[1]), tostring(split(UserToCompare, \"#EXT#\")[0]))), \"@\", \"_\"),\n    InvitationTime = TimeGenerated\n| join (\n    (union isfuzzy=true SigninLogs, AADNonInteractiveUserSignInLogs)\n    | where TimeGenerated > ago(queryfrequency)\n    | where UserType != \"Member\"\n    | where AppId has_any                       // This web may contain a list of these apps: https://msshells.net/\n        (\"1b730954-1685-4b74-9bfd-dac224a7b894\",// Azure Active Directory PowerShell\n         \"04b07795-8ddb-461a-bbee-02f9e1bf7b46\",// Microsoft Azure CLI\n         \"1950a258-227b-4e31-a9cf-717495945fc2\",// Microsoft Azure PowerShell\n         \"a0c73c16-a7e3-4564-9a95-2bdf47383716\",// Microsoft Exchange Online Remote PowerShell\n         \"fb78d390-0c51-40cd-8e17-fdbfab77341b\",// Microsoft Exchange REST API Based Powershell\n         \"d1ddf0e4-d672-4dae-b554-9d5bdfd93547\",// Microsoft Intune PowerShell\n         \"9bc3ab49-b65d-410a-85ad-de819febfddc\",// Microsoft SharePoint Online Management Shell\n         \"12128f48-ec9e-42f0-b203-ea49fb6af367\",// MS Teams Powershell Cmdlets\n         \"23d8f6bd-1eb0-4cc2-a08c-7bf525c67bcd\",// Power BI PowerShell\n         \"31359c7f-bd7e-475c-86db-fdb8c937548e\",// PnP Management Shell\n         \"90f610bf-206d-4950-b61d-37fa6fd1b224\",// Aadrm Admin Powershell\n         \"14d82eec-204b-4c2f-b7e8-296a70dab67e\",// Microsoft Graph PowerShell\n         \"9cee029c-6210-4654-90bb-17e6e9d36617\" // Power Platform CLI - pac\"\n        )\n    | summarize arg_min(TimeGenerated, *) by UserPrincipalName\n    | extend\n        parsedUser = replace_string(UserPrincipalName, \"@\", \"_\"),\n        SigninTime = TimeGenerated\n    )\n    on parsedUser\n| project InvitationTime, InitiatedBy, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingIpAddress, OperationName, InvitedUser, SigninTime, SigninCategory = Category1, SigninUserPrincipalName = UserPrincipalName, AppDisplayName, ResourceDisplayName, UserAgent, InvitationAdditionalDetails = AdditionalDetails, InvitationTargetResources = TargetResources\n| extend InvitedUserName = tostring(split(InvitedUser,'@',0)[0]), InvitedUserUPNSuffix = tostring(split(InvitedUser,'@',1)[0]), \n         InitiatedByName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatedByUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P1D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "Persistence",
                                    "Discovery"
                                ],
                                "subTechniques": [
                                    "T1078.004",
                                    "T1136.003",
                                    "T1087.004"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1136",
                                    "T1087"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InvitedUser"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InvitedUserName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InvitedUserUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatedByName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatedByUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'acc4c247-aaf7-494b-b5da-17f18863878a'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 59",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'acc4c247-aaf7-494b-b5da-17f18863878a')]",
                                "contentId": "acc4c247-aaf7-494b-b5da-17f18863878a",
                                "kind": "AnalyticsRule",
                                "version": "1.0.3",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "acc4c247-aaf7-494b-b5da-17f18863878a",
                "contentKind": "AnalyticsRule",
                "displayName": "External guest invitation followed by Microsoft Entra ID PowerShell signin",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-ho6fx3jykfpzq",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-ho6fx3jykfpzq",
                "version": "1.0.3",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('3a9d5ede-2b9d-43a2-acc4-d272321ff77c')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "UserAccounts-CABlockedSigninSpikes_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "2.0.5",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "3a9d5ede-2b9d-43a2-acc4-d272321ff77c",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": " Identifies spike in failed sign-ins from user accounts due to conditional access policied.\nSpike is determined based on Time series anomaly which will look at historical baseline values.\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-user-accounts#monitoring-for-failed-unusual-sign-ins\nThis query has also been updated to include UEBA logs IdentityInfo and BehaviorAnalytics for contextual information around the results.",
                                "displayName": "User Accounts - Sign in Failure due to CA Spikes",
                                "enabled": false,
                                "query": "let riskScoreCutoff = 20; //Adjust this based on volume of results\nlet starttime = 14d;\nlet timeframe = 1d;\nlet scorethreshold = 3;\nlet baselinethreshold = 50;\nlet aadFunc = (tableName:string){\n  // Failed Signins attempts with reasoning related to conditional access policies.\n  table(tableName)\n  | where TimeGenerated between (startofday(ago(starttime))..startofday(now()))\n  | where ResultDescription has_any (\"conditional access\", \"CA\") or ResultType in (50005, 50131, 53000, 53001, 53002, 52003, 70044)\n  | extend UserPrincipalName = tolower(UserPrincipalName)\n  | extend timestamp = TimeGenerated, AccountCustomEntity = UserPrincipalName\n};\nlet aadSignin = aadFunc(\"SigninLogs\");\nlet aadNonInt = aadFunc(\"AADNonInteractiveUserSignInLogs\");\nlet allSignins = union isfuzzy=true aadSignin, aadNonInt;\nlet TimeSeriesAlerts = \nallSignins\n| make-series DailyCount=count() on TimeGenerated from startofday(ago(starttime)) to startofday(now()) step 1d by UserPrincipalName\n| extend (anomalies, score, baseline) = series_decompose_anomalies(DailyCount, scorethreshold, -1, 'linefit')\n| mv-expand DailyCount to typeof(double), TimeGenerated to typeof(datetime), anomalies to typeof(double), score to typeof(double), baseline to typeof(long)\n// Filtering low count events per baselinethreshold\n| where anomalies > 0 and baseline > baselinethreshold\n| extend AnomalyHour = TimeGenerated\n| project UserPrincipalName, AnomalyHour, TimeGenerated, DailyCount, baseline, anomalies, score;\n// Filter the alerts for specified timeframe\nTimeSeriesAlerts\n| where TimeGenerated > startofday(ago(timeframe))\n| join kind=inner ( \n  allSignins\n  | where TimeGenerated > startofday(ago(timeframe))\n  // create a new column and round to hour\n  | extend DateHour = bin(TimeGenerated, 1h)\n  | summarize PartialFailedSignins = count(), LatestAnomalyTime = arg_max(TimeGenerated, *) by bin(TimeGenerated, 1h), OperationName, Category, ResultType, ResultDescription, UserPrincipalName, UserDisplayName, AppDisplayName, ClientAppUsed, IPAddress, ResourceDisplayName\n) on UserPrincipalName, $left.AnomalyHour == $right.DateHour\n| project LatestAnomalyTime, OperationName, Category, UserPrincipalName, UserDisplayName, ResultType, ResultDescription, AppDisplayName, ClientAppUsed, UserAgent, IPAddress, Location, AuthenticationRequirement, ConditionalAccessStatus, ResourceDisplayName, PartialFailedSignins, TotalFailedSignins = DailyCount, baseline, anomalies, score\n| extend timestamp = LatestAnomalyTime, Name = tostring(split(UserPrincipalName,'@',0)[0]), UPNSuffix = tostring(split(UserPrincipalName,'@',1)[0])\n| extend UserPrincipalName = tolower(UserPrincipalName)\n| join kind=leftouter (\n    IdentityInfo\n    | summarize LatestReportTime = arg_max(TimeGenerated, *) by AccountUPN\n    | project AccountUPN, Tags, JobTitle, GroupMembership, AssignedRoles, UserType, IsAccountEnabled\n    | summarize\n        Tags = make_set(Tags, 1000),\n        GroupMembership = make_set(GroupMembership, 1000),\n        AssignedRoles = make_set(AssignedRoles, 1000),\n        UserType = make_set(UserType, 1000),\n        UserAccountControl = make_set(UserType, 1000)\n    by AccountUPN\n    | extend UserPrincipalName=tolower(AccountUPN)\n) on UserPrincipalName\n| join kind=leftouter (\n    BehaviorAnalytics\n    | where ActivityType in (\"FailedLogOn\", \"LogOn\")\n    | where isnotempty(SourceIPAddress)\n    | project UsersInsights, DevicesInsights, ActivityInsights, InvestigationPriority, SourceIPAddress\n    | project-rename IPAddress = SourceIPAddress\n    | summarize\n        UsersInsights = make_set(UsersInsights, 1000),\n        DevicesInsights = make_set(DevicesInsights, 1000),\n        IPInvestigationPriority = sum(InvestigationPriority)\n    by IPAddress)\non IPAddress\n| extend UEBARiskScore = IPInvestigationPriority\n| where UEBARiskScore > riskScoreCutoff\n| sort by UEBARiskScore desc \n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P14D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AADNonInteractiveUserSignInLogs"
                                        ]
                                    },
                                    {
                                        "connectorId": "BehaviorAnalytics",
                                        "dataTypes": [
                                            "BehaviorAnalytics"
                                        ]
                                    },
                                    {
                                        "connectorId": "BehaviorAnalytics",
                                        "dataTypes": [
                                            "IdentityInfo"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "subTechniques": [
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "UserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "Name"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "UPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "IPAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3a9d5ede-2b9d-43a2-acc4-d272321ff77c'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 60",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3a9d5ede-2b9d-43a2-acc4-d272321ff77c')]",
                                "contentId": "3a9d5ede-2b9d-43a2-acc4-d272321ff77c",
                                "kind": "AnalyticsRule",
                                "version": "2.0.5",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "3a9d5ede-2b9d-43a2-acc4-d272321ff77c",
                "contentKind": "AnalyticsRule",
                "displayName": "User Accounts - Sign in Failure due to CA Spikes",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-zunqzuvmpmk6g",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-zunqzuvmpmk6g",
                "version": "2.0.5",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "SigninLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "AADNonInteractiveUserSignInLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "BehaviorAnalytics"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "BehaviorAnalytics"
                        },
                        {
                            "contentKind": "DataType",
                            "contentId": "IdentityInfo"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "BehaviorAnalytics"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('4d94d4a9-dc96-410a-8dea-4d4d4584188b')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "UseraddedtoPrivilgedGroups_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.6",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "4d94d4a9-dc96-410a-8dea-4d4d4584188b",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "This will alert when a user is added to any of the Privileged Groups.\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.\nFor Administrator role permissions in Microsoft Entra ID please see https://docs.microsoft.com/azure/active-directory/users-groups-roles/directory-assign-admin-roles",
                                "displayName": "User added to Microsoft Entra ID Privileged Groups",
                                "enabled": false,
                                "query": "let OperationList = dynamic([\"Add member to role\",\"Add member to role in PIM requested (permanent)\"]);\nlet PrivilegedGroups = dynamic([\"UserAccountAdmins\",\"PrivilegedRoleAdmins\",\"TenantAdmins\"]);\nAuditLogs\n//| where LoggedByService =~ \"Core Directory\"\n| where Category =~ \"RoleManagement\"\n| where OperationName in~ (OperationList)\n| mv-apply TargetResource = TargetResources on \n  (\n      where TargetResource.type =~ \"User\"\n      | extend TargetUserPrincipalName = tostring(TargetResource.userPrincipalName),\n               modProps = TargetResource.modifiedProperties\n  )\n| mv-apply Property = modProps on \n  (\n      where Property.displayName =~ \"Role.WellKnownObjectName\"\n      | extend DisplayName = trim('\"',tostring(Property.displayName)),\n               GroupName = trim('\"',tostring(Property.newValue))\n  )\n| extend InitiatingAppId = InitiatedBy.app.appId\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingAppServicePrincipalName = tostring(InitiatedBy.app.servicePrincipalName)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend InitiatingUserRoles = InitiatedBy.user.roles\n| where GroupName in~ (PrivilegedGroups)\n// If you don't want to alert for operations from PIM, remove below filtering for MS-PIM.\n//| where InitiatingAppName != \"MS-PIM\"\n| project TimeGenerated, AADOperationType, Category, OperationName, AADTenantId, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppId, InitiatingAppName, InitiatingAppServicePrincipalName, InitiatingAppServicePrincipalId, InitiatingIpAddress, DisplayName, GroupName, InitiatingUserRoles, TargetUserPrincipalName\n| extend AccountName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), AccountUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n| extend TargetName = tostring(split(TargetUserPrincipalName,'@',0)[0]), TargetUPNSuffix = tostring(split(TargetUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "PT1H",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence",
                                    "PrivilegeEscalation"
                                ],
                                "techniques": [
                                    "T1098",
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "AccountName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "AccountUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "TargetUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4d94d4a9-dc96-410a-8dea-4d4d4584188b'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 61",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4d94d4a9-dc96-410a-8dea-4d4d4584188b')]",
                                "contentId": "4d94d4a9-dc96-410a-8dea-4d4d4584188b",
                                "kind": "AnalyticsRule",
                                "version": "1.0.6",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "4d94d4a9-dc96-410a-8dea-4d4d4584188b",
                "contentKind": "AnalyticsRule",
                "displayName": "User added to Microsoft Entra ID Privileged Groups",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-42szwx6ymsnmo",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-42szwx6ymsnmo",
                "version": "1.0.6",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('746ddb63-f51b-4563-b449-a8b13cf302ec')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "UserAssignedNewPrivilegedRole_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.1",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "746ddb63-f51b-4563-b449-a8b13cf302ec",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies when a new eligible or active privileged role is assigned to a user. Does not alert on PIM activations. Any account eligible for a role is now being given privileged access. If the assignment is unexpected or into a role that isn't the responsibility of the account holder, investigate.\nRef : https://docs.microsoft.com/azure/active-directory/fundamentals/security-operations-privileged-accounts#things-to-monitor-1",
                                "displayName": "User Assigned New Privileged Role",
                                "enabled": false,
                                "query": "AuditLogs\n| where Category =~ \"RoleManagement\"\n| where AADOperationType in (\"Assign\", \"AssignEligibleRole\", \"CreateRequestGrantedRole\", \"CreateRequestPermanentEligibleRole\", \"CreateRequestPermanentGrantedRole\")\n| where ActivityDisplayName has_any (\"Add eligible member to role\", \"Add member to role\")\n| mv-apply TargetResourceSubject = TargetResources on \n  (\n      where TargetResourceSubject.type in~ (\"User\", \"ServicePrincipal\")\n      | extend Target = iff(TargetResourceSubject.type =~ \"ServicePrincipal\", tostring(TargetResourceSubject.displayName), tostring(TargetResourceSubject.userPrincipalName)),\n               subjectProps = TargetResourceSubject.modifiedProperties\n  )\n| mv-apply TargetResourceRole = TargetResources on \n  (\n    // mimic modifiedProperties so we can use the same logic to get the role name regardless of where it comes from\n    where TargetResourceRole.type in~ (\"Role\")\n    | extend roleProps = pack_array(bag_pack(\"displayName\",\"Role.DisplayName\", \"newValue\", TargetResourceRole.displayName))\n  )\n| mv-apply Property = iff(array_length(subjectProps) > 0, subjectProps, roleProps) on \n  ( \n    where Property.displayName =~ \"Role.DisplayName\"\n      | extend RoleName = trim('\"',tostring(Property.newValue))\n  )\n| where RoleName contains \"Admin\"\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend Initiator = iif(isnotempty(InitiatingAppName), InitiatingAppName, InitiatingUserPrincipalName)\n// Comment below to alert for PIM activations\n| where Initiator != \"MS-PIM\"\n| summarize by bin(TimeGenerated, 1h), OperationName, RoleName, Target, Initiator, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingIpAddress, Result\n| extend TargetName = tostring(split(Target,'@',0)[0]), TargetUPNSuffix = tostring(split(Target,'@',1)[0]), InitiatorName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatorUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "PT2H",
                                "queryPeriod": "PT2H",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "subTechniques": [
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Target"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatorName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatorUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '746ddb63-f51b-4563-b449-a8b13cf302ec'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 62",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '746ddb63-f51b-4563-b449-a8b13cf302ec')]",
                                "contentId": "746ddb63-f51b-4563-b449-a8b13cf302ec",
                                "kind": "AnalyticsRule",
                                "version": "1.0.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "746ddb63-f51b-4563-b449-a8b13cf302ec",
                "contentKind": "AnalyticsRule",
                "displayName": "User Assigned New Privileged Role",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-masyxok7q3tks",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-masyxok7q3tks",
                "version": "1.0.1",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('050b9b3d-53d0-4364-a3da-1b678b8211ec')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "UserAssignedPrivilegedRole_AnalyticalRules Analytics Rule with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "050b9b3d-53d0-4364-a3da-1b678b8211ec",
                            "apiVersion": "2023-02-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies when a privileged role is assigned to a new user. Any account eligible for a role is now being given privileged access. If the assignment is unexpected or into a role that isn't the responsibility of the account holder, investigate.",
                                "displayName": "New User Assigned to Privileged Role",
                                "enabled": false,
                                "query": "// Define the start and end times based on input values\nlet starttime = now()-1h;\nlet endtime = now();\n// Set a lookback period of 14 days\nlet lookback = starttime - 14d;\n// Define a reusable function to query audit logs\nlet awsFunc = (start:datetime, end:datetime) {\n  AuditLogs\n  | where TimeGenerated between (start..end)\n  | where Category =~ \"RoleManagement\"\n  | where AADOperationType in (\"Assign\", \"AssignEligibleRole\")\n  | where ActivityDisplayName has_any (\"Add eligible member to role\", \"Add member to role\")\n  | mv-apply TargetResource = TargetResources on\n    (\n      where TargetResource.type in~ (\"User\", \"ServicePrincipal\")\n      | extend Target = iff(TargetResource.type =~ \"ServicePrincipal\", tostring(TargetResource.displayName), tostring(TargetResource.userPrincipalName)),\n      props = TargetResource.modifiedProperties\n    )\n  | mv-apply Property = props on\n    (\n      where Property.displayName =~ \"Role.DisplayName\"\n      | extend RoleName = trim('\"', tostring(Property.newValue))\n    )\n  | where RoleName contains \"Admin\" and Result == \"success\"\n};\n// Query for audit events in the current day\nlet EventInfo_CurrentDay = awsFunc(starttime, endtime);\n// Query for audit events in the historical period (lookback)\nlet EventInfo_historical = awsFunc(lookback, starttime);\n// Find unseen events by performing a left anti-join\nlet EventInfo_Unseen = (EventInfo_CurrentDay\n  | join kind=leftanti(EventInfo_historical) on Target, RoleName, OperationName\n);\n// Extend and clean up the results\nEventInfo_Unseen\n| extend InitiatingAppName = tostring(InitiatedBy.app.displayName)\n| extend InitiatingAppServicePrincipalId = tostring(InitiatedBy.app.servicePrincipalId)\n| extend InitiatingUserPrincipalName = tostring(InitiatedBy.user.userPrincipalName)\n| extend InitiatingAadUserId = tostring(InitiatedBy.user.id)\n| extend InitiatingIpAddress = tostring(iff(isnotempty(InitiatedBy.user.ipAddress), InitiatedBy.user.ipAddress, InitiatedBy.app.ipAddress))\n| extend Initiator = iif(isnotempty(InitiatingAppName), InitiatingAppName, InitiatingUserPrincipalName)\n// You can uncomment the lines below to filter out PIM activations\n// | where Initiator != \"MS-PIM\"\n// | summarize StartTime=min(TimeGenerated), EndTime=min(TimeGenerated) by OperationName, RoleName, Target, Initiator, Result\n// Project specific columns and split them for further analysis\n| project TimeGenerated, OperationName, RoleName, Target, Initiator, InitiatingUserPrincipalName, InitiatingAadUserId, InitiatingAppName, InitiatingAppServicePrincipalId, InitiatingIpAddress, Result\n| extend TargetName = tostring(split(Target,'@',0)[0]), TargetUPNSuffix = tostring(split(Target,'@',1)[0]), InitiatorName = tostring(split(InitiatingUserPrincipalName,'@',0)[0]), InitiatorUPNSuffix = tostring(split(InitiatingUserPrincipalName,'@',1)[0])\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P14D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Persistence"
                                ],
                                "subTechniques": [
                                    "T1078.004"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "Target"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "TargetName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "TargetUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "FullName",
                                                "columnName": "InitiatingUserPrincipalName"
                                            },
                                            {
                                                "identifier": "Name",
                                                "columnName": "InitiatorName"
                                            },
                                            {
                                                "identifier": "UPNSuffix",
                                                "columnName": "InitiatorUPNSuffix"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAadUserId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "AadUserId",
                                                "columnName": "InitiatingAppServicePrincipalId"
                                            }
                                        ],
                                        "entityType": "Account"
                                    },
                                    {
                                        "fieldMappings": [
                                            {
                                                "identifier": "Address",
                                                "columnName": "InitiatingIpAddress"
                                            }
                                        ],
                                        "entityType": "IP"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '050b9b3d-53d0-4364-a3da-1b678b8211ec'),'/'))))]",
                            "properties": {
                                "description": "Microsoft Entra ID Analytics Rule 63",
                                "parentId": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '050b9b3d-53d0-4364-a3da-1b678b8211ec')]",
                                "contentId": "050b9b3d-53d0-4364-a3da-1b678b8211ec",
                                "kind": "AnalyticsRule",
                                "version": "1.1.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "050b9b3d-53d0-4364-a3da-1b678b8211ec",
                "contentKind": "AnalyticsRule",
                "displayName": "New User Assigned to Privileged Role",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-ar-bmsco6wpaltog",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-ar-bmsco6wpaltog",
                "version": "1.1.0",
                "isDeprecated": false,
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "contentKind": "DataType",
                            "contentId": "AuditLogs"
                        },
                        {
                            "contentKind": "DataConnector",
                            "contentId": "AzureActiveDirectory"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring('Block-AADUser-alert-trigger')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Block-EntraIDUser-Alert Playbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "Block-EntraIDUser-Alert",
                            "type": "string"
                        }
                    },
                    "variables": {
                        "AzureADConnectionName": "[[concat('azuread-', parameters('PlaybookName'))]",
                        "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
                        "Office365ConnectionName": "[[concat('office365-', parameters('PlaybookName'))]",
                        "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuread')]",
                        "_connection-1": "[[variables('connection-1')]",
                        "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-2": "[[variables('connection-2')]",
                        "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
                        "_connection-3": "[[variables('connection-3')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('AzureADConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[variables('AzureADConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-1')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('MicrosoftSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                                "parameterValueType": "Alternative",
                                "api": {
                                    "id": "[[variables('_connection-2')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('Office365ConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[variables('Office365ConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-3')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Logic/workflows",
                            "apiVersion": "2017-07-01",
                            "name": "[[parameters('PlaybookName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "hidden-SentinelTemplateName": "Block-AADUser_alert",
                                "hidden-SentinelTemplateVersion": "1.1",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('AzureADConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]"
                            ],
                            "properties": {
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "Microsoft_Sentinel_alert": {
                                            "type": "ApiConnectionWebhook",
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/subscribe"
                                            }
                                        }
                                    },
                                    "actions": {
                                        "Alert_-_Get_incident": {
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                                            }
                                        },
                                        "Entities_-_Get_Accounts": {
                                            "runAfter": {
                                                "Alert_-_Get_incident": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@triggerBody()?['Entities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/account"
                                            }
                                        },
                                        "For_each": {
                                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                                            "actions": {
                                                "Condition": {
                                                    "actions": {
                                                        "Condition_-_if_user_have_manager": {
                                                            "actions": {
                                                                "Add_comment_to_incident_-_with_manager_-_no_admin": {
                                                                    "runAfter": {
                                                                        "Get_user_-_details": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                                            "message": "<p>User @{items('For_each')?['Name']} (UPN - @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}) was disabled in AAD via playbook Block-AADUser. Manager (@{body('Parse_JSON_-_get_user_manager')?['userPrincipalName']}) is notified.</p>"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/Incidents/Comment"
                                                                    }
                                                                },
                                                                "Get_user_-_details": {
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "get",
                                                                        "path": "/v1.0/users/@{encodeURIComponent(concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix']))}"
                                                                    }
                                                                },
                                                                "Send_an_email_-_to_manager_-_no_admin": {
                                                                    "runAfter": {
                                                                        "Add_comment_to_incident_-_with_manager_-_no_admin": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "Body": "<p>Security notification! This is automated email sent by Microsoft Sentinel Automation!<br>\n<br>\nYour direct report @{items('For_each')?['Name']} has been disabled in Azure AD due to the security incident. Can you please notify the user and work with him to reach&nbsp;our support.<br>\n<br>\nDirect report details:<br>\nFirst name: @{body('Get_user_-_details')?['displayName']}<br>\nSurname: @{body('Get_user_-_details')?['surname']}<br>\nJob title: @{body('Get_user_-_details')?['jobTitle']}<br>\nOffice location: @{body('Get_user_-_details')?['officeLocation']}<br>\nBusiness phone: @{body('Get_user_-_details')?['businessPhones']}<br>\nMobile phone: @{body('Get_user_-_details')?['mobilePhone']}<br>\nMail: @{body('Get_user_-_details')?['mail']}<br>\n<br>\nThank you!</p>",
                                                                            "Importance": "High",
                                                                            "Subject": "@{items('For_each')?['Name']} has been disabled in Azure AD due to the security risk!",
                                                                            "To": "@body('Parse_JSON_-_get_user_manager')?['userPrincipalName']"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/v2/Mail"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Parse_JSON_-_get_user_manager": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "else": {
                                                                "actions": {
                                                                    "Add_comment_to_incident_-_no_manager_-_no_admin": {
                                                                        "type": "ApiConnection",
                                                                        "inputs": {
                                                                            "body": {
                                                                                "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                                                "message": "<p>User @{items('For_each')?['Name']} (UPN - @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}) was disabled in AAD via playbook Block-AADUser. Manager has not been notified, since it is not found for this user!</p>"
                                                                            },
                                                                            "host": {
                                                                                "connection": {
                                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                                }
                                                                            },
                                                                            "method": "post",
                                                                            "path": "/Incidents/Comment"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@body('Parse_JSON_-_get_user_manager')?['userPrincipalName']",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "HTTP_-_get_user_manager": {
                                                            "type": "Http",
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://graph.microsoft.com/",
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "method": "GET",
                                                                "uri": "https://graph.microsoft.com/v1.0/users/@{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}/manager"
                                                            }
                                                        },
                                                        "Parse_JSON_-_get_user_manager": {
                                                            "runAfter": {
                                                                "HTTP_-_get_user_manager": [
                                                                    "Succeeded",
                                                                    "Failed"
                                                                ]
                                                            },
                                                            "type": "ParseJson",
                                                            "inputs": {
                                                                "content": "@body('HTTP_-_get_user_manager')",
                                                                "schema": {
                                                                    "properties": {
                                                                        "userPrincipalName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Update_user_-_disable_user": [
                                                            "Succeeded",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Add_comment_to_incident_-_error_details": {
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "body": {
                                                                        "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                                        "message": "<p>Block-AADUser playbook could not disable user @{items('For_each')?['Name']}.<br>\nError message: @{body('Update_user_-_disable_user')['error']['message']}<br>\nNote: If user is admin, this playbook don't have privilages to block admin users!</p>"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/Incidents/Comment"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@body('Update_user_-_disable_user')",
                                                                    "@null"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Update_user_-_disable_user": {
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "accountEnabled": false
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                                            }
                                                        },
                                                        "method": "patch",
                                                        "path": "/v1.0/users/@{encodeURIComponent(concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix']))}"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_Accounts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    }
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "azuread": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureADConnectionName'))]",
                                                "connectionName": "[[variables('AzureADConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuread')]"
                                            },
                                            "microsoftsentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                                "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                                                "connectionProperties": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    }
                                                }
                                            },
                                            "office365": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                                "connectionName": "[[variables('Office365ConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(resourceId('Microsoft.Logic/workflows', 'Block-AADUser-alert-trigger'),'/'))))]",
                            "properties": {
                                "parentId": "[resourceId('Microsoft.Logic/workflows', 'Block-AADUser-alert-trigger')]",
                                "contentId": "Block-AADUser-alert-trigger",
                                "kind": "Playbook",
                                "version": "1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "title": "Block Microsoft Entra ID user - Alert",
                        "description": "For each account entity included in the alert, this playbook will disable the user in Microsoft Entra ID, add a comment to the incident that contains this alert and notify manager if available. Note: This playbook will not disable admin user!",
                        "prerequisites": [
                            "None"
                        ],
                        "postDeployment": [
                            "1. Assign Microsoft Sentinel Responder role to the Playbook's managed identity.",
                            "2. Grant User.Read.All, User.ReadWrite.All, Directory.Read.All, Directory.ReadWrite.All permissions to the managed identity.",
                            "3. Authorize Microsoft Entra ID and Office 365 Outlook Logic App connections."
                        ],
                        "lastUpdateTime": "2022-07-11T00:00:00Z",
                        "entities": [
                            "Account"
                        ],
                        "tags": [
                            "Remediation"
                        ],
                        "releaseNotes": [
                            {
                                "version": "1.0.0",
                                "title": "Added manager notification action",
                                "notes": [
                                    "Initial version"
                                ]
                            }
                        ]
                    }
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "Block-AADUser-alert-trigger",
                "contentKind": "Playbook",
                "displayName": "Block-EntraIDUser-Alert",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-pl-ewdtsaws3tv5q",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-pl-ewdtsaws3tv5q",
                "version": "1.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring('Block-AADUser-incident-trigger')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Block-EntraIDUser-Incident Playbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "Block-EntraIDUser-Incident",
                            "type": "string"
                        }
                    },
                    "variables": {
                        "AzureADConnectionName": "[[concat('azuread-', parameters('PlaybookName'))]",
                        "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
                        "Office365ConnectionName": "[[concat('office365-', parameters('PlaybookName'))]",
                        "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuread')]",
                        "_connection-1": "[[variables('connection-1')]",
                        "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-2": "[[variables('connection-2')]",
                        "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
                        "_connection-3": "[[variables('connection-3')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('AzureADConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[variables('AzureADConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-1')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('MicrosoftSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                                "parameterValueType": "Alternative",
                                "api": {
                                    "id": "[[variables('_connection-2')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('Office365ConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[variables('Office365ConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-3')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Logic/workflows",
                            "apiVersion": "2017-07-01",
                            "name": "[[parameters('PlaybookName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "hidden-SentinelTemplateName": "Block-AADUser",
                                "hidden-SentinelTemplateVersion": "1.1",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('AzureADConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]"
                            ],
                            "properties": {
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "Microsoft_Sentinel_incident": {
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/incident-creation"
                                            },
                                            "type": "ApiConnectionWebhook"
                                        }
                                    },
                                    "actions": {
                                        "Entities_-_Get_Accounts": {
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/account"
                                            }
                                        },
                                        "For_each": {
                                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                                            "actions": {
                                                "Condition": {
                                                    "actions": {
                                                        "Condition_-_if_user_have_manager": {
                                                            "actions": {
                                                                "Add_comment_to_incident_-_with_manager_-_no_admin": {
                                                                    "runAfter": {
                                                                        "Get_user_-_details": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                            "message": "<p>User @{items('For_each')?['Name']} (UPN - @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}) was disabled in AAD via playbook Block-AADUser. Manager (@{body('Parse_JSON_-_get_user_manager')?['userPrincipalName']}) is notified.</p>"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/Incidents/Comment"
                                                                    }
                                                                },
                                                                "Get_user_-_details": {
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "get",
                                                                        "path": "/v1.0/users/@{encodeURIComponent(concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix']))}"
                                                                    }
                                                                },
                                                                "Send_an_email_-_to_manager_-_no_admin": {
                                                                    "runAfter": {
                                                                        "Add_comment_to_incident_-_with_manager_-_no_admin": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "Body": "<p>Security notification! This is automated email sent by Microsoft Sentinel Automation!<br>\n<br>\nYour direct report @{items('For_each')?['Name']} has been disabled in Azure AD due to the security incident. Can you please notify the user and work with him to reach&nbsp;our support.<br>\n<br>\nDirect report details:<br>\nFirst name: @{body('Get_user_-_details')?['displayName']}<br>\nSurname: @{body('Get_user_-_details')?['surname']}<br>\nJob title: @{body('Get_user_-_details')?['jobTitle']}<br>\nOffice location: @{body('Get_user_-_details')?['officeLocation']}<br>\nBusiness phone: @{body('Get_user_-_details')?['businessPhones']}<br>\nMobile phone: @{body('Get_user_-_details')?['mobilePhone']}<br>\nMail: @{body('Get_user_-_details')?['mail']}<br>\n<br>\nThank you!</p>",
                                                                            "Importance": "High",
                                                                            "Subject": "@{items('For_each')?['Name']}  has been disabled in Azure AD due to the security risk!",
                                                                            "To": "@body('Parse_JSON_-_get_user_manager')?['userPrincipalName']"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/v2/Mail"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Parse_JSON_-_get_user_manager": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "else": {
                                                                "actions": {
                                                                    "Add_comment_to_incident_-_no_manager_-_no_admin": {
                                                                        "type": "ApiConnection",
                                                                        "inputs": {
                                                                            "body": {
                                                                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                                "message": "<p>User @{items('For_each')?['Name']} (UPN - @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}) was disabled in AAD via playbook Block-AADUser. Manager has not been notified, since it is not found for this user!</p>"
                                                                            },
                                                                            "host": {
                                                                                "connection": {
                                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                                }
                                                                            },
                                                                            "method": "post",
                                                                            "path": "/Incidents/Comment"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@body('Parse_JSON_-_get_user_manager')?['userPrincipalName']",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "HTTP_-_get_user_manager": {
                                                            "type": "Http",
                                                            "inputs": {
                                                                "authentication": {
                                                                    "audience": "https://graph.microsoft.com/",
                                                                    "type": "ManagedServiceIdentity"
                                                                },
                                                                "method": "GET",
                                                                "uri": "https://graph.microsoft.com/v1.0/users/@{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}/manager"
                                                            }
                                                        },
                                                        "Parse_JSON_-_get_user_manager": {
                                                            "runAfter": {
                                                                "HTTP_-_get_user_manager": [
                                                                    "Succeeded",
                                                                    "Failed"
                                                                ]
                                                            },
                                                            "type": "ParseJson",
                                                            "inputs": {
                                                                "content": "@body('HTTP_-_get_user_manager')",
                                                                "schema": {
                                                                    "properties": {
                                                                        "userPrincipalName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Update_user_-_disable_user": [
                                                            "Succeeded",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Add_comment_to_incident_-_error_details": {
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "body": {
                                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                        "message": "<p>Block-AADUser playbook could not disable user @{items('For_each')?['Name']}.<br>\nError message: @{body('Update_user_-_disable_user')['error']['message']}<br>\nNote: If user is admin, this playbook don't have privilages to block admin users!</p>"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/Incidents/Comment"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@body('Update_user_-_disable_user')",
                                                                    "@null"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Update_user_-_disable_user": {
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "accountEnabled": false
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                                            }
                                                        },
                                                        "method": "patch",
                                                        "path": "/v1.0/users/@{encodeURIComponent(concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix']))}"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_Accounts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    }
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "azuread": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureADConnectionName'))]",
                                                "connectionName": "[[variables('AzureADConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuread')]"
                                            },
                                            "microsoftsentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                                "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                                                "connectionProperties": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    }
                                                }
                                            },
                                            "office365": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                                "connectionName": "[[variables('Office365ConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(resourceId('Microsoft.Logic/workflows', 'Block-AADUser-incident-trigger'),'/'))))]",
                            "properties": {
                                "parentId": "[resourceId('Microsoft.Logic/workflows', 'Block-AADUser-incident-trigger')]",
                                "contentId": "Block-AADUser-incident-trigger",
                                "kind": "Playbook",
                                "version": "1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "title": "Block Entra ID user - Incident",
                        "description": "For each account entity included in the incident, this playbook will disable the user in Microsoft Entra ID, add a comment to the incident that contains this alert and notify manager if available. Note: This playbook will not disable admin user!",
                        "prerequisites": [
                            "None"
                        ],
                        "postDeployment": [
                            "1. Assign Microsoft Sentinel Responder role to the Playbook's managed identity.",
                            "2. Grant User.Read.All, User.ReadWrite.All, Directory.Read.All, Directory.ReadWrite.All permissions to the managed identity.",
                            "3. Authorize Microsoft Entra ID and Office 365 Outlook Logic App connections."
                        ],
                        "lastUpdateTime": "2022-07-11T00:00:00Z",
                        "entities": [
                            "Account"
                        ],
                        "tags": [
                            "Remediation"
                        ],
                        "releaseNotes": [
                            {
                                "version": "1.0.0",
                                "title": "Added manager notification action",
                                "notes": [
                                    "Initial version"
                                ]
                            }
                        ]
                    }
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "Block-AADUser-incident-trigger",
                "contentKind": "Playbook",
                "displayName": "Block-EntraIDUser-Incident",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-pl-4y5ty53ekedoc",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-pl-4y5ty53ekedoc",
                "version": "1.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring('Prompt-User-alert-trigger')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Prompt-User-Alert Playbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "Prompt-User-Alert",
                            "type": "string"
                        },
                        "TeamsId": {
                            "metadata": {
                                "description": "Enter the Teams Group ID"
                            },
                            "type": "string"
                        },
                        "TeamsChannelId": {
                            "metadata": {
                                "description": "Enter the Teams Channel ID"
                            },
                            "type": "string"
                        }
                    },
                    "variables": {
                        "AzureADConnectionName": "[[concat('azuread-', parameters('PlaybookName'))]",
                        "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
                        "Office365ConnectionName": "[[concat('office365-', parameters('PlaybookName'))]",
                        "TeamsConnectionName": "[[concat('teams-', parameters('PlaybookName'))]",
                        "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuread')]",
                        "_connection-1": "[[variables('connection-1')]",
                        "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-2": "[[variables('connection-2')]",
                        "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
                        "_connection-3": "[[variables('connection-3')]",
                        "connection-4": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/teams')]",
                        "_connection-4": "[[variables('connection-4')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('AzureADConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[variables('AzureADConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-1')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('AzureSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[variables('AzureSentinelConnectionName')]",
                                "parameterValueType": "Alternative",
                                "api": {
                                    "id": "[[variables('_connection-2')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('Office365ConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[variables('Office365ConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-3')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('TeamsConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[variables('TeamsConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-4')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Logic/workflows",
                            "apiVersion": "2017-07-01",
                            "name": "[[parameters('PlaybookName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "hidden-SentinelTemplateName": "Prompt-User_alert",
                                "hidden-SentinelTemplateVersion": "1.1",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('AzureADConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
                            ],
                            "properties": {
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "actions": {
                                        "Alert_-_Get_incident": {
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Entities_-_Get_Accounts": {
                                            "inputs": {
                                                "body": "@triggerBody()?['Entities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/account"
                                            },
                                            "runAfter": {
                                                "Alert_-_Get_incident": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "For_each": {
                                            "actions": {
                                                "Condition_2": {
                                                    "actions": {
                                                        "Add_comment_to_incident_(V3)": {
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                                    "message": "<p>@{body('Get_user')?['displayName']} confirms they completed the action that triggered the alert. &nbsp;Closing the incident.</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            },
                                                            "type": "ApiConnection"
                                                        },
                                                        "Update_incident": {
                                                            "inputs": {
                                                                "body": {
                                                                    "classification": {
                                                                        "ClassificationAndReason": "BenignPositive - SuspiciousButExpected",
                                                                        "ClassificationReasonText": "User Confirmed it was them"
                                                                    },
                                                                    "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                                    "status": "Closed"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "put",
                                                                "path": "/Incidents"
                                                            },
                                                            "runAfter": {
                                                                "Add_comment_to_incident_(V3)": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        }
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Add_comment_to_incident_(V3)_2": {
                                                                "inputs": {
                                                                    "body": {
                                                                        "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                                        "message": "<p>@{body('Get_user')?['displayName']} confirms they did not complete the action. Further investigation is needed.</p>"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/Incidents/Comment"
                                                                },
                                                                "type": "ApiConnection"
                                                            },
                                                            "Post_message_in_a_chat_or_channel": {
                                                                "inputs": {
                                                                    "body": {
                                                                        "messageBody": "<p>New alert from Microsoft Sentinel.<br>\nPlease investigate ASAP.<br>\nSeverity : @{body('Alert_-_Get_incident')?['properties']?['severity']}<br>\nDescription: @{body('Alert_-_Get_incident')?['properties']?['description']}<br>\n<br>\n@{body('Get_user')?['displayName']} user confirmed they did not complete the action.</p>",
                                                                        "recipient": {
                                                                            "channelId": "[[parameters('TeamsChannelId')]",
                                                                            "groupId": "[[parameters('TeamsId')]"
                                                                        },
                                                                        "subject": "Incident @{body('Alert_-_Get_incident')?['properties']?['incidentNumber']} - @{body('Alert_-_Get_incident')?['properties']?['title']}"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['teams']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/beta/teams/conversation/message/poster/@{encodeURIComponent('User')}/location/@{encodeURIComponent('Channel')}"
                                                                },
                                                                "runAfter": {
                                                                    "Add_comment_to_incident_(V3)_2": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "ApiConnection"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "",
                                                                    "This was me"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "Send_approval_email": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Get_user": {
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/v1.0/users/@{encodeURIComponent(concat(items('For_each')?['Name'], '@' ,items('For_each')?['UPNSuffix']))}"
                                                    },
                                                    "type": "ApiConnection"
                                                },
                                                "Send_approval_email": {
                                                    "inputs": {
                                                        "body": {
                                                            "Message": {
                                                                "Body": "New Alert from Microsoft Sentinel.\nPlease respond ASAP.\nSeverity: @{triggerBody()?['Severity']}\nName: @{triggerBody()?['AlertDisplayName']}\nDescription: @{triggerBody()?['Description']}",
                                                                "HideHTMLMessage": false,
                                                                "Importance": "High",
                                                                "Options": "This was me, This was not me",
                                                                "ShowHTMLConfirmationDialog": false,
                                                                "Subject": "Security Alert: @{body('Alert_-_Get_incident')?['properties']?['title']}",
                                                                "To": "@body('Get_user')?['mail']"
                                                            },
                                                            "NotificationUrl": "@{listCallbackUrl()}"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                            }
                                                        },
                                                        "path": "/approvalmail/$subscriptions"
                                                    },
                                                    "runAfter": {
                                                        "Get_user": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnectionWebhook"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                                            "runAfter": {
                                                "Entities_-_Get_Accounts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    },
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "Microsoft_Sentinel_alert": {
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/subscribe"
                                            },
                                            "type": "ApiConnectionWebhook"
                                        }
                                    }
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "azuread": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureADConnectionName'))]",
                                                "connectionName": "[[variables('AzureADConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuread')]"
                                            },
                                            "azuresentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                                "connectionName": "[[variables('AzureSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                                                "connectionProperties": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    }
                                                }
                                            },
                                            "office365": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                                "connectionName": "[[variables('Office365ConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                                            },
                                            "teams": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                                "connectionName": "[[variables('TeamsConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/teams')]"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(resourceId('Microsoft.Logic/workflows', 'Prompt-User-alert-trigger'),'/'))))]",
                            "properties": {
                                "parentId": "[resourceId('Microsoft.Logic/workflows', 'Prompt-User-alert-trigger')]",
                                "contentId": "Prompt-User-alert-trigger",
                                "kind": "Playbook",
                                "version": "1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "title": "Prompt User - Alert",
                        "description": "This playbook will ask the user if they completed the action from the alert in Microsoft Sentinel.  If so, it will close the incident and add a comment.  If not, it will post a message to teams for the SOC to investigate and add a comment to the incident.",
                        "prerequisites": [
                            "1. You will need the Team Id and Channel Id."
                        ],
                        "postDeployment": [
                            "1. Assign Microsoft Sentinel Responder role to the Playbook's managed identity.",
                            "2. Authorize Microsoft Entra ID, Microsoft Teams, and Office 365 Outlook Logic App connections."
                        ],
                        "lastUpdateTime": "2022-07-11T00:00:00Z",
                        "entities": [
                            "Account"
                        ],
                        "tags": [
                            "Remediation"
                        ],
                        "releaseNotes": [
                            {
                                "version": "1.0.0",
                                "title": "Added new Post a Teams message action",
                                "notes": [
                                    "Initial version"
                                ]
                            }
                        ]
                    }
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "Prompt-User-alert-trigger",
                "contentKind": "Playbook",
                "displayName": "Prompt-User-Alert",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-pl-wmopshqipcas6",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-pl-wmopshqipcas6",
                "version": "1.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring('Prompt-User-incident-trigger')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Prompt-User-Incident Playbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "Prompt-User-Incident",
                            "type": "string"
                        },
                        "TeamsId": {
                            "metadata": {
                                "description": "Enter the Teams Group ID"
                            },
                            "type": "string"
                        },
                        "TeamsChannelId": {
                            "metadata": {
                                "description": "Enter the Teams Channel ID"
                            },
                            "type": "string"
                        }
                    },
                    "variables": {
                        "AzureADConnectionName": "[[concat('azuread-', parameters('PlaybookName'))]",
                        "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
                        "Office365ConnectionName": "[[concat('office365-', parameters('PlaybookName'))]",
                        "TeamsConnectionName": "[[concat('teams-', parameters('PlaybookName'))]",
                        "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuread')]",
                        "_connection-1": "[[variables('connection-1')]",
                        "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-2": "[[variables('connection-2')]",
                        "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
                        "_connection-3": "[[variables('connection-3')]",
                        "connection-4": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/teams')]",
                        "_connection-4": "[[variables('connection-4')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('AzureADConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[variables('AzureADConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-1')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('AzureSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[variables('AzureSentinelConnectionName')]",
                                "parameterValueType": "Alternative",
                                "api": {
                                    "id": "[[variables('_connection-2')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('Office365ConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[variables('Office365ConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-3')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('TeamsConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[variables('TeamsConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-4')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Logic/workflows",
                            "apiVersion": "2017-07-01",
                            "name": "[[parameters('PlaybookName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "hidden-SentinelTemplateName": "Prompt-User",
                                "hidden-SentinelTemplateVersion": "1.1",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('AzureADConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]"
                            ],
                            "properties": {
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "actions": {
                                        "Entities_-_Get_Accounts": {
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/account"
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "For_each": {
                                            "actions": {
                                                "Condition_2": {
                                                    "actions": {
                                                        "Add_comment_to_incident_(V3)": {
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "message": "<p>@{body('Get_user')?['displayName']} confirms they completed the action that triggered the alert. &nbsp;Closing the incident.</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            },
                                                            "type": "ApiConnection"
                                                        },
                                                        "Update_incident": {
                                                            "inputs": {
                                                                "body": {
                                                                    "classification": {
                                                                        "ClassificationAndReason": "BenignPositive - SuspiciousButExpected",
                                                                        "ClassificationReasonText": "User Confirmed it was them"
                                                                    },
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "status": "Closed"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "put",
                                                                "path": "/Incidents"
                                                            },
                                                            "runAfter": {
                                                                "Add_comment_to_incident_(V3)": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection"
                                                        }
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Add_comment_to_incident_(V3)_2": {
                                                                "inputs": {
                                                                    "body": {
                                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                        "message": "<p>@{body('Get_user')?['displayName']} confirms they did not complete the action. Further investigation is needed.</p>"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/Incidents/Comment"
                                                                },
                                                                "type": "ApiConnection"
                                                            },
                                                            "Post_message_in_a_chat_or_channel": {
                                                                "inputs": {
                                                                    "body": {
                                                                        "messageBody": "<p>New alert from Microsoft Sentinel.<br>\nPlease investigate ASAP.<br>\nSeverity : @{triggerBody()?['object']?['properties']?['severity']}<br>\nDescription: @{triggerBody()?['object']?['properties']?['description']}<br>\n<br>\n@{body('Get_user')?['displayName']} user confirmed they did not complete the action.</p>",
                                                                        "recipient": {
                                                                            "channelId": "[[parameters('TeamsChannelId')]",
                                                                            "groupId": "[[parameters('TeamsId')]"
                                                                        },
                                                                        "subject": "Incident @{triggerBody()?['object']?['properties']?['incidentNumber']} - @{triggerBody()?['object']?['properties']?['title']}"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['teams']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/beta/teams/conversation/message/poster/@{encodeURIComponent('User')}/location/@{encodeURIComponent('Channel')}"
                                                                },
                                                                "runAfter": {
                                                                    "Add_comment_to_incident_(V3)_2": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "ApiConnection"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@body('Send_approval_email')?['SelectedOption']",
                                                                    "This was me"
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "runAfter": {
                                                        "Send_approval_email": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Get_user": {
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/v1.0/users/@{encodeURIComponent(concat(items('For_each')?['Name'], '@' ,items('For_each')?['UPNSuffix']))}"
                                                    },
                                                    "type": "ApiConnection"
                                                },
                                                "Send_approval_email": {
                                                    "inputs": {
                                                        "body": {
                                                            "Message": {
                                                                "Body": "New Alert from Microsoft Sentinel.\nPlease respond ASAP.\nSeverity: @{triggerBody()?['object']?['properties']?['severity']}\nName: @{triggerBody()?['object']?['properties']?['title']}\nDescription: @{triggerBody()?['object']?['properties']?['description']}",
                                                                "HideHTMLMessage": false,
                                                                "Importance": "High",
                                                                "Options": "This was me, This was not me",
                                                                "ShowHTMLConfirmationDialog": false,
                                                                "Subject": "Security Alert: @{triggerBody()?['object']?['properties']?['title']}",
                                                                "To": "@body('Get_user')?['mail']"
                                                            },
                                                            "NotificationUrl": "@{listCallbackUrl()}"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                            }
                                                        },
                                                        "path": "/approvalmail/$subscriptions"
                                                    },
                                                    "runAfter": {
                                                        "Get_user": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnectionWebhook"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                                            "runAfter": {
                                                "Entities_-_Get_Accounts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    },
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "Microsoft_Sentinel_incident": {
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/incident-creation"
                                            },
                                            "type": "ApiConnectionWebhook"
                                        }
                                    }
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "azuread": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureADConnectionName'))]",
                                                "connectionName": "[[variables('AzureADConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuread')]"
                                            },
                                            "azuresentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                                "connectionName": "[[variables('AzureSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                                                "connectionProperties": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    }
                                                }
                                            },
                                            "office365": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                                "connectionName": "[[variables('Office365ConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                                            },
                                            "teams": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('TeamsConnectionName'))]",
                                                "connectionName": "[[variables('TeamsConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/teams')]"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(resourceId('Microsoft.Logic/workflows', 'Prompt-User-incident-trigger'),'/'))))]",
                            "properties": {
                                "parentId": "[resourceId('Microsoft.Logic/workflows', 'Prompt-User-incident-trigger')]",
                                "contentId": "Prompt-User-incident-trigger",
                                "kind": "Playbook",
                                "version": "1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "title": "Prompt User - Incident",
                        "description": "This playbook will ask the user if they completed the action from the Incident in Microsoft Sentinel.  If so, it will close the incident and add a comment.  If not, it will post a message to teams for the SOC to investigate and add a comment to the incident.",
                        "prerequisites": [
                            "1. You will need the Team Id and Channel Id."
                        ],
                        "postDeployment": [
                            "1. Assign Microsoft Sentinel Responder role to the Playbook's managed identity.",
                            "2. Authorize Microsoft Entra ID, Microsoft Teams, and Office 365 Outlook Logic App connections."
                        ],
                        "lastUpdateTime": "2022-07-11T00:00:00Z",
                        "entities": [
                            "Account"
                        ],
                        "tags": [
                            "Remediation"
                        ],
                        "releaseNotes": [
                            {
                                "version": "1.0.0",
                                "title": "Added new Post a Teams message action",
                                "notes": [
                                    "Initial version"
                                ]
                            }
                        ]
                    }
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "Prompt-User-incident-trigger",
                "contentKind": "Playbook",
                "displayName": "Prompt-User-Incident",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-pl-gp5zzabqkgk5m",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-pl-gp5zzabqkgk5m",
                "version": "1.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring('Reset-AADUserPassword-alert-trigger')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Reset-EntraIDPassword-AlertTrigger Playbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "Reset-EntraIDPassword-AlertTrigger",
                            "type": "string"
                        }
                    },
                    "variables": {
                        "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
                        "office365ConnectionName": "[[concat('office365-', parameters('PlaybookName'))]",
                        "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-2": "[[variables('connection-2')]",
                        "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
                        "_connection-3": "[[variables('connection-3')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
                    },
                    "resources": [
                        {
                            "properties": {
                                "provisioningState": "Succeeded",
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "Microsoft_Sentinel_alert": {
                                            "type": "ApiConnectionWebhook",
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/subscribe"
                                            }
                                        }
                                    },
                                    "actions": {
                                        "Alert_-_Get_incident": {
                                            "runAfter": {
                                                "Set_variable_-_password": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                                            }
                                        },
                                        "Entities_-_Get_Accounts": {
                                            "runAfter": {
                                                "Alert_-_Get_incident": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@triggerBody()?['Entities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/account"
                                            }
                                        },
                                        "For_each": {
                                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                                            "actions": {
                                                "Condition_-_is_manager_available": {
                                                    "actions": {
                                                        "Add_comment_to_incident_-_manager_available": {
                                                            "runAfter": {
                                                                "Send_an_email_-_to_manager_with_password_details": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                                    "message": "<p>User @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])} password was reset in AAD and their manager @{body('Parse_JSON_-_HTTP_-_get_manager')?['userPrincipalName']} was contacted using playbook.</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            }
                                                        },
                                                        "Parse_JSON_-_HTTP_-_get_manager": {
                                                            "type": "ParseJson",
                                                            "inputs": {
                                                                "content": "@body('HTTP_-_get_manager')",
                                                                "schema": {
                                                                    "properties": {
                                                                        "userPrincipalName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "Send_an_email_-_to_manager_with_password_details": {
                                                            "runAfter": {
                                                                "Parse_JSON_-_HTTP_-_get_manager": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "Body": "<p>User, @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}, was involved in part of a security incident. &nbsp;As part of remediation, the user password has been reset.<br>\n<br>\nThe temporary password is: @{variables('Password')}<br>\n<br>\nThe user will be required to reset this password upon login.</p>",
                                                                    "Subject": "A user password was reset due to security incident.",
                                                                    "To": "@body('Parse_JSON_-_HTTP_-_get_manager')?['userPrincipalName']"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/v2/Mail"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "HTTP_-_get_manager": [
                                                            "Succeeded",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Add_comment_to_incident_-_manager_not_available": {
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "body": {
                                                                        "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                                        "message": "<p>User @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])} password was reset in AAD but the user doesn't have a manager.<br>\n<br>\nThe temporary password is: @{variables('Password')}<br>\n<br>\nThe user will be required to reset this password upon login.</p>"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/Incidents/Comment"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@outputs('HTTP_-_get_manager')['statusCode']",
                                                                    200
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "HTTP_-_get_manager": {
                                                    "runAfter": {
                                                        "HTTP_-_reset_a_password": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}/manager"
                                                    }
                                                },
                                                "HTTP_-_reset_a_password": {
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "body": {
                                                            "passwordProfile": {
                                                                "forceChangePasswordNextSignIn": true,
                                                                "forceChangePasswordNextSignInWithMfa": false,
                                                                "password": "@{variables('Password')}"
                                                            }
                                                        },
                                                        "method": "PATCH",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_Accounts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "Initialize_variable": {
                                            "type": "InitializeVariable",
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "Password",
                                                        "type": "String",
                                                        "value": "null"
                                                    }
                                                ]
                                            }
                                        },
                                        "Set_variable_-_password": {
                                            "runAfter": {
                                                "Initialize_variable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Password",
                                                "value": "@{substring(guid(), 0, 10)}"
                                            }
                                        }
                                    }
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "microsoftsentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                                "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                                                "connectionProperties": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    }
                                                }
                                            },
                                            "office365": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                                                "connectionName": "[[variables('office365ConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                                            }
                                        }
                                    }
                                }
                            },
                            "name": "[[parameters('PlaybookName')]",
                            "type": "Microsoft.Logic/workflows",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "hidden-SentinelTemplateName": "Reset-AADUserPassword_alert",
                                "hidden-SentinelTemplateVersion": "1.1",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "apiVersion": "2017-07-01",
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('MicrosoftSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                                "parameterValueType": "Alternative",
                                "api": {
                                    "id": "[[variables('_connection-2')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('office365ConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[variables('office365ConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-3')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(resourceId('Microsoft.Logic/workflows', 'Reset-AADUserPassword-alert-trigger'),'/'))))]",
                            "properties": {
                                "parentId": "[resourceId('Microsoft.Logic/workflows', 'Reset-AADUserPassword-alert-trigger')]",
                                "contentId": "Reset-AADUserPassword-alert-trigger",
                                "kind": "Playbook",
                                "version": "1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "title": "Reset Microsoft Entra ID User Password - Alert Trigger",
                        "description": "This playbook will reset the user password using Graph API.  It will send the password (which is a random guid substring) to the user's manager.  The user will have to reset the password upon login.",
                        "prerequisites": [
                            "None"
                        ],
                        "postDeployment": [
                            "1. Assign Password Administrator permission to managed identity.",
                            "2. Assign Microsoft Sentinel Responder permission to managed identity.",
                            "3. Authorize Office 365 Outlook connection"
                        ],
                        "lastUpdateTime": "2022-07-11T00:00:00Z",
                        "entities": [
                            "Account"
                        ],
                        "tags": [
                            "Remediation"
                        ],
                        "releaseNotes": [
                            {
                                "version": "1.0.0",
                                "title": " Added manager notification action",
                                "notes": [
                                    "Initial version"
                                ]
                            }
                        ]
                    }
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "Reset-AADUserPassword-alert-trigger",
                "contentKind": "Playbook",
                "displayName": "Reset-EntraIDPassword-AlertTrigger",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-pl-t4grad45rkk4y",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-pl-t4grad45rkk4y",
                "version": "1.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring('Reset-AADUserPassword-incident-trigger')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Reset-EntraIDPassword-IncidentTrigger Playbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "Reset-EntraIDPassword-IncidentTrigger",
                            "type": "string"
                        }
                    },
                    "variables": {
                        "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
                        "office365ConnectionName": "[[concat('office365-', parameters('PlaybookName'))]",
                        "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-2": "[[variables('connection-2')]",
                        "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
                        "_connection-3": "[[variables('connection-3')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
                    },
                    "resources": [
                        {
                            "properties": {
                                "provisioningState": "Succeeded",
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "Microsoft_Sentinel_incident": {
                                            "type": "ApiConnectionWebhook",
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/incident-creation"
                                            }
                                        }
                                    },
                                    "actions": {
                                        "Entities_-_Get_Accounts": {
                                            "runAfter": {
                                                "Set_variable_-_password": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/account"
                                            }
                                        },
                                        "For_each": {
                                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                                            "actions": {
                                                "Condition_-_is_manager_available": {
                                                    "actions": {
                                                        "Add_comment_to_incident_-_manager_available": {
                                                            "runAfter": {
                                                                "Send_an_email_-_to_manager_with_password_details": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                    "message": "<p>User @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])} password was reset in AAD and their manager @{body('Parse_JSON_-_HTTP_-_get_manager')?['userPrincipalName']} was contacted using playbook.</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            }
                                                        },
                                                        "Parse_JSON_-_HTTP_-_get_manager": {
                                                            "type": "ParseJson",
                                                            "inputs": {
                                                                "content": "@body('HTTP_-_get_manager')",
                                                                "schema": {
                                                                    "properties": {
                                                                        "userPrincipalName": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            }
                                                        },
                                                        "Send_an_email_-_to_manager_with_password_details": {
                                                            "runAfter": {
                                                                "Parse_JSON_-_HTTP_-_get_manager": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "Body": "<p>User, @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}, was involved in part of a security incident. &nbsp;As part of remediation, the user password has been reset.<br>\n<br>\nThe temporary password is: @{variables('Password')}<br>\n<br>\nThe user will be required to reset this password upon login.</p>",
                                                                    "Subject": "A user password was reset due to security incident.",
                                                                    "To": "@body('Parse_JSON_-_HTTP_-_get_manager')?['userPrincipalName']"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/v2/Mail"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "HTTP_-_get_manager": [
                                                            "Succeeded",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Add_comment_to_incident_-_manager_not_available": {
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "body": {
                                                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                                                        "message": "<p>User @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])} password was reset in AAD but the user doesn't have a manager.<br>\n<br>\nThe temporary password is: @{variables('Password')}<br>\n<br>\nThe user will be required to reset this password upon login.</p>"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/Incidents/Comment"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "equals": [
                                                                    "@outputs('HTTP_-_get_manager')['statusCode']",
                                                                    200
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "HTTP_-_get_manager": {
                                                    "runAfter": {
                                                        "HTTP_-_reset_a_password": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}/manager"
                                                    }
                                                },
                                                "HTTP_-_reset_a_password": {
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "body": {
                                                            "passwordProfile": {
                                                                "forceChangePasswordNextSignIn": true,
                                                                "forceChangePasswordNextSignInWithMfa": false,
                                                                "password": "@{variables('Password')}"
                                                            }
                                                        },
                                                        "method": "PATCH",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Entities_-_Get_Accounts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "Initialize_variable": {
                                            "type": "InitializeVariable",
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "Password",
                                                        "type": "String",
                                                        "value": "null"
                                                    }
                                                ]
                                            }
                                        },
                                        "Set_variable_-_password": {
                                            "runAfter": {
                                                "Initialize_variable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Password",
                                                "value": "@{substring(guid(), 0, 10)}"
                                            }
                                        }
                                    }
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "microsoftsentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                                "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                                                "connectionProperties": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    }
                                                }
                                            },
                                            "office365": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                                                "connectionName": "[[variables('office365ConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                                            }
                                        }
                                    }
                                }
                            },
                            "name": "[[parameters('PlaybookName')]",
                            "type": "Microsoft.Logic/workflows",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "hidden-SentinelTemplateName": "Reset-AADUserPassword",
                                "hidden-SentinelTemplateVersion": "1.1",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "apiVersion": "2017-07-01",
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('MicrosoftSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                                "parameterValueType": "Alternative",
                                "api": {
                                    "id": "[[variables('_connection-2')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('office365ConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[variables('office365ConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-3')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(resourceId('Microsoft.Logic/workflows', 'Reset-AADUserPassword-incident-trigger'),'/'))))]",
                            "properties": {
                                "parentId": "[resourceId('Microsoft.Logic/workflows', 'Reset-AADUserPassword-incident-trigger')]",
                                "contentId": "Reset-AADUserPassword-incident-trigger",
                                "kind": "Playbook",
                                "version": "1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "title": "Reset Microsoft Entra ID User Password - Incident Trigger",
                        "description": "This playbook will reset the user password using Graph API.  It will send the password (which is a random guid substring) to the user's manager.  The user will have to reset the password upon login.",
                        "prerequisites": [
                            "None"
                        ],
                        "postDeployment": [
                            "1. Assign Password Administrator permission to managed identity.",
                            "2. Assign Microsoft Sentinel Responder permission to managed identity.",
                            "3. Authorize Office 365 Outlook connection"
                        ],
                        "lastUpdateTime": "2022-07-11T00:00:00Z",
                        "entities": [
                            "Account"
                        ],
                        "tags": [
                            "Remediation"
                        ],
                        "releaseNotes": [
                            {
                                "version": "1.0.0",
                                "title": " Added manager notification action",
                                "notes": [
                                    "Initial version"
                                ]
                            }
                        ]
                    }
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "Reset-AADUserPassword-incident-trigger",
                "contentKind": "Playbook",
                "displayName": "Reset-EntraIDPassword-IncidentTrigger",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-pl-poparg4wygnze",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-pl-poparg4wygnze",
                "version": "1.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring('Block-AADUser-entity-trigger')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Block-EntraIDUser-EntityTrigger Playbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "Block-EntraIDUser-EntityTrigger",
                            "type": "string"
                        }
                    },
                    "variables": {
                        "AzureADConnectionName": "[[concat('azuread-', parameters('PlaybookName'))]",
                        "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
                        "Office365ConnectionName": "[[concat('office365-', parameters('PlaybookName'))]",
                        "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuread')]",
                        "_connection-1": "[[variables('connection-1')]",
                        "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-2": "[[variables('connection-2')]",
                        "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
                        "_connection-3": "[[variables('connection-3')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('AzureADConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[variables('AzureADConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-1')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('MicrosoftSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                                "parameterValueType": "Alternative",
                                "api": {
                                    "id": "[[variables('_connection-2')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('Office365ConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[variables('Office365ConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-3')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Logic/workflows",
                            "apiVersion": "2017-07-01",
                            "name": "[[parameters('PlaybookName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "hidden-SentinelTemplateName": "Block-AADUser-EntityTrigger",
                                "hidden-SentinelTemplateVersion": "1.1",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('AzureADConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]"
                            ],
                            "properties": {
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "Microsoft_Sentinel_entity": {
                                            "type": "ApiConnectionWebhook",
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/entity/@{encodeURIComponent('Account')}"
                                            }
                                        }
                                    },
                                    "actions": {
                                        "Condition": {
                                            "actions": {
                                                "Condition_-_if_user_have_manager": {
                                                    "actions": {
                                                        "Condition_2": {
                                                            "actions": {
                                                                "Add_comment_to_incident_-_with_manager_-_no_admin": {
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "body": {
                                                                            "incidentArmId": "@triggerBody()?['IncidentArmID']",
                                                                            "message": "<p>User @{triggerBody()?['Entity']?['properties']?['Name']} &nbsp;(UPN - @{variables('AccountDetails')}) was disabled in AAD via playbook Block-AADUser. Manager (@{body('Parse_JSON_-_get_user_manager')?['userPrincipalName']}) is notified.</p>"
                                                                        },
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/Incidents/Comment"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {
                                                                "Get_user_-_details": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "not": {
                                                                            "equals": [
                                                                                "@triggerBody()?['IncidentArmID']",
                                                                                "@null"
                                                                            ]
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        },
                                                        "Get_user_-_details": {
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['azuread']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "get",
                                                                "path": "/v1.0/users/@{encodeURIComponent(variables('AccountDetails'))}"
                                                            }
                                                        },
                                                        "Send_an_email_-_to_manager_-_no_admin": {
                                                            "runAfter": {
                                                                "Condition_2": [
                                                                    "Succeeded"
                                                                ]
                                                            },
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "Body": "<p>Security notification! This is automated email sent by Microsoft Sentinel Automation!<br>\n<br>\nYour direct report @{triggerBody()?['Entity']?['properties']?['Name']} has been disabled in Azure AD due to the security incident. Can you please notify the user and work with him to reach&nbsp;our support.<br>\n<br>\nDirect report details:<br>\nFirst name: @{body('Get_user_-_details')?['displayName']}<br>\nSurname: @{body('Get_user_-_details')?['surname']}<br>\nJob title: @{body('Get_user_-_details')?['jobTitle']}<br>\nOffice location: @{body('Get_user_-_details')?['officeLocation']}<br>\nBusiness phone: @{body('Get_user_-_details')?['businessPhones']}<br>\nMobile phone: @{body('Get_user_-_details')?['mobilePhone']}<br>\nMail: @{body('Get_user_-_details')?['mail']}<br>\n<br>\nThank you!</p>",
                                                                    "Importance": "High",
                                                                    "Subject": "@{triggerBody()?['Entity']?['properties']?['Name']}  has been disabled in Azure AD due to the security risk!",
                                                                    "To": "@body('Parse_JSON_-_get_user_manager')?['userPrincipalName']"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/v2/Mail"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Parse_JSON_-_get_user_manager": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Condition_3": {
                                                                "actions": {
                                                                    "Add_comment_to_incident_-_no_manager_-_no_admin": {
                                                                        "type": "ApiConnection",
                                                                        "inputs": {
                                                                            "body": {
                                                                                "incidentArmId": "@triggerBody()?['IncidentArmID']",
                                                                                "message": "<p>User @{triggerBody()?['Entity']?['properties']?['Name']} (UPN - @{variables('AccountDetails')}) was disabled in AAD via playbook Block-AADUser. Manager has not been notified, since it is not found for this user!</p>"
                                                                            },
                                                                            "host": {
                                                                                "connection": {
                                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                                }
                                                                            },
                                                                            "method": "post",
                                                                            "path": "/Incidents/Comment"
                                                                        }
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "not": {
                                                                                "equals": [
                                                                                    "@triggerBody()?['IncidentArmID']",
                                                                                    "@null"
                                                                                ]
                                                                            }
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@body('Parse_JSON_-_get_user_manager')?['userPrincipalName']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "HTTP_-_get_user_manager": {
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com/",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{variables('AccountDetails')}/manager"
                                                    }
                                                },
                                                "Parse_JSON_-_get_user_manager": {
                                                    "runAfter": {
                                                        "HTTP_-_get_user_manager": [
                                                            "Succeeded",
                                                            "Failed"
                                                        ]
                                                    },
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@body('HTTP_-_get_user_manager')",
                                                        "schema": {
                                                            "properties": {
                                                                "userPrincipalName": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Update_user_-_disable_user": [
                                                    "Succeeded",
                                                    "Failed"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Add_comment_to_incident_-_error_details": {
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "body": {
                                                                "incidentArmId": "@triggerBody()?['IncidentArmID']",
                                                                "message": "<p>Block-AADUser playbook could not disable user @{triggerBody()?['Entity']?['properties']?['Name']}.<br>\nError message: @{body('Update_user_-_disable_user')['error']['message']}<br>\nNote: If user is admin, this playbook don't have privilages to block admin users!</p>"
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "path": "/Incidents/Comment"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@body('Update_user_-_disable_user')",
                                                            "@null"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Initialize_variable_Account_Details": {
                                            "type": "InitializeVariable",
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "AccountDetails",
                                                        "type": "string"
                                                    }
                                                ]
                                            }
                                        },
                                        "Set_variable": {
                                            "runAfter": {
                                                "Initialize_variable_Account_Details": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "AccountDetails",
                                                "value": "@{concat(triggerBody()?['Entity']?['properties']?['Name'],'@',triggerBody()?['Entity']?['properties']?['UPNSuffix'])}"
                                            }
                                        },
                                        "Update_user_-_disable_user": {
                                            "runAfter": {
                                                "Set_variable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection",
                                            "inputs": {
                                                "body": {
                                                    "accountEnabled": false
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuread']['connectionId']"
                                                    }
                                                },
                                                "method": "patch",
                                                "path": "/v1.0/users/@{encodeURIComponent(variables('AccountDetails'))}"
                                            }
                                        }
                                    }
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "azuread": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureADConnectionName'))]",
                                                "connectionName": "[[variables('AzureADConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuread')]"
                                            },
                                            "microsoftsentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                                "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                                                "connectionProperties": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    }
                                                }
                                            },
                                            "office365": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                                "connectionName": "[[variables('Office365ConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(resourceId('Microsoft.Logic/workflows', 'Block-AADUser-entity-trigger'),'/'))))]",
                            "properties": {
                                "parentId": "[resourceId('Microsoft.Logic/workflows', 'Block-AADUser-entity-trigger')]",
                                "contentId": "Block-AADUser-entity-trigger",
                                "kind": "Playbook",
                                "version": "1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "title": "Block Microsoft Entra ID user - Entity trigger",
                        "description": "This playbook disables the selected user (account entity) in Microsoft Entra ID. If this playbook triggered from an incident context, it will add a comment to the incident. This playbook will notify the disabled user manager if available. Note: This playbook will not disable admin user!",
                        "postDeployment": [
                            "1. Assign Microsoft Sentinel Responder role to the Playbook's managed identity.",
                            "2. Grant User.Read.All, User.ReadWrite.All, Directory.Read.All, Directory.ReadWrite.All permissions to the managed identity.",
                            "3. Authorize Microsoft Entra ID and Office 365 Outlook Logic App connections."
                        ],
                        "lastUpdateTime": "2022-12-08T00:00:00Z",
                        "entities": [
                            "Account"
                        ],
                        "tags": [
                            "Remediation"
                        ],
                        "releaseNotes": [
                            {
                                "version": "1.0.0",
                                "title": "Added manager notification action",
                                "notes": [
                                    "Initial version"
                                ]
                            }
                        ]
                    }
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "Block-AADUser-entity-trigger",
                "contentKind": "Playbook",
                "displayName": "Block-EntraIDUser-EntityTrigger",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-pl-2i7i2rfwjrw2k",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-pl-2i7i2rfwjrw2k",
                "version": "1.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring('Reset-AADUserPassword-entity-trigger')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Reset-EntraIDUserPassword-EntityTrigger Playbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.1",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "Reset-EntraIDUserPassword-EntityTrigger",
                            "type": "string"
                        }
                    },
                    "variables": {
                        "MicrosoftSentinelConnectionName": "[[concat('microsoftsentinel-', parameters('PlaybookName'))]",
                        "office365ConnectionName": "[[concat('office365-', parameters('PlaybookName'))]",
                        "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-2": "[[variables('connection-2')]",
                        "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
                        "_connection-3": "[[variables('connection-3')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
                    },
                    "resources": [
                        {
                            "properties": {
                                "provisioningState": "Succeeded",
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "Microsoft_Sentinel_entity": {
                                            "type": "ApiConnectionWebhook",
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/entity/@{encodeURIComponent('Account')}"
                                            }
                                        }
                                    },
                                    "actions": {
                                        "Condition_-_is_manager_available": {
                                            "actions": {
                                                "Condition_2": {
                                                    "actions": {
                                                        "Add_comment_to_incident_-_manager_available": {
                                                            "type": "ApiConnection",
                                                            "inputs": {
                                                                "body": {
                                                                    "incidentArmId": "@triggerBody()?['IncidentArmID']",
                                                                    "message": "<p>User @{variables('AccountDetails')} password was reset in AAD and their manager @{body('Parse_JSON_-_HTTP_-_get_manager')?['userPrincipalName']} was contacted using playbook.</p>"
                                                                },
                                                                "host": {
                                                                    "connection": {
                                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                    }
                                                                },
                                                                "method": "post",
                                                                "path": "/Incidents/Comment"
                                                            }
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Send_an_email_-_to_manager_with_password_details": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "not": {
                                                                    "equals": [
                                                                        "@triggerBody()?['IncidentArmID']",
                                                                        "@null"
                                                                    ]
                                                                }
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "Parse_JSON_-_HTTP_-_get_manager": {
                                                    "type": "ParseJson",
                                                    "inputs": {
                                                        "content": "@body('HTTP_-_get_manager')",
                                                        "schema": {
                                                            "properties": {
                                                                "userPrincipalName": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "Send_an_email_-_to_manager_with_password_details": {
                                                    "runAfter": {
                                                        "Parse_JSON_-_HTTP_-_get_manager": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Body": "<p>User, @{variables('AccountDetails')}, was involved in part of a security incident. &nbsp;As part of remediation, the user password has been reset.<br>\n<br>\nThe temporary password is: @{variables('Password')}<br>\n<br>\nThe user will be required to reset this password upon login.</p>",
                                                            "Subject": "A user password was reset due to security incident.",
                                                            "To": "@body('Parse_JSON_-_HTTP_-_get_manager')?['userPrincipalName']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2/Mail"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "HTTP_-_get_manager": [
                                                    "Succeeded",
                                                    "Failed"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Condition": {
                                                        "actions": {
                                                            "Add_comment_to_incident_-_manager_not_available": {
                                                                "type": "ApiConnection",
                                                                "inputs": {
                                                                    "body": {
                                                                        "incidentArmId": "@triggerBody()?['IncidentArmID']",
                                                                        "message": "<p>User @{variables('AccountDetails')} password was reset in AAD but the user doesn't have a manager.<br>\n<br>\nThe temporary password is: @{variables('Password')}<br>\n<br>\nThe user will be required to reset this password upon login.</p>"
                                                                    },
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/Incidents/Comment"
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "not": {
                                                                        "equals": [
                                                                            "@triggerBody()?['IncidentArmID']",
                                                                            "@null"
                                                                        ]
                                                                    }
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@outputs('HTTP_-_get_manager')['statusCode']",
                                                            200
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "HTTP_-_get_manager": {
                                            "runAfter": {
                                                "HTTP_-_reset_a_password": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "method": "GET",
                                                "uri": "https://graph.microsoft.com/v1.0/users/@{variables('AccountDetails')}/manager"
                                            }
                                        },
                                        "HTTP_-_reset_a_password": {
                                            "runAfter": {
                                                "Initialize_variable_Account": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "body": {
                                                    "passwordProfile": {
                                                        "forceChangePasswordNextSignIn": true,
                                                        "forceChangePasswordNextSignInWithMfa": false,
                                                        "password": "@{variables('Password')}"
                                                    }
                                                },
                                                "method": "PATCH",
                                                "uri": "https://graph.microsoft.com/v1.0/users/@{variables('AccountDetails')}"
                                            }
                                        },
                                        "Initialize_variable": {
                                            "type": "InitializeVariable",
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "Password",
                                                        "type": "String",
                                                        "value": "null"
                                                    }
                                                ]
                                            }
                                        },
                                        "Initialize_variable_Account": {
                                            "runAfter": {
                                                "Set_variable_-_password": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "InitializeVariable",
                                            "inputs": {
                                                "variables": [
                                                    {
                                                        "name": "AccountDetails",
                                                        "type": "String",
                                                        "value": "@{concat(triggerBody()?['Entity']?['properties']?['Name'],'@',triggerBody()?['Entity']?['properties']?['UPNSuffix'])}"
                                                    }
                                                ]
                                            }
                                        },
                                        "Set_variable_-_password": {
                                            "runAfter": {
                                                "Initialize_variable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Password",
                                                "value": "@{substring(guid(), 0, 10)}"
                                            }
                                        }
                                    }
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "microsoftsentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                                "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                                                "connectionProperties": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    }
                                                }
                                            },
                                            "office365": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]",
                                                "connectionName": "[[variables('office365ConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                                            }
                                        }
                                    }
                                }
                            },
                            "name": "[[parameters('PlaybookName')]",
                            "type": "Microsoft.Logic/workflows",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "hidden-SentinelTemplateName": "Reset-AADUserPassword-EntityTrigger",
                                "hidden-SentinelTemplateVersion": "1.1",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "apiVersion": "2017-07-01",
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('office365ConnectionName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('MicrosoftSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                                "parameterValueType": "Alternative",
                                "api": {
                                    "id": "[[variables('_connection-2')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('office365ConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[variables('office365ConnectionName')]",
                                "api": {
                                    "id": "[[variables('_connection-3')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(resourceId('Microsoft.Logic/workflows', 'Reset-AADUserPassword-entity-trigger'),'/'))))]",
                            "properties": {
                                "parentId": "[resourceId('Microsoft.Logic/workflows', 'Reset-AADUserPassword-entity-trigger')]",
                                "contentId": "Reset-AADUserPassword-entity-trigger",
                                "kind": "Playbook",
                                "version": "1.1",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "title": "Reset Microsoft Entra ID User Password - Entity trigger",
                        "description": "This playbook will reset the user password using Graph API.  It will send the password (which is a random guid substring) to the user's manager.  The user will have to reset the password upon login.",
                        "postDeployment": [
                            "1. Assign Password Administrator permission to managed identity.",
                            "2. Assign Microsoft Sentinel Responder permission to managed identity.",
                            "3. Authorize Office 365 Outlook connection"
                        ],
                        "lastUpdateTime": "2022-12-06T00:00:00Z",
                        "entities": [
                            "Account"
                        ],
                        "tags": [
                            "Remediation"
                        ],
                        "releaseNotes": {
                            "version": "1.1",
                            "title": "[replace('b', 'b', '')]",
                            "notes": [
                                "Initial version"
                            ]
                        }
                    }
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "Reset-AADUserPassword-entity-trigger",
                "contentKind": "Playbook",
                "displayName": "Reset-EntraIDUserPassword-EntityTrigger",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-pl-h5fhmz5nym4pc",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-pl-h5fhmz5nym4pc",
                "version": "1.1",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring('Revoke-AADSignInSessions-alert-trigger')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Revoke-EntraIDSignInSessions-alert Playbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "Revoke-EntraIDSignInSessions-alert",
                            "type": "string"
                        },
                        "UserName": {
                            "defaultValue": "<username>@<domain>",
                            "type": "string"
                        }
                    },
                    "variables": {
                        "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
                        "Office365ConnectionName": "[[concat('office365-', parameters('PlaybookName'))]",
                        "Office365UsersConnectionName": "[[concat('office365users-', parameters('PlaybookName'))]",
                        "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-1": "[[variables('connection-1')]",
                        "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
                        "_connection-2": "[[variables('connection-2')]",
                        "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365users')]",
                        "_connection-3": "[[variables('connection-3')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('AzureSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[parameters('PlaybookName')]",
                                "parameterValueType": "Alternative",
                                "api": {
                                    "id": "[[variables('_connection-1')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('Office365ConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[parameters('UserName')]",
                                "api": {
                                    "id": "[[variables('_connection-2')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('Office365UsersConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[parameters('UserName')]",
                                "api": {
                                    "id": "[[variables('_connection-3')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Logic/workflows",
                            "apiVersion": "2017-07-01",
                            "name": "[[parameters('PlaybookName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "hidden-SentinelTemplateName": "Revoke-AADSigninSessions_alert",
                                "hidden-SentinelTemplateVersion": "1.0",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('Office365UsersConnectionName'))]"
                            ],
                            "properties": {
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "actions": {
                                        "Alert_-_Get_incident": {
                                            "inputs": {
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "get",
                                                "path": "/Incidents/subscriptions/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/resourceGroups/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/workspaces/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/alerts/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}"
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "Entities_-_Get_Accounts": {
                                            "inputs": {
                                                "body": "@triggerBody()?['Entities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/account"
                                            },
                                            "runAfter": {
                                                "Alert_-_Get_incident": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "For_each": {
                                            "actions": {
                                                "Add_comment_to_incident_(V3)": {
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@body('Alert_-_Get_incident')?['id']",
                                                            "message": "<p>User @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])} singin sessions were revoked in AAD and their manager @{body('Get_manager_(V2)')?['displayName']} was contacted using playbook.</p>"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/Incidents/Comment"
                                                    },
                                                    "runAfter": {
                                                        "Send_an_email_(V2)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection"
                                                },
                                                "Get_manager_(V2)": {
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365users']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/codeless/v1.0/users/@{encodeURIComponent(concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix']))}/manager"
                                                    },
                                                    "runAfter": {
                                                        "HTTP": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection"
                                                },
                                                "HTTP": {
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "POST",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}/revokeSignInSessions"
                                                    },
                                                    "type": "Http"
                                                },
                                                "Send_an_email_(V2)": {
                                                    "inputs": {
                                                        "body": {
                                                            "Body": "<p>User, @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}, was involved in part of a security incident. &nbsp;As part of remediation, the user signin sessions have been revoked. &nbsp;The user will need to reauthenticate in all applications.</p>",
                                                            "Subject": "User signin sessions were reset due to security incident.",
                                                            "To": "@body('Get_manager_(V2)')?['mail']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2/Mail"
                                                    },
                                                    "runAfter": {
                                                        "Get_manager_(V2)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                                            "runAfter": {
                                                "Entities_-_Get_Accounts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    },
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "Microsoft_Sentinel_alert": {
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/subscribe"
                                            },
                                            "type": "ApiConnectionWebhook"
                                        }
                                    }
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "azuresentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                                "connectionName": "[[variables('AzureSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                                                "connectionProperties": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    }
                                                }
                                            },
                                            "office365": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                                "connectionName": "[[variables('Office365ConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                                            },
                                            "office365users": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365UsersConnectionName'))]",
                                                "connectionName": "[[variables('Office365UsersConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365users')]"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(resourceId('Microsoft.Logic/workflows', 'Revoke-AADSignInSessions-alert-trigger'),'/'))))]",
                            "properties": {
                                "parentId": "[resourceId('Microsoft.Logic/workflows', 'Revoke-AADSignInSessions-alert-trigger')]",
                                "contentId": "Revoke-AADSignInSessions-alert-trigger",
                                "kind": "Playbook",
                                "version": "1.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "title": "Revoke-Entra ID SignInSessions alert trigger",
                        "description": "This playbook will revoke all signin sessions for the user using Graph API.  It will send an email to the user's manager.",
                        "prerequisites": [
                            "1. You must create an app registration for graph api with appropriate permissions.",
                            "2.  You will need to add the managed identity that is created by the logic app to the Password Administrator role in Microsoft Entra ID."
                        ],
                        "comments": "This playbook will revoke all signin sessions for the user using Graph API using a Beta API.  It will send and email to the user's manager.",
                        "lastUpdateTime": "2021-07-14T00:00:00Z",
                        "entities": [
                            "Account"
                        ],
                        "tags": [
                            "Remediation"
                        ],
                        "releaseNotes": {
                            "version": "1.0",
                            "title": "[replace('b', 'b', '')]",
                            "notes": [
                                "Initial version"
                            ]
                        }
                    }
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "Revoke-AADSignInSessions-alert-trigger",
                "contentKind": "Playbook",
                "displayName": "Revoke-EntraIDSignInSessions-alert",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-pl-mrrno3b3vxgo6",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-pl-mrrno3b3vxgo6",
                "version": "1.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring('Revoke-AADSignInSessions-incident-trigger')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Revoke-EntraIDSignInSessions-incident Playbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "Revoke-EntraIDSignInSessions-incident",
                            "type": "string"
                        },
                        "UserName": {
                            "defaultValue": "<username>@<domain>",
                            "type": "string"
                        }
                    },
                    "variables": {
                        "AzureSentinelConnectionName": "[[concat('azuresentinel-', parameters('PlaybookName'))]",
                        "Office365ConnectionName": "[[concat('office365-', parameters('PlaybookName'))]",
                        "Office365UsersConnectionName": "[[concat('office365users-', parameters('PlaybookName'))]",
                        "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "_connection-1": "[[variables('connection-1')]",
                        "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]",
                        "_connection-2": "[[variables('connection-2')]",
                        "connection-3": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365users')]",
                        "_connection-3": "[[variables('connection-3')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('AzureSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[parameters('PlaybookName')]",
                                "parameterValueType": "Alternative",
                                "api": {
                                    "id": "[[variables('_connection-1')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('Office365ConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[parameters('UserName')]",
                                "api": {
                                    "id": "[[variables('_connection-2')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('Office365UsersConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "properties": {
                                "displayName": "[[parameters('UserName')]",
                                "api": {
                                    "id": "[[variables('_connection-3')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Logic/workflows",
                            "apiVersion": "2017-07-01",
                            "name": "[[parameters('PlaybookName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "LogicAppsCategory": "security",
                                "hidden-SentinelTemplateName": "Revoke-AADSigninSessions",
                                "hidden-SentinelTemplateVersion": "1.0",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "[[resourceId('Microsoft.Web/connections', variables('Office365UsersConnectionName'))]"
                            ],
                            "properties": {
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "actions": {
                                        "Entities_-_Get_Accounts": {
                                            "inputs": {
                                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "method": "post",
                                                "path": "/entities/account"
                                            },
                                            "type": "ApiConnection"
                                        },
                                        "For_each": {
                                            "actions": {
                                                "Add_comment_to_incident_(V3)": {
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                                            "message": "<p>User @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])} singin sessions were revoked in AAD and their manager @{body('Get_manager_(V2)')?['displayName']} was contacted using playbook.</p>"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/Incidents/Comment"
                                                    },
                                                    "runAfter": {
                                                        "Send_an_email_(V2)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection"
                                                },
                                                "Get_manager_(V2)": {
                                                    "inputs": {
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365users']['connectionId']"
                                                            }
                                                        },
                                                        "method": "get",
                                                        "path": "/codeless/v1.0/users/@{encodeURIComponent(concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix']))}/manager"
                                                    },
                                                    "runAfter": {
                                                        "HTTP": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection"
                                                },
                                                "HTTP": {
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "type": "ManagedServiceIdentity"
                                                        },
                                                        "method": "POST",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}/revokeSignInSessions"
                                                    },
                                                    "type": "Http"
                                                },
                                                "Send_an_email_(V2)": {
                                                    "inputs": {
                                                        "body": {
                                                            "Body": "<p>User, @{concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix'])}, was involved in part of a security incident. &nbsp;As part of remediation, the user signin sessions have been revoked. &nbsp;The user will need to reauthenticate in all applications.</p>",
                                                            "Subject": "User signin sessions were reset due to security incident.",
                                                            "To": "@body('Get_manager_(V2)')?['mail']"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2/Mail"
                                                    },
                                                    "runAfter": {
                                                        "Get_manager_(V2)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection"
                                                }
                                            },
                                            "foreach": "@body('Entities_-_Get_Accounts')?['Accounts']",
                                            "runAfter": {
                                                "Entities_-_Get_Accounts": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        }
                                    },
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "Microsoft_Sentinel_incident": {
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/incident-creation"
                                            },
                                            "type": "ApiConnectionWebhook"
                                        }
                                    }
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "azuresentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                                "connectionName": "[[variables('AzureSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                                                "connectionProperties": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    }
                                                }
                                            },
                                            "office365": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                                "connectionName": "[[variables('Office365ConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365')]"
                                            },
                                            "office365users": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('Office365UsersConnectionName'))]",
                                                "connectionName": "[[variables('Office365UsersConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/office365users')]"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(resourceId('Microsoft.Logic/workflows', 'Revoke-AADSignInSessions-incident-trigger'),'/'))))]",
                            "properties": {
                                "parentId": "[resourceId('Microsoft.Logic/workflows', 'Revoke-AADSignInSessions-incident-trigger')]",
                                "contentId": "Revoke-AADSignInSessions-incident-trigger",
                                "kind": "Playbook",
                                "version": "1.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "title": "Revoke Entra ID SignIn Sessions - incident trigger",
                        "description": "This playbook will revoke all signin sessions for the user using Graph API.  It will send an email to the user's manager.",
                        "prerequisites": "1. You will need to grant User.ReadWrite.All permissions to the managed identity.",
                        "lastUpdateTime": "2024-01-08T00:00:00Z",
                        "entities": [
                            "Account"
                        ],
                        "tags": [
                            "Remediation"
                        ],
                        "releaseNotes": {
                            "version": "1.0",
                            "title": "[replace('b', 'b', '')]",
                            "notes": [
                                "Initial version"
                            ]
                        }
                    }
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "Revoke-AADSignInSessions-incident-trigger",
                "contentKind": "Playbook",
                "displayName": "Revoke-EntraIDSignInSessions-incident",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-pl-r6is75joq5epm",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-pl-r6is75joq5epm",
                "version": "1.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring('Revoke-AADSignInSessions-entity-trigger')))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
            ],
            "properties": {
                "description": "Revoke-EntraIDSignIn-Session-entityTrigger Playbook with template version 3.2.9",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0",
                    "parameters": {
                        "PlaybookName": {
                            "defaultValue": "Revoke-EntraIDSignIn-Session-entityTrigger",
                            "type": "string"
                        }
                    },
                    "variables": {
                        "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
                        "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "_connection-2": "[[variables('connection-2')]",
                        "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
                        "workspace-name": "[parameters('workspace')]",
                        "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
                    },
                    "resources": [
                        {
                            "properties": {
                                "provisioningState": "Succeeded",
                                "state": "Enabled",
                                "definition": {
                                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                                    "contentVersion": "1.0.0.0",
                                    "parameters": {
                                        "$connections": {
                                            "type": "Object"
                                        }
                                    },
                                    "triggers": {
                                        "Microsoft_Sentinel_entity": {
                                            "type": "ApiConnectionWebhook",
                                            "inputs": {
                                                "body": {
                                                    "callback_url": "@{listCallbackUrl()}"
                                                },
                                                "host": {
                                                    "connection": {
                                                        "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                    }
                                                },
                                                "path": "/entity/@{encodeURIComponent('Account')}"
                                            }
                                        }
                                    },
                                    "actions": {
                                        "Condition": {
                                            "actions": {
                                                "Add_comment_to_incident_(V3)_-_session_revoked": {
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "incidentArmId": "@triggerBody()?['IncidentArmID']",
                                                            "message": "<p>Sign-in session revoked for the user - @{concat(triggerBody()?['Entity']?['properties']?['Name'], '@', triggerBody()?['Entity']?['properties']?['upnSuffix'])}</p>"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['microsoftsentinel']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/Incidents/Comment"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "HTTP_-_revoke_sign-in_session": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "not": {
                                                            "equals": [
                                                                "@triggerBody()?['IncidentArmID']",
                                                                "@null"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "HTTP_-_revoke_sign-in_session": {
                                            "type": "Http",
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                    "type": "ManagedServiceIdentity"
                                                },
                                                "method": "POST",
                                                "uri": "https://graph.microsoft.com/v1.0/users/@{concat(triggerBody()?['Entity']?['properties']?['Name'], '@', triggerBody()?['Entity']?['properties']?['upnSuffix'])}/revokeSignInSessions"
                                            }
                                        }
                                    }
                                },
                                "parameters": {
                                    "$connections": {
                                        "value": {
                                            "microsoftsentinel": {
                                                "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                                "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                                                "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                                                "connectionProperties": {
                                                    "authentication": {
                                                        "type": "ManagedServiceIdentity"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "name": "[[parameters('PlaybookName')]",
                            "type": "Microsoft.Logic/workflows",
                            "location": "[[variables('workspace-location-inline')]",
                            "tags": {
                                "hidden-SentinelTemplateName": "Revoke-AADSignIn-Session-entityTrigger",
                                "hidden-SentinelTemplateVersion": "1.0",
                                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "apiVersion": "2017-07-01",
                            "dependsOn": [
                                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Web/connections",
                            "apiVersion": "2016-06-01",
                            "name": "[[variables('MicrosoftSentinelConnectionName')]",
                            "location": "[[variables('workspace-location-inline')]",
                            "kind": "V1",
                            "properties": {
                                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                                "parameterValueType": "Alternative",
                                "api": {
                                    "id": "[[variables('_connection-2')]"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(resourceId('Microsoft.Logic/workflows', 'Revoke-AADSignInSessions-entity-trigger'),'/'))))]",
                            "properties": {
                                "parentId": "[resourceId('Microsoft.Logic/workflows', 'Revoke-AADSignInSessions-entity-trigger')]",
                                "contentId": "Revoke-AADSignInSessions-entity-trigger",
                                "kind": "Playbook",
                                "version": "1.0",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Entra ID",
                                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                                },
                                "author": {
                                    "name": "Microsoft",
                                    "email": "support@microsoft.com"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com/"
                                }
                            }
                        }
                    ],
                    "metadata": {
                        "title": "Revoke Entra ID  Sign-in session using entity trigger",
                        "description": "This playbook will revoke user's sign-in sessions and user will have to perform authentication again. It invalidates all the refresh tokens issued to applications for a user (as well as session cookies in a user's browser), by resetting the signInSessionsValidFromDateTime user property to the current date-time.",
                        "postDeployment": [
                            "1. Add Microsoft Sentinel Responder role to the managed identity.",
                            "2. Assign User.ReadWrite.All and Directory.ReadWrite.All API permissions to the managed identity."
                        ],
                        "lastUpdateTime": "2022-12-22T00:00:00Z",
                        "entities": [
                            "Account"
                        ],
                        "releaseNotes": {
                            "version": "1.0",
                            "title": "[replace('b', 'b', '')]",
                            "notes": [
                                "Initial version"
                            ]
                        }
                    }
                },
                "packageKind": "Solution",
                "packageVersion": "3.2.9",
                "packageName": "Microsoft Entra ID",
                "packageId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "contentSchemaVersion": "3.0.0",
                "contentId": "Revoke-AADSignInSessions-entity-trigger",
                "contentKind": "Playbook",
                "displayName": "Revoke-EntraIDSignIn-Session-entityTrigger",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-pl-avbaat244guhw",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-pl-avbaat244guhw",
                "version": "1.0",
                "isDeprecated": false
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
            "apiVersion": "2023-04-01-preview",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "version": "3.2.9",
                "kind": "Solution",
                "contentSchemaVersion": "3.0.0",
                "displayName": "Microsoft Entra ID",
                "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
                "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p><p>\u2022 Review the solution <a target=\"_blank\" href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Microsoft%20Entra%20ID/ReleaseNotes.md\" rel=\"noopener\">Release Notes</a></p><p>The <a target=\"_blank\" href=\"https://learn.microsoft.com/azure/active-directory/fundamentals/active-directory-whatis?WT.mc_id=Portal-fx\" rel=\"noopener\">Microsoft Entra ID</a> solution for Microsoft Sentinel enables you to ingest Microsoft Entra ID <a target=\"_blank\" href=\"https://learn.microsoft.com/azure/active-directory/reports-monitoring/concept-audit-logs?WT.mc_id=Portal-fx\" rel=\"noopener\">Audit</a>, <a target=\"_blank\" href=\"https://learn.microsoft.com/azure/active-directory/reports-monitoring/concept-sign-ins?WT.mc_id=Portal-fx\" rel=\"noopener\">Sign-in</a>, <a target=\"_blank\" href=\"https://learn.microsoft.com/azure/active-directory/reports-monitoring/concept-provisioning-logs?WT.mc_id=Portal-fx\" rel=\"noopener\">Provisioning</a>, <a target=\"_blank\" href=\"https://learn.microsoft.com/azure/active-directory/identity-protection/howto-identity-protection-investigate-risk?WT.mc_id=Portal-fx#risky-users\" rel=\"noopener\">Risk Events and Risky User/Service Principal</a> logs using Diagnostic Settings into Microsoft Sentinel.</p><p><strong>Data Connectors:</strong> 1, <strong>Workbooks:</strong> 2, <strong>Analytic Rules:</strong> 63, <strong>Playbooks:</strong> 11</p><p><a target=\"_blank\" href=\"https://aka.ms/azuresentinel\" rel=\"noopener\">Learn more about Microsoft Sentinel</a> | <a target=\"_blank\" href=\"https://aka.ms/azuresentinelsolutionsdoc\" rel=\"noopener\">Learn more about Solutions</a></p>",
                "contentKind": "Solution",
                "contentProductId": "azuresentinel.azure-sentinel-solution-azureactived-sl-ihqtuu7i6ie4y",
                "id": "azuresentinel.azure-sentinel-solution-azureactived-sl-ihqtuu7i6ie4y",
                "icon": "https://store-images.s-microsoft.com/image/apps.63019.f4e33ccb-a961-4bde-8f74-f1ba3bc32580.34d92f17-5ffa-4794-8462-1fa3b920db07.258df8cd-f330-41f7-bb62-953620add315",
                "contentId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "parentId": "azuresentinel.azure-sentinel-solution-azureactivedirectory",
                "source": {
                    "kind": "Solution",
                    "name": "Microsoft Entra ID",
                    "sourceId": "azuresentinel.azure-sentinel-solution-azureactivedirectory"
                },
                "author": {
                    "name": "Microsoft",
                    "email": "support@microsoft.com"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com/"
                },
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "kind": "DataConnector",
                            "contentId": "AzureActiveDirectory",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "Workbook",
                            "contentId": "AzureActiveDirectoryAuditLogsWorkbook",
                            "version": "1.2.0"
                        },
                        {
                            "kind": "Workbook",
                            "contentId": "AzureActiveDirectorySigninLogsWorkbook",
                            "version": "2.4.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "bb616d82-108f-47d3-9dec-9652ea0d3bf6",
                            "version": "1.1.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "6d63efa6-7c25-4bd4-a486-aa6bf50fde8a",
                            "version": "1.1.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "95dc4ae3-e0f2-48bd-b996-cdd22b90f9af",
                            "version": "1.1.2"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "5533fe80-905e-49d5-889a-df27d2c3976d",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "f80d951a-eddc-4171-b9d0-d616bb83efdc",
                            "version": "1.1.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "7cb8f77d-c52f-4e46-b82f-3cf2e106224a",
                            "version": "2.0.4"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "694c91ee-d606-4ba9-928e-405a2dd0ff0f",
                            "version": "1.1.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "50574fac-f8d1-4395-81c7-78a463ff0c52",
                            "version": "1.0.4"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "1ff56009-db01-4615-8211-d4fda21da02d",
                            "version": "1.1.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "87210ca1-49a4-4a7d-bb4a-4988752f978c",
                            "version": "2.0.3"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "97ad74c4-fdd9-4a3f-b6bf-5e28f4f71e06",
                            "version": "2.0.2"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "3fbc20a4-04c4-464e-8fcb-6667f53e4987",
                            "version": "2.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "218f60de-c269-457a-b882-9966632b9dc6",
                            "version": "1.0.7"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "3af9285d-bb98-4a35-ad29-5ea39ba0c628",
                            "version": "1.0.7"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "707494a5-8e44-486b-90f8-155d1797a8eb",
                            "version": "1.1.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "757e6a79-6d23-4ae6-9845-4dac170656b5",
                            "version": "1.1.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "eb8a9c1c-f532-4630-817c-1ecd8a60ed80",
                            "version": "1.1.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "c895c5b9-0fc6-40ce-9830-e8818862f2d5",
                            "version": "1.1.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "276d5190-38de-4eb2-9933-b3b72f4a5737",
                            "version": "1.1.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "229f71ba-d83b-42a5-b83b-11a641049ed1",
                            "version": "1.1.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "0101e08d-99cd-4a97-a9e0-27649c4369ad",
                            "version": "1.1.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "75ea5c39-93e5-489b-b1e1-68fa6c9d2d04",
                            "version": "1.0.3"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "bfb1c90f-8006-4325-98be-c7fffbc254d6",
                            "version": "1.0.4"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "a22740ec-fc1e-4c91-8de6-c29c6450ad00",
                            "version": "1.0.7"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "54e22fed-0ec6-4fb2-8312-2a3809a93f63",
                            "version": "1.0.2"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "223db5c1-1bf8-47d8-8806-bed401b356a4",
                            "version": "1.0.7"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "2cfc3c6e-f424-4b88-9cc9-c89f482d016a",
                            "version": "1.1.5"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "6ab1f7b2-61b8-442f-bc81-96afe7ad8c53",
                            "version": "1.0.6"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "2560515c-07d1-434e-87fb-ebe3af267760",
                            "version": "1.0.4"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "f948a32f-226c-4116-bddd-d95e91d97eb9",
                            "version": "1.1.2"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "39198934-62a0-4781-8416-a81265c03fd6",
                            "version": "1.0.2"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "d99cf5c3-d660-436c-895b-8a8f8448da23",
                            "version": "2.0.3"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "a8cc6d5c-4e7e-4b48-b4ac-d8a116c62a8b",
                            "version": "1.0.4"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "cda5928c-2c1e-4575-9dfa-07568bc27a4f",
                            "version": "1.0.2"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "4f42b94f-b210-42d1-a023-7fa1c51d969f",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "79566f41-df67-4e10-a703-c38a6213afd8",
                            "version": "1.1.2"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "8540c842-5bbc-4a24-9fb2-a836c0e55a51",
                            "version": "1.0.3"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "29e99017-e28d-47be-8b9a-c8c711f8a903",
                            "version": "1.0.3"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "b6988c32-4f3b-4a45-8313-b46b33061a74",
                            "version": "1.0.6"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "e42e889a-caaf-4dbb-aec6-371b37d64298",
                            "version": "1.0.5"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "5db427b2-f406-4274-b413-e9fcb29412f8",
                            "version": "1.0.4"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "14f6da04-2f96-44ee-9210-9ccc1be6401e",
                            "version": "1.0.2"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "70fc7201-f28e-4ba7-b9ea-c04b96701f13",
                            "version": "1.0.6"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "7d7e20f8-3384-4b71-811c-f5e950e8306c",
                            "version": "1.0.8"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "fa00014c-c5f4-4715-8f5b-ba567e19e41e",
                            "version": "1.0.0"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "34c5aff9-a8c2-4601-9654-c7e46342d03b",
                            "version": "1.1.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "269435e3-1db8-4423-9dfc-9bf59997da1c",
                            "version": "1.0.5"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "83ba3057-9ea3-4759-bf6a-933f2e5bc7ee",
                            "version": "1.1.5"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "fb7ca1c9-e14c-40a3-856e-28f3c14ea1ba",
                            "version": "1.0.4"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "d3980830-dd9d-40a5-911f-76b44dfdce16",
                            "version": "1.0.3"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "500c103a-0319-4d56-8e99-3cec8d860757",
                            "version": "2.1.3"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "28b42356-45af-40a6-a0b4-a554cdfd5d8a",
                            "version": "2.1.4"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "48607a29-a26a-4abf-8078-a06dbdd174a4",
                            "version": "1.0.7"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "02ef8d7e-fc3a-4d86-a457-650fa571d8d2",
                            "version": "2.1.11"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "3a3c6835-0086-40ca-b033-a93bf26d878f",
                            "version": "1.0.4"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "3533f74c-9207-4047-96e2-0eb9383be587",
                            "version": "1.0.2"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "6852d9da-8015-4b95-8ecf-d9572ee0395d",
                            "version": "1.0.3"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "aec77100-25c5-4254-a20a-8027ed92c46c",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "acc4c247-aaf7-494b-b5da-17f18863878a",
                            "version": "1.0.3"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "3a9d5ede-2b9d-43a2-acc4-d272321ff77c",
                            "version": "2.0.5"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "4d94d4a9-dc96-410a-8dea-4d4d4584188b",
                            "version": "1.0.6"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "746ddb63-f51b-4563-b449-a8b13cf302ec",
                            "version": "1.0.1"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "050b9b3d-53d0-4364-a3da-1b678b8211ec",
                            "version": "1.1.0"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "Block-AADUser-alert-trigger",
                            "version": "1.1"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "Block-AADUser-incident-trigger",
                            "version": "1.1"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "Prompt-User-alert-trigger",
                            "version": "1.1"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "Prompt-User-incident-trigger",
                            "version": "1.1"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "Reset-AADUserPassword-alert-trigger",
                            "version": "1.1"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "Reset-AADUserPassword-incident-trigger",
                            "version": "1.1"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "Block-AADUser-entity-trigger",
                            "version": "1.1"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "Reset-AADUserPassword-entity-trigger",
                            "version": "1.1"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "Revoke-AADSignInSessions-alert-trigger",
                            "version": "1.0"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "Revoke-AADSignInSessions-incident-trigger",
                            "version": "1.0"
                        },
                        {
                            "kind": "Playbook",
                            "contentId": "Revoke-AADSignInSessions-entity-trigger",
                            "version": "1.0"
                        }
                    ]
                },
                "firstPublishDate": "2022-05-16",
                "providers": [
                    "Microsoft"
                ],
                "categories": {
                    "domains": [
                        "Identity",
                        "Security - Automation (SOAR)"
                    ]
                },
                "isPreview": false,
                "isDeprecated": false
            },
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', 'azuresentinel.azure-sentinel-solution-azureactivedirectory')]"
        }
    ],
    "variables": {}
}
